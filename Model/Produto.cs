/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Produto
    /// </summary>
    [DataContract]
    public partial class Produto :  IEquatable<Produto>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Produto" /> class.
        /// </summary>
        /// <param name="empresa">empresa.</param>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="codigoProduto">codigoProduto.</param>
        /// <param name="descricaoProduto">descricaoProduto.</param>
        /// <param name="classeProduto">classeProduto.</param>
        /// <param name="tipoUc">tipoUc.</param>
        /// <param name="grupo">grupo.</param>
        /// <param name="codigoGrupo">codigoGrupo.</param>
        /// <param name="produtoNcm">produtoNcm.</param>
        /// <param name="aliquotaReducaoICMS">aliquotaReducaoICMS.</param>
        /// <param name="aliquotaSeguroCusto">aliquotaSeguroCusto.</param>
        /// <param name="especieSugestaoArmazenagem">especieSugestaoArmazenagem.</param>
        /// <param name="estoqueMaximo">estoqueMaximo.</param>
        /// <param name="estoqueMinimo">estoqueMinimo.</param>
        /// <param name="exigirCodigoRelacionado">exigirCodigoRelacionado.</param>
        /// <param name="expedirMesmoTipoUC">expedirMesmoTipoUC.</param>
        /// <param name="fatorBaseIcmsST">fatorBaseIcmsST.</param>
        /// <param name="fracionaEndereco">fracionaEndereco.</param>
        /// <param name="indiceFragilidade">indiceFragilidade.</param>
        /// <param name="informaDadoLogistico">informaDadoLogistico.</param>
        /// <param name="informaIDFracionamentoPicking">informaIDFracionamentoPicking.</param>
        /// <param name="informarPeso">informarPeso.</param>
        /// <param name="informarTipoUC">informarTipoUC.</param>
        /// <param name="informarVolume">informarVolume.</param>
        /// <param name="insercaoMultiplaSerie">insercaoMultiplaSerie.</param>
        /// <param name="kitProduto">kitProduto.</param>
        /// <param name="loteLogisticoDias">loteLogisticoDias.</param>
        /// <param name="permitirAlocacaoRessup">permitirAlocacaoRessup.</param>
        /// <param name="porcentagemFracionamento">porcentagemFracionamento.</param>
        /// <param name="precoMovimento">precoMovimento.</param>
        /// <param name="prioridadeBaixa">prioridadeBaixa.</param>
        /// <param name="priorizarMovarmParcial">priorizarMovarmParcial.</param>
        /// <param name="regraMovimentacao">regraMovimentacao.</param>
        /// <param name="scrapProduto">scrapProduto.</param>
        /// <param name="sequenciaInteira">sequenciaInteira.</param>
        /// <param name="sistemaModulo">sistemaModulo.</param>
        /// <param name="sugAgruparDadoLogisticoEnd">sugAgruparDadoLogisticoEnd.</param>
        /// <param name="sugAgruparDadoLogisticoUA">sugAgruparDadoLogisticoUA.</param>
        /// <param name="tipoRecurso">tipoRecurso.</param>
        /// <param name="tipoUaPadrao">tipoUaPadrao.</param>
        /// <param name="tipoUCInteiro">tipoUCInteiro.</param>
        /// <param name="utilizarCrossDocking">utilizarCrossDocking.</param>
        /// <param name="utilizarEmbalagemExpedConf">utilizarEmbalagemExpedConf.</param>
        /// <param name="utilizarRegraArmExclusivo">utilizarRegraArmExclusivo.</param>
        /// <param name="utilizarUnitizacao">utilizarUnitizacao.</param>
        /// <param name="validarClasse">validarClasse.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="ativo">ativo.</param>
        /// <param name="tipoProduto">tipoProduto.</param>
        /// <param name="modeloProduto">modeloProduto.</param>
        /// <param name="pesoBruto">pesoBruto.</param>
        /// <param name="informacaoAdicional1">informacaoAdicional1.</param>
        /// <param name="informacaoAdicional2">informacaoAdicional2.</param>
        /// <param name="informacaoAdicional3">informacaoAdicional3.</param>
        /// <param name="informacaoAdicional4">informacaoAdicional4.</param>
        /// <param name="informacaoAdicional5">informacaoAdicional5.</param>
        /// <param name="classificacaoFiscal">classificacaoFiscal.</param>
        /// <param name="observacaoProduto">observacaoProduto.</param>
        /// <param name="tipoUCPadrao">tipoUCPadrao.</param>
        /// <param name="precoCusto">precoCusto.</param>
        /// <param name="tipoUC">tipoUC.</param>
        /// <param name="dataAtualizacao">dataAtualizacao.</param>
        /// <param name="pesoProduto">pesoProduto.</param>
        /// <param name="comprimento">comprimento.</param>
        /// <param name="altura">altura.</param>
        /// <param name="largura">largura.</param>
        /// <param name="tipoBaixa">tipoBaixa.</param>
        /// <param name="tipoBaixaSecundario">tipoBaixaSecundario.</param>
        /// <param name="descricaoProduto2">descricaoProduto2.</param>
        /// <param name="regraArmazenagem">regraArmazenagem.</param>
        /// <param name="regraPicking">regraPicking.</param>
        /// <param name="informarNumeroSerie">informarNumeroSerie.</param>
        /// <param name="utilizarColetor">utilizarColetor.</param>
        /// <param name="regramovimentacaopicking">regramovimentacaopicking.</param>
        /// <param name="tipoLogistico">tipoLogistico.</param>
        /// <param name="utilizarConvocacaoAtiva">utilizarConvocacaoAtiva.</param>
        /// <param name="informarClasse">informarClasse.</param>
        /// <param name="tipoLogisticoFiscal">tipoLogisticoFiscal.</param>
        /// <param name="especieProduto">especieProduto.</param>
        /// <param name="especieRessuprimento">especieRessuprimento.</param>
        /// <param name="sitTributariaOrigem">sitTributariaOrigem.</param>
        /// <param name="situacaoTributaria">situacaoTributaria.</param>
        /// <param name="aliquotaIcms">aliquotaIcms.</param>
        /// <param name="fatorBaseIcms">fatorBaseIcms.</param>
        /// <param name="situacaoTributariaIpi">situacaoTributariaIpi.</param>
        /// <param name="codigoEnquadramentoIpi">codigoEnquadramentoIpi.</param>
        /// <param name="aliquotaIpi">aliquotaIpi.</param>
        /// <param name="fatorBaseIpi">fatorBaseIpi.</param>
        /// <param name="reportarNumeroFci">reportarNumeroFci.</param>
        /// <param name="informarLoteFabricacao">informarLoteFabricacao.</param>
        /// <param name="informarDataFabricacao">informarDataFabricacao.</param>
        /// <param name="informarDataVencimento">informarDataVencimento.</param>
        /// <param name="informarLoteGeral">informarLoteGeral.</param>
        /// <param name="tabelaFiscal">tabelaFiscal.</param>
        /// <param name="prazoValidade">prazoValidade.</param>
        /// <param name="codigoProdutoAnvisa">codigoProdutoAnvisa.</param>
        /// <param name="indicadorEscalaRelevante">indicadorEscalaRelevante.</param>
        /// <param name="cnpjFabricante">cnpjFabricante.</param>
        /// <param name="codigoBeneficioFiscal">codigoBeneficioFiscal.</param>
        /// <param name="categoria">categoria.</param>
        /// <param name="linha">linha.</param>
        /// <param name="origemProduto">origemProduto.</param>
        /// <param name="publicoAlvo">publicoAlvo.</param>
        /// <param name="subGrupo">subGrupo.</param>
        public Produto(Empresa empresa = default(Empresa), string codigoEmpresa = default(string), string codigoProduto = default(string), string descricaoProduto = default(string), ClasseProduto classeProduto = default(ClasseProduto), List<TipoUc> tipoUc = default(List<TipoUc>), Grupo grupo = default(Grupo), string codigoGrupo = default(string), ProdutoNcm produtoNcm = default(ProdutoNcm), decimal? aliquotaReducaoICMS = default(decimal?), decimal? aliquotaSeguroCusto = default(decimal?), decimal? especieSugestaoArmazenagem = default(decimal?), int? estoqueMaximo = default(int?), int? estoqueMinimo = default(int?), string exigirCodigoRelacionado = default(string), bool? expedirMesmoTipoUC = default(bool?), decimal? fatorBaseIcmsST = default(decimal?), bool? fracionaEndereco = default(bool?), bool? indiceFragilidade = default(bool?), bool? informaDadoLogistico = default(bool?), string informaIDFracionamentoPicking = default(string), string informarPeso = default(string), bool? informarTipoUC = default(bool?), bool? informarVolume = default(bool?), bool? insercaoMultiplaSerie = default(bool?), bool? kitProduto = default(bool?), decimal? loteLogisticoDias = default(decimal?), string permitirAlocacaoRessup = default(string), decimal? porcentagemFracionamento = default(decimal?), decimal? precoMovimento = default(decimal?), decimal? prioridadeBaixa = default(decimal?), string priorizarMovarmParcial = default(string), decimal? regraMovimentacao = default(decimal?), string scrapProduto = default(string), bool? sequenciaInteira = default(bool?), string sistemaModulo = default(string), bool? sugAgruparDadoLogisticoEnd = default(bool?), bool? sugAgruparDadoLogisticoUA = default(bool?), string tipoRecurso = default(string), string tipoUaPadrao = default(string), bool? tipoUCInteiro = default(bool?), string utilizarCrossDocking = default(string), bool? utilizarEmbalagemExpedConf = default(bool?), bool? utilizarRegraArmExclusivo = default(bool?), string utilizarUnitizacao = default(string), bool? validarClasse = default(bool?), string usuario = default(string), bool? ativo = default(bool?), string tipoProduto = default(string), string modeloProduto = default(string), decimal? pesoBruto = default(decimal?), string informacaoAdicional1 = default(string), string informacaoAdicional2 = default(string), string informacaoAdicional3 = default(string), string informacaoAdicional4 = default(string), string informacaoAdicional5 = default(string), string classificacaoFiscal = default(string), string observacaoProduto = default(string), string tipoUCPadrao = default(string), decimal? precoCusto = default(decimal?), TipoUc tipoUC = default(TipoUc), DateTime? dataAtualizacao = default(DateTime?), decimal? pesoProduto = default(decimal?), decimal? comprimento = default(decimal?), decimal? altura = default(decimal?), decimal? largura = default(decimal?), TipoBaixa tipoBaixa = default(TipoBaixa), TipoBaixa tipoBaixaSecundario = default(TipoBaixa), string descricaoProduto2 = default(string), decimal? regraArmazenagem = default(decimal?), decimal? regraPicking = default(decimal?), bool? informarNumeroSerie = default(bool?), bool? utilizarColetor = default(bool?), decimal? regramovimentacaopicking = default(decimal?), decimal? tipoLogistico = default(decimal?), bool? utilizarConvocacaoAtiva = default(bool?), bool? informarClasse = default(bool?), decimal? tipoLogisticoFiscal = default(decimal?), decimal? especieProduto = default(decimal?), decimal? especieRessuprimento = default(decimal?), SitTributariaOrigem sitTributariaOrigem = default(SitTributariaOrigem), SitTributariaIcms situacaoTributaria = default(SitTributariaIcms), decimal? aliquotaIcms = default(decimal?), decimal? fatorBaseIcms = default(decimal?), SituacaoTributariaIpi situacaoTributariaIpi = default(SituacaoTributariaIpi), CodigoEnquadramentoIpi codigoEnquadramentoIpi = default(CodigoEnquadramentoIpi), decimal? aliquotaIpi = default(decimal?), decimal? fatorBaseIpi = default(decimal?), bool? reportarNumeroFci = default(bool?), bool? informarLoteFabricacao = default(bool?), bool? informarDataFabricacao = default(bool?), bool? informarDataVencimento = default(bool?), bool? informarLoteGeral = default(bool?), TabelaFiscal tabelaFiscal = default(TabelaFiscal), decimal? prazoValidade = default(decimal?), string codigoProdutoAnvisa = default(string), string indicadorEscalaRelevante = default(string), string cnpjFabricante = default(string), string codigoBeneficioFiscal = default(string), Categoria categoria = default(Categoria), Linha linha = default(Linha), OrigemProduto origemProduto = default(OrigemProduto), PublicoAlvo publicoAlvo = default(PublicoAlvo), SubGrupo subGrupo = default(SubGrupo))
        {
            this.Empresa = empresa;
            this.CodigoEmpresa = codigoEmpresa;
            this.CodigoProduto = codigoProduto;
            this.DescricaoProduto = descricaoProduto;
            this.ClasseProduto = classeProduto;
            this.TipoUc = tipoUc;
            this.Grupo = grupo;
            this.CodigoGrupo = codigoGrupo;
            this.ProdutoNcm = produtoNcm;
            this.AliquotaReducaoICMS = aliquotaReducaoICMS;
            this.AliquotaSeguroCusto = aliquotaSeguroCusto;
            this.EspecieSugestaoArmazenagem = especieSugestaoArmazenagem;
            this.EstoqueMaximo = estoqueMaximo;
            this.EstoqueMinimo = estoqueMinimo;
            this.ExigirCodigoRelacionado = exigirCodigoRelacionado;
            this.ExpedirMesmoTipoUC = expedirMesmoTipoUC;
            this.FatorBaseIcmsST = fatorBaseIcmsST;
            this.FracionaEndereco = fracionaEndereco;
            this.IndiceFragilidade = indiceFragilidade;
            this.InformaDadoLogistico = informaDadoLogistico;
            this.InformaIDFracionamentoPicking = informaIDFracionamentoPicking;
            this.InformarPeso = informarPeso;
            this.InformarTipoUC = informarTipoUC;
            this.InformarVolume = informarVolume;
            this.InsercaoMultiplaSerie = insercaoMultiplaSerie;
            this.KitProduto = kitProduto;
            this.LoteLogisticoDias = loteLogisticoDias;
            this.PermitirAlocacaoRessup = permitirAlocacaoRessup;
            this.PorcentagemFracionamento = porcentagemFracionamento;
            this.PrecoMovimento = precoMovimento;
            this.PrioridadeBaixa = prioridadeBaixa;
            this.PriorizarMovarmParcial = priorizarMovarmParcial;
            this.RegraMovimentacao = regraMovimentacao;
            this.ScrapProduto = scrapProduto;
            this.SequenciaInteira = sequenciaInteira;
            this.SistemaModulo = sistemaModulo;
            this.SugAgruparDadoLogisticoEnd = sugAgruparDadoLogisticoEnd;
            this.SugAgruparDadoLogisticoUA = sugAgruparDadoLogisticoUA;
            this.TipoRecurso = tipoRecurso;
            this.TipoUaPadrao = tipoUaPadrao;
            this.TipoUCInteiro = tipoUCInteiro;
            this.UtilizarCrossDocking = utilizarCrossDocking;
            this.UtilizarEmbalagemExpedConf = utilizarEmbalagemExpedConf;
            this.UtilizarRegraArmExclusivo = utilizarRegraArmExclusivo;
            this.UtilizarUnitizacao = utilizarUnitizacao;
            this.ValidarClasse = validarClasse;
            this.Usuario = usuario;
            this.Ativo = ativo;
            this.TipoProduto = tipoProduto;
            this.ModeloProduto = modeloProduto;
            this.PesoBruto = pesoBruto;
            this.InformacaoAdicional1 = informacaoAdicional1;
            this.InformacaoAdicional2 = informacaoAdicional2;
            this.InformacaoAdicional3 = informacaoAdicional3;
            this.InformacaoAdicional4 = informacaoAdicional4;
            this.InformacaoAdicional5 = informacaoAdicional5;
            this.ClassificacaoFiscal = classificacaoFiscal;
            this.ObservacaoProduto = observacaoProduto;
            this.TipoUCPadrao = tipoUCPadrao;
            this.PrecoCusto = precoCusto;
            this.TipoUC = tipoUC;
            this.DataAtualizacao = dataAtualizacao;
            this.PesoProduto = pesoProduto;
            this.Comprimento = comprimento;
            this.Altura = altura;
            this.Largura = largura;
            this.TipoBaixa = tipoBaixa;
            this.TipoBaixaSecundario = tipoBaixaSecundario;
            this.DescricaoProduto2 = descricaoProduto2;
            this.RegraArmazenagem = regraArmazenagem;
            this.RegraPicking = regraPicking;
            this.InformarNumeroSerie = informarNumeroSerie;
            this.UtilizarColetor = utilizarColetor;
            this.Regramovimentacaopicking = regramovimentacaopicking;
            this.TipoLogistico = tipoLogistico;
            this.UtilizarConvocacaoAtiva = utilizarConvocacaoAtiva;
            this.InformarClasse = informarClasse;
            this.TipoLogisticoFiscal = tipoLogisticoFiscal;
            this.EspecieProduto = especieProduto;
            this.EspecieRessuprimento = especieRessuprimento;
            this.SitTributariaOrigem = sitTributariaOrigem;
            this.SituacaoTributaria = situacaoTributaria;
            this.AliquotaIcms = aliquotaIcms;
            this.FatorBaseIcms = fatorBaseIcms;
            this.SituacaoTributariaIpi = situacaoTributariaIpi;
            this.CodigoEnquadramentoIpi = codigoEnquadramentoIpi;
            this.AliquotaIpi = aliquotaIpi;
            this.FatorBaseIpi = fatorBaseIpi;
            this.ReportarNumeroFci = reportarNumeroFci;
            this.InformarLoteFabricacao = informarLoteFabricacao;
            this.InformarDataFabricacao = informarDataFabricacao;
            this.InformarDataVencimento = informarDataVencimento;
            this.InformarLoteGeral = informarLoteGeral;
            this.TabelaFiscal = tabelaFiscal;
            this.PrazoValidade = prazoValidade;
            this.CodigoProdutoAnvisa = codigoProdutoAnvisa;
            this.IndicadorEscalaRelevante = indicadorEscalaRelevante;
            this.CnpjFabricante = cnpjFabricante;
            this.CodigoBeneficioFiscal = codigoBeneficioFiscal;
            this.Categoria = categoria;
            this.Linha = linha;
            this.OrigemProduto = origemProduto;
            this.PublicoAlvo = publicoAlvo;
            this.SubGrupo = subGrupo;
        }
        
        /// <summary>
        /// Gets or Sets Empresa
        /// </summary>
        [DataMember(Name="empresa", EmitDefaultValue=false)]
        public Empresa Empresa { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets CodigoProduto
        /// </summary>
        [DataMember(Name="codigoProduto", EmitDefaultValue=false)]
        public string CodigoProduto { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoProduto
        /// </summary>
        [DataMember(Name="descricaoProduto", EmitDefaultValue=false)]
        public string DescricaoProduto { get; set; }

        /// <summary>
        /// Gets or Sets ClasseProduto
        /// </summary>
        [DataMember(Name="classeProduto", EmitDefaultValue=false)]
        public ClasseProduto ClasseProduto { get; set; }

        /// <summary>
        /// Gets or Sets TipoUc
        /// </summary>
        [DataMember(Name="tipoUc", EmitDefaultValue=false)]
        public List<TipoUc> TipoUc { get; set; }

        /// <summary>
        /// Gets or Sets Grupo
        /// </summary>
        [DataMember(Name="grupo", EmitDefaultValue=false)]
        public Grupo Grupo { get; set; }

        /// <summary>
        /// Gets or Sets CodigoGrupo
        /// </summary>
        [DataMember(Name="codigoGrupo", EmitDefaultValue=false)]
        public string CodigoGrupo { get; set; }

        /// <summary>
        /// Gets or Sets ProdutoNcm
        /// </summary>
        [DataMember(Name="produtoNcm", EmitDefaultValue=false)]
        public ProdutoNcm ProdutoNcm { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaReducaoICMS
        /// </summary>
        [DataMember(Name="aliquotaReducaoICMS", EmitDefaultValue=false)]
        public decimal? AliquotaReducaoICMS { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaSeguroCusto
        /// </summary>
        [DataMember(Name="aliquotaSeguroCusto", EmitDefaultValue=false)]
        public decimal? AliquotaSeguroCusto { get; set; }

        /// <summary>
        /// Gets or Sets EspecieSugestaoArmazenagem
        /// </summary>
        [DataMember(Name="especieSugestaoArmazenagem", EmitDefaultValue=false)]
        public decimal? EspecieSugestaoArmazenagem { get; set; }

        /// <summary>
        /// Gets or Sets EstoqueMaximo
        /// </summary>
        [DataMember(Name="estoqueMaximo", EmitDefaultValue=false)]
        public int? EstoqueMaximo { get; set; }

        /// <summary>
        /// Gets or Sets EstoqueMinimo
        /// </summary>
        [DataMember(Name="estoqueMinimo", EmitDefaultValue=false)]
        public int? EstoqueMinimo { get; set; }

        /// <summary>
        /// Gets or Sets ExigirCodigoRelacionado
        /// </summary>
        [DataMember(Name="exigirCodigoRelacionado", EmitDefaultValue=false)]
        public string ExigirCodigoRelacionado { get; set; }

        /// <summary>
        /// Gets or Sets ExpedirMesmoTipoUC
        /// </summary>
        [DataMember(Name="expedirMesmoTipoUC", EmitDefaultValue=false)]
        public bool? ExpedirMesmoTipoUC { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIcmsST
        /// </summary>
        [DataMember(Name="fatorBaseIcmsST", EmitDefaultValue=false)]
        public decimal? FatorBaseIcmsST { get; set; }

        /// <summary>
        /// Gets or Sets FracionaEndereco
        /// </summary>
        [DataMember(Name="fracionaEndereco", EmitDefaultValue=false)]
        public bool? FracionaEndereco { get; set; }

        /// <summary>
        /// Gets or Sets IndiceFragilidade
        /// </summary>
        [DataMember(Name="indiceFragilidade", EmitDefaultValue=false)]
        public bool? IndiceFragilidade { get; set; }

        /// <summary>
        /// Gets or Sets InformaDadoLogistico
        /// </summary>
        [DataMember(Name="informaDadoLogistico", EmitDefaultValue=false)]
        public bool? InformaDadoLogistico { get; set; }

        /// <summary>
        /// Gets or Sets InformaIDFracionamentoPicking
        /// </summary>
        [DataMember(Name="informaIDFracionamentoPicking", EmitDefaultValue=false)]
        public string InformaIDFracionamentoPicking { get; set; }

        /// <summary>
        /// Gets or Sets InformarPeso
        /// </summary>
        [DataMember(Name="informarPeso", EmitDefaultValue=false)]
        public string InformarPeso { get; set; }

        /// <summary>
        /// Gets or Sets InformarTipoUC
        /// </summary>
        [DataMember(Name="informarTipoUC", EmitDefaultValue=false)]
        public bool? InformarTipoUC { get; set; }

        /// <summary>
        /// Gets or Sets InformarVolume
        /// </summary>
        [DataMember(Name="informarVolume", EmitDefaultValue=false)]
        public bool? InformarVolume { get; set; }

        /// <summary>
        /// Gets or Sets InsercaoMultiplaSerie
        /// </summary>
        [DataMember(Name="insercaoMultiplaSerie", EmitDefaultValue=false)]
        public bool? InsercaoMultiplaSerie { get; set; }

        /// <summary>
        /// Gets or Sets KitProduto
        /// </summary>
        [DataMember(Name="kitProduto", EmitDefaultValue=false)]
        public bool? KitProduto { get; set; }

        /// <summary>
        /// Gets or Sets LoteLogisticoDias
        /// </summary>
        [DataMember(Name="loteLogisticoDias", EmitDefaultValue=false)]
        public decimal? LoteLogisticoDias { get; set; }

        /// <summary>
        /// Gets or Sets PermitirAlocacaoRessup
        /// </summary>
        [DataMember(Name="permitirAlocacaoRessup", EmitDefaultValue=false)]
        public string PermitirAlocacaoRessup { get; set; }

        /// <summary>
        /// Gets or Sets PorcentagemFracionamento
        /// </summary>
        [DataMember(Name="porcentagemFracionamento", EmitDefaultValue=false)]
        public decimal? PorcentagemFracionamento { get; set; }

        /// <summary>
        /// Gets or Sets PrecoMovimento
        /// </summary>
        [DataMember(Name="precoMovimento", EmitDefaultValue=false)]
        public decimal? PrecoMovimento { get; set; }

        /// <summary>
        /// Gets or Sets PrioridadeBaixa
        /// </summary>
        [DataMember(Name="prioridadeBaixa", EmitDefaultValue=false)]
        public decimal? PrioridadeBaixa { get; set; }

        /// <summary>
        /// Gets or Sets PriorizarMovarmParcial
        /// </summary>
        [DataMember(Name="priorizarMovarmParcial", EmitDefaultValue=false)]
        public string PriorizarMovarmParcial { get; set; }

        /// <summary>
        /// Gets or Sets RegraMovimentacao
        /// </summary>
        [DataMember(Name="regraMovimentacao", EmitDefaultValue=false)]
        public decimal? RegraMovimentacao { get; set; }

        /// <summary>
        /// Gets or Sets ScrapProduto
        /// </summary>
        [DataMember(Name="scrapProduto", EmitDefaultValue=false)]
        public string ScrapProduto { get; set; }

        /// <summary>
        /// Gets or Sets SequenciaInteira
        /// </summary>
        [DataMember(Name="sequenciaInteira", EmitDefaultValue=false)]
        public bool? SequenciaInteira { get; set; }

        /// <summary>
        /// Gets or Sets SistemaModulo
        /// </summary>
        [DataMember(Name="sistemaModulo", EmitDefaultValue=false)]
        public string SistemaModulo { get; set; }

        /// <summary>
        /// Gets or Sets SugAgruparDadoLogisticoEnd
        /// </summary>
        [DataMember(Name="sugAgruparDadoLogisticoEnd", EmitDefaultValue=false)]
        public bool? SugAgruparDadoLogisticoEnd { get; set; }

        /// <summary>
        /// Gets or Sets SugAgruparDadoLogisticoUA
        /// </summary>
        [DataMember(Name="sugAgruparDadoLogisticoUA", EmitDefaultValue=false)]
        public bool? SugAgruparDadoLogisticoUA { get; set; }

        /// <summary>
        /// Gets or Sets TipoRecurso
        /// </summary>
        [DataMember(Name="tipoRecurso", EmitDefaultValue=false)]
        public string TipoRecurso { get; set; }

        /// <summary>
        /// Gets or Sets TipoUaPadrao
        /// </summary>
        [DataMember(Name="tipoUaPadrao", EmitDefaultValue=false)]
        public string TipoUaPadrao { get; set; }

        /// <summary>
        /// Gets or Sets TipoUCInteiro
        /// </summary>
        [DataMember(Name="tipoUCInteiro", EmitDefaultValue=false)]
        public bool? TipoUCInteiro { get; set; }

        /// <summary>
        /// Gets or Sets UtilizarCrossDocking
        /// </summary>
        [DataMember(Name="utilizarCrossDocking", EmitDefaultValue=false)]
        public string UtilizarCrossDocking { get; set; }

        /// <summary>
        /// Gets or Sets UtilizarEmbalagemExpedConf
        /// </summary>
        [DataMember(Name="utilizarEmbalagemExpedConf", EmitDefaultValue=false)]
        public bool? UtilizarEmbalagemExpedConf { get; set; }

        /// <summary>
        /// Gets or Sets UtilizarRegraArmExclusivo
        /// </summary>
        [DataMember(Name="utilizarRegraArmExclusivo", EmitDefaultValue=false)]
        public bool? UtilizarRegraArmExclusivo { get; set; }

        /// <summary>
        /// Gets or Sets UtilizarUnitizacao
        /// </summary>
        [DataMember(Name="utilizarUnitizacao", EmitDefaultValue=false)]
        public string UtilizarUnitizacao { get; set; }

        /// <summary>
        /// Gets or Sets ValidarClasse
        /// </summary>
        [DataMember(Name="validarClasse", EmitDefaultValue=false)]
        public bool? ValidarClasse { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets Ativo
        /// </summary>
        [DataMember(Name="ativo", EmitDefaultValue=false)]
        public bool? Ativo { get; set; }

        /// <summary>
        /// Gets or Sets TipoProduto
        /// </summary>
        [DataMember(Name="tipoProduto", EmitDefaultValue=false)]
        public string TipoProduto { get; set; }

        /// <summary>
        /// Gets or Sets ModeloProduto
        /// </summary>
        [DataMember(Name="modeloProduto", EmitDefaultValue=false)]
        public string ModeloProduto { get; set; }

        /// <summary>
        /// Gets or Sets PesoBruto
        /// </summary>
        [DataMember(Name="pesoBruto", EmitDefaultValue=false)]
        public decimal? PesoBruto { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional1
        /// </summary>
        [DataMember(Name="informacaoAdicional1", EmitDefaultValue=false)]
        public string InformacaoAdicional1 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional2
        /// </summary>
        [DataMember(Name="informacaoAdicional2", EmitDefaultValue=false)]
        public string InformacaoAdicional2 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional3
        /// </summary>
        [DataMember(Name="informacaoAdicional3", EmitDefaultValue=false)]
        public string InformacaoAdicional3 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional4
        /// </summary>
        [DataMember(Name="informacaoAdicional4", EmitDefaultValue=false)]
        public string InformacaoAdicional4 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional5
        /// </summary>
        [DataMember(Name="informacaoAdicional5", EmitDefaultValue=false)]
        public string InformacaoAdicional5 { get; set; }

        /// <summary>
        /// Gets or Sets ClassificacaoFiscal
        /// </summary>
        [DataMember(Name="classificacaoFiscal", EmitDefaultValue=false)]
        public string ClassificacaoFiscal { get; set; }

        /// <summary>
        /// Gets or Sets ObservacaoProduto
        /// </summary>
        [DataMember(Name="observacaoProduto", EmitDefaultValue=false)]
        public string ObservacaoProduto { get; set; }

        /// <summary>
        /// Gets or Sets TipoUCPadrao
        /// </summary>
        [DataMember(Name="tipoUCPadrao", EmitDefaultValue=false)]
        public string TipoUCPadrao { get; set; }

        /// <summary>
        /// Gets or Sets PrecoCusto
        /// </summary>
        [DataMember(Name="precoCusto", EmitDefaultValue=false)]
        public decimal? PrecoCusto { get; set; }

        /// <summary>
        /// Gets or Sets TipoUC
        /// </summary>
        [DataMember(Name="tipoUC", EmitDefaultValue=false)]
        public TipoUc TipoUC { get; set; }

        /// <summary>
        /// Gets or Sets DataAtualizacao
        /// </summary>
        [DataMember(Name="dataAtualizacao", EmitDefaultValue=false)]
        public DateTime? DataAtualizacao { get; set; }

        /// <summary>
        /// Gets or Sets PesoProduto
        /// </summary>
        [DataMember(Name="pesoProduto", EmitDefaultValue=false)]
        public decimal? PesoProduto { get; set; }

        /// <summary>
        /// Gets or Sets Comprimento
        /// </summary>
        [DataMember(Name="comprimento", EmitDefaultValue=false)]
        public decimal? Comprimento { get; set; }

        /// <summary>
        /// Gets or Sets Altura
        /// </summary>
        [DataMember(Name="altura", EmitDefaultValue=false)]
        public decimal? Altura { get; set; }

        /// <summary>
        /// Gets or Sets Largura
        /// </summary>
        [DataMember(Name="largura", EmitDefaultValue=false)]
        public decimal? Largura { get; set; }

        /// <summary>
        /// Gets or Sets TipoBaixa
        /// </summary>
        [DataMember(Name="tipoBaixa", EmitDefaultValue=false)]
        public TipoBaixa TipoBaixa { get; set; }

        /// <summary>
        /// Gets or Sets TipoBaixaSecundario
        /// </summary>
        [DataMember(Name="tipoBaixaSecundario", EmitDefaultValue=false)]
        public TipoBaixa TipoBaixaSecundario { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoProduto2
        /// </summary>
        [DataMember(Name="descricaoProduto2", EmitDefaultValue=false)]
        public string DescricaoProduto2 { get; set; }

        /// <summary>
        /// Gets or Sets RegraArmazenagem
        /// </summary>
        [DataMember(Name="regraArmazenagem", EmitDefaultValue=false)]
        public decimal? RegraArmazenagem { get; set; }

        /// <summary>
        /// Gets or Sets RegraPicking
        /// </summary>
        [DataMember(Name="regraPicking", EmitDefaultValue=false)]
        public decimal? RegraPicking { get; set; }

        /// <summary>
        /// Gets or Sets InformarNumeroSerie
        /// </summary>
        [DataMember(Name="informarNumeroSerie", EmitDefaultValue=false)]
        public bool? InformarNumeroSerie { get; set; }

        /// <summary>
        /// Gets or Sets UtilizarColetor
        /// </summary>
        [DataMember(Name="utilizarColetor", EmitDefaultValue=false)]
        public bool? UtilizarColetor { get; set; }

        /// <summary>
        /// Gets or Sets Regramovimentacaopicking
        /// </summary>
        [DataMember(Name="regramovimentacaopicking", EmitDefaultValue=false)]
        public decimal? Regramovimentacaopicking { get; set; }

        /// <summary>
        /// Gets or Sets TipoLogistico
        /// </summary>
        [DataMember(Name="tipoLogistico", EmitDefaultValue=false)]
        public decimal? TipoLogistico { get; set; }

        /// <summary>
        /// Gets or Sets UtilizarConvocacaoAtiva
        /// </summary>
        [DataMember(Name="utilizarConvocacaoAtiva", EmitDefaultValue=false)]
        public bool? UtilizarConvocacaoAtiva { get; set; }

        /// <summary>
        /// Gets or Sets InformarClasse
        /// </summary>
        [DataMember(Name="informarClasse", EmitDefaultValue=false)]
        public bool? InformarClasse { get; set; }

        /// <summary>
        /// Gets or Sets TipoLogisticoFiscal
        /// </summary>
        [DataMember(Name="tipoLogisticoFiscal", EmitDefaultValue=false)]
        public decimal? TipoLogisticoFiscal { get; set; }

        /// <summary>
        /// Gets or Sets EspecieProduto
        /// </summary>
        [DataMember(Name="especieProduto", EmitDefaultValue=false)]
        public decimal? EspecieProduto { get; set; }

        /// <summary>
        /// Gets or Sets EspecieRessuprimento
        /// </summary>
        [DataMember(Name="especieRessuprimento", EmitDefaultValue=false)]
        public decimal? EspecieRessuprimento { get; set; }

        /// <summary>
        /// Gets or Sets SitTributariaOrigem
        /// </summary>
        [DataMember(Name="sitTributariaOrigem", EmitDefaultValue=false)]
        public SitTributariaOrigem SitTributariaOrigem { get; set; }

        /// <summary>
        /// Gets or Sets SituacaoTributaria
        /// </summary>
        [DataMember(Name="situacaoTributaria", EmitDefaultValue=false)]
        public SitTributariaIcms SituacaoTributaria { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcms
        /// </summary>
        [DataMember(Name="aliquotaIcms", EmitDefaultValue=false)]
        public decimal? AliquotaIcms { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIcms
        /// </summary>
        [DataMember(Name="fatorBaseIcms", EmitDefaultValue=false)]
        public decimal? FatorBaseIcms { get; set; }

        /// <summary>
        /// Gets or Sets SituacaoTributariaIpi
        /// </summary>
        [DataMember(Name="situacaoTributariaIpi", EmitDefaultValue=false)]
        public SituacaoTributariaIpi SituacaoTributariaIpi { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEnquadramentoIpi
        /// </summary>
        [DataMember(Name="codigoEnquadramentoIpi", EmitDefaultValue=false)]
        public CodigoEnquadramentoIpi CodigoEnquadramentoIpi { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIpi
        /// </summary>
        [DataMember(Name="aliquotaIpi", EmitDefaultValue=false)]
        public decimal? AliquotaIpi { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIpi
        /// </summary>
        [DataMember(Name="fatorBaseIpi", EmitDefaultValue=false)]
        public decimal? FatorBaseIpi { get; set; }

        /// <summary>
        /// Gets or Sets ReportarNumeroFci
        /// </summary>
        [DataMember(Name="reportarNumeroFci", EmitDefaultValue=false)]
        public bool? ReportarNumeroFci { get; set; }

        /// <summary>
        /// Gets or Sets InformarLoteFabricacao
        /// </summary>
        [DataMember(Name="informarLoteFabricacao", EmitDefaultValue=false)]
        public bool? InformarLoteFabricacao { get; set; }

        /// <summary>
        /// Gets or Sets InformarDataFabricacao
        /// </summary>
        [DataMember(Name="informarDataFabricacao", EmitDefaultValue=false)]
        public bool? InformarDataFabricacao { get; set; }

        /// <summary>
        /// Gets or Sets InformarDataVencimento
        /// </summary>
        [DataMember(Name="informarDataVencimento", EmitDefaultValue=false)]
        public bool? InformarDataVencimento { get; set; }

        /// <summary>
        /// Gets or Sets InformarLoteGeral
        /// </summary>
        [DataMember(Name="informarLoteGeral", EmitDefaultValue=false)]
        public bool? InformarLoteGeral { get; set; }

        /// <summary>
        /// Gets or Sets TabelaFiscal
        /// </summary>
        [DataMember(Name="tabelaFiscal", EmitDefaultValue=false)]
        public TabelaFiscal TabelaFiscal { get; set; }

        /// <summary>
        /// Gets or Sets PrazoValidade
        /// </summary>
        [DataMember(Name="prazoValidade", EmitDefaultValue=false)]
        public decimal? PrazoValidade { get; set; }

        /// <summary>
        /// Gets or Sets CodigoProdutoAnvisa
        /// </summary>
        [DataMember(Name="codigoProdutoAnvisa", EmitDefaultValue=false)]
        public string CodigoProdutoAnvisa { get; set; }

        /// <summary>
        /// Gets or Sets IndicadorEscalaRelevante
        /// </summary>
        [DataMember(Name="indicadorEscalaRelevante", EmitDefaultValue=false)]
        public string IndicadorEscalaRelevante { get; set; }

        /// <summary>
        /// Gets or Sets CnpjFabricante
        /// </summary>
        [DataMember(Name="cnpjFabricante", EmitDefaultValue=false)]
        public string CnpjFabricante { get; set; }

        /// <summary>
        /// Gets or Sets CodigoBeneficioFiscal
        /// </summary>
        [DataMember(Name="codigoBeneficioFiscal", EmitDefaultValue=false)]
        public string CodigoBeneficioFiscal { get; set; }

        /// <summary>
        /// Gets or Sets Categoria
        /// </summary>
        [DataMember(Name="categoria", EmitDefaultValue=false)]
        public Categoria Categoria { get; set; }

        /// <summary>
        /// Gets or Sets Linha
        /// </summary>
        [DataMember(Name="linha", EmitDefaultValue=false)]
        public Linha Linha { get; set; }

        /// <summary>
        /// Gets or Sets OrigemProduto
        /// </summary>
        [DataMember(Name="origemProduto", EmitDefaultValue=false)]
        public OrigemProduto OrigemProduto { get; set; }

        /// <summary>
        /// Gets or Sets PublicoAlvo
        /// </summary>
        [DataMember(Name="publicoAlvo", EmitDefaultValue=false)]
        public PublicoAlvo PublicoAlvo { get; set; }

        /// <summary>
        /// Gets or Sets SubGrupo
        /// </summary>
        [DataMember(Name="subGrupo", EmitDefaultValue=false)]
        public SubGrupo SubGrupo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Produto {\n");
            sb.Append("  Empresa: ").Append(Empresa).Append("\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  CodigoProduto: ").Append(CodigoProduto).Append("\n");
            sb.Append("  DescricaoProduto: ").Append(DescricaoProduto).Append("\n");
            sb.Append("  ClasseProduto: ").Append(ClasseProduto).Append("\n");
            sb.Append("  TipoUc: ").Append(TipoUc).Append("\n");
            sb.Append("  Grupo: ").Append(Grupo).Append("\n");
            sb.Append("  CodigoGrupo: ").Append(CodigoGrupo).Append("\n");
            sb.Append("  ProdutoNcm: ").Append(ProdutoNcm).Append("\n");
            sb.Append("  AliquotaReducaoICMS: ").Append(AliquotaReducaoICMS).Append("\n");
            sb.Append("  AliquotaSeguroCusto: ").Append(AliquotaSeguroCusto).Append("\n");
            sb.Append("  EspecieSugestaoArmazenagem: ").Append(EspecieSugestaoArmazenagem).Append("\n");
            sb.Append("  EstoqueMaximo: ").Append(EstoqueMaximo).Append("\n");
            sb.Append("  EstoqueMinimo: ").Append(EstoqueMinimo).Append("\n");
            sb.Append("  ExigirCodigoRelacionado: ").Append(ExigirCodigoRelacionado).Append("\n");
            sb.Append("  ExpedirMesmoTipoUC: ").Append(ExpedirMesmoTipoUC).Append("\n");
            sb.Append("  FatorBaseIcmsST: ").Append(FatorBaseIcmsST).Append("\n");
            sb.Append("  FracionaEndereco: ").Append(FracionaEndereco).Append("\n");
            sb.Append("  IndiceFragilidade: ").Append(IndiceFragilidade).Append("\n");
            sb.Append("  InformaDadoLogistico: ").Append(InformaDadoLogistico).Append("\n");
            sb.Append("  InformaIDFracionamentoPicking: ").Append(InformaIDFracionamentoPicking).Append("\n");
            sb.Append("  InformarPeso: ").Append(InformarPeso).Append("\n");
            sb.Append("  InformarTipoUC: ").Append(InformarTipoUC).Append("\n");
            sb.Append("  InformarVolume: ").Append(InformarVolume).Append("\n");
            sb.Append("  InsercaoMultiplaSerie: ").Append(InsercaoMultiplaSerie).Append("\n");
            sb.Append("  KitProduto: ").Append(KitProduto).Append("\n");
            sb.Append("  LoteLogisticoDias: ").Append(LoteLogisticoDias).Append("\n");
            sb.Append("  PermitirAlocacaoRessup: ").Append(PermitirAlocacaoRessup).Append("\n");
            sb.Append("  PorcentagemFracionamento: ").Append(PorcentagemFracionamento).Append("\n");
            sb.Append("  PrecoMovimento: ").Append(PrecoMovimento).Append("\n");
            sb.Append("  PrioridadeBaixa: ").Append(PrioridadeBaixa).Append("\n");
            sb.Append("  PriorizarMovarmParcial: ").Append(PriorizarMovarmParcial).Append("\n");
            sb.Append("  RegraMovimentacao: ").Append(RegraMovimentacao).Append("\n");
            sb.Append("  ScrapProduto: ").Append(ScrapProduto).Append("\n");
            sb.Append("  SequenciaInteira: ").Append(SequenciaInteira).Append("\n");
            sb.Append("  SistemaModulo: ").Append(SistemaModulo).Append("\n");
            sb.Append("  SugAgruparDadoLogisticoEnd: ").Append(SugAgruparDadoLogisticoEnd).Append("\n");
            sb.Append("  SugAgruparDadoLogisticoUA: ").Append(SugAgruparDadoLogisticoUA).Append("\n");
            sb.Append("  TipoRecurso: ").Append(TipoRecurso).Append("\n");
            sb.Append("  TipoUaPadrao: ").Append(TipoUaPadrao).Append("\n");
            sb.Append("  TipoUCInteiro: ").Append(TipoUCInteiro).Append("\n");
            sb.Append("  UtilizarCrossDocking: ").Append(UtilizarCrossDocking).Append("\n");
            sb.Append("  UtilizarEmbalagemExpedConf: ").Append(UtilizarEmbalagemExpedConf).Append("\n");
            sb.Append("  UtilizarRegraArmExclusivo: ").Append(UtilizarRegraArmExclusivo).Append("\n");
            sb.Append("  UtilizarUnitizacao: ").Append(UtilizarUnitizacao).Append("\n");
            sb.Append("  ValidarClasse: ").Append(ValidarClasse).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  Ativo: ").Append(Ativo).Append("\n");
            sb.Append("  TipoProduto: ").Append(TipoProduto).Append("\n");
            sb.Append("  ModeloProduto: ").Append(ModeloProduto).Append("\n");
            sb.Append("  PesoBruto: ").Append(PesoBruto).Append("\n");
            sb.Append("  InformacaoAdicional1: ").Append(InformacaoAdicional1).Append("\n");
            sb.Append("  InformacaoAdicional2: ").Append(InformacaoAdicional2).Append("\n");
            sb.Append("  InformacaoAdicional3: ").Append(InformacaoAdicional3).Append("\n");
            sb.Append("  InformacaoAdicional4: ").Append(InformacaoAdicional4).Append("\n");
            sb.Append("  InformacaoAdicional5: ").Append(InformacaoAdicional5).Append("\n");
            sb.Append("  ClassificacaoFiscal: ").Append(ClassificacaoFiscal).Append("\n");
            sb.Append("  ObservacaoProduto: ").Append(ObservacaoProduto).Append("\n");
            sb.Append("  TipoUCPadrao: ").Append(TipoUCPadrao).Append("\n");
            sb.Append("  PrecoCusto: ").Append(PrecoCusto).Append("\n");
            sb.Append("  TipoUC: ").Append(TipoUC).Append("\n");
            sb.Append("  DataAtualizacao: ").Append(DataAtualizacao).Append("\n");
            sb.Append("  PesoProduto: ").Append(PesoProduto).Append("\n");
            sb.Append("  Comprimento: ").Append(Comprimento).Append("\n");
            sb.Append("  Altura: ").Append(Altura).Append("\n");
            sb.Append("  Largura: ").Append(Largura).Append("\n");
            sb.Append("  TipoBaixa: ").Append(TipoBaixa).Append("\n");
            sb.Append("  TipoBaixaSecundario: ").Append(TipoBaixaSecundario).Append("\n");
            sb.Append("  DescricaoProduto2: ").Append(DescricaoProduto2).Append("\n");
            sb.Append("  RegraArmazenagem: ").Append(RegraArmazenagem).Append("\n");
            sb.Append("  RegraPicking: ").Append(RegraPicking).Append("\n");
            sb.Append("  InformarNumeroSerie: ").Append(InformarNumeroSerie).Append("\n");
            sb.Append("  UtilizarColetor: ").Append(UtilizarColetor).Append("\n");
            sb.Append("  Regramovimentacaopicking: ").Append(Regramovimentacaopicking).Append("\n");
            sb.Append("  TipoLogistico: ").Append(TipoLogistico).Append("\n");
            sb.Append("  UtilizarConvocacaoAtiva: ").Append(UtilizarConvocacaoAtiva).Append("\n");
            sb.Append("  InformarClasse: ").Append(InformarClasse).Append("\n");
            sb.Append("  TipoLogisticoFiscal: ").Append(TipoLogisticoFiscal).Append("\n");
            sb.Append("  EspecieProduto: ").Append(EspecieProduto).Append("\n");
            sb.Append("  EspecieRessuprimento: ").Append(EspecieRessuprimento).Append("\n");
            sb.Append("  SitTributariaOrigem: ").Append(SitTributariaOrigem).Append("\n");
            sb.Append("  SituacaoTributaria: ").Append(SituacaoTributaria).Append("\n");
            sb.Append("  AliquotaIcms: ").Append(AliquotaIcms).Append("\n");
            sb.Append("  FatorBaseIcms: ").Append(FatorBaseIcms).Append("\n");
            sb.Append("  SituacaoTributariaIpi: ").Append(SituacaoTributariaIpi).Append("\n");
            sb.Append("  CodigoEnquadramentoIpi: ").Append(CodigoEnquadramentoIpi).Append("\n");
            sb.Append("  AliquotaIpi: ").Append(AliquotaIpi).Append("\n");
            sb.Append("  FatorBaseIpi: ").Append(FatorBaseIpi).Append("\n");
            sb.Append("  ReportarNumeroFci: ").Append(ReportarNumeroFci).Append("\n");
            sb.Append("  InformarLoteFabricacao: ").Append(InformarLoteFabricacao).Append("\n");
            sb.Append("  InformarDataFabricacao: ").Append(InformarDataFabricacao).Append("\n");
            sb.Append("  InformarDataVencimento: ").Append(InformarDataVencimento).Append("\n");
            sb.Append("  InformarLoteGeral: ").Append(InformarLoteGeral).Append("\n");
            sb.Append("  TabelaFiscal: ").Append(TabelaFiscal).Append("\n");
            sb.Append("  PrazoValidade: ").Append(PrazoValidade).Append("\n");
            sb.Append("  CodigoProdutoAnvisa: ").Append(CodigoProdutoAnvisa).Append("\n");
            sb.Append("  IndicadorEscalaRelevante: ").Append(IndicadorEscalaRelevante).Append("\n");
            sb.Append("  CnpjFabricante: ").Append(CnpjFabricante).Append("\n");
            sb.Append("  CodigoBeneficioFiscal: ").Append(CodigoBeneficioFiscal).Append("\n");
            sb.Append("  Categoria: ").Append(Categoria).Append("\n");
            sb.Append("  Linha: ").Append(Linha).Append("\n");
            sb.Append("  OrigemProduto: ").Append(OrigemProduto).Append("\n");
            sb.Append("  PublicoAlvo: ").Append(PublicoAlvo).Append("\n");
            sb.Append("  SubGrupo: ").Append(SubGrupo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Produto);
        }

        /// <summary>
        /// Returns true if Produto instances are equal
        /// </summary>
        /// <param name="input">Instance of Produto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Produto input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Empresa == input.Empresa ||
                    (this.Empresa != null &&
                    this.Empresa.Equals(input.Empresa))
                ) && 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.CodigoProduto == input.CodigoProduto ||
                    (this.CodigoProduto != null &&
                    this.CodigoProduto.Equals(input.CodigoProduto))
                ) && 
                (
                    this.DescricaoProduto == input.DescricaoProduto ||
                    (this.DescricaoProduto != null &&
                    this.DescricaoProduto.Equals(input.DescricaoProduto))
                ) && 
                (
                    this.ClasseProduto == input.ClasseProduto ||
                    (this.ClasseProduto != null &&
                    this.ClasseProduto.Equals(input.ClasseProduto))
                ) && 
                (
                    this.TipoUc == input.TipoUc ||
                    this.TipoUc != null &&
                    this.TipoUc.SequenceEqual(input.TipoUc)
                ) && 
                (
                    this.Grupo == input.Grupo ||
                    (this.Grupo != null &&
                    this.Grupo.Equals(input.Grupo))
                ) && 
                (
                    this.CodigoGrupo == input.CodigoGrupo ||
                    (this.CodigoGrupo != null &&
                    this.CodigoGrupo.Equals(input.CodigoGrupo))
                ) && 
                (
                    this.ProdutoNcm == input.ProdutoNcm ||
                    (this.ProdutoNcm != null &&
                    this.ProdutoNcm.Equals(input.ProdutoNcm))
                ) && 
                (
                    this.AliquotaReducaoICMS == input.AliquotaReducaoICMS ||
                    (this.AliquotaReducaoICMS != null &&
                    this.AliquotaReducaoICMS.Equals(input.AliquotaReducaoICMS))
                ) && 
                (
                    this.AliquotaSeguroCusto == input.AliquotaSeguroCusto ||
                    (this.AliquotaSeguroCusto != null &&
                    this.AliquotaSeguroCusto.Equals(input.AliquotaSeguroCusto))
                ) && 
                (
                    this.EspecieSugestaoArmazenagem == input.EspecieSugestaoArmazenagem ||
                    (this.EspecieSugestaoArmazenagem != null &&
                    this.EspecieSugestaoArmazenagem.Equals(input.EspecieSugestaoArmazenagem))
                ) && 
                (
                    this.EstoqueMaximo == input.EstoqueMaximo ||
                    (this.EstoqueMaximo != null &&
                    this.EstoqueMaximo.Equals(input.EstoqueMaximo))
                ) && 
                (
                    this.EstoqueMinimo == input.EstoqueMinimo ||
                    (this.EstoqueMinimo != null &&
                    this.EstoqueMinimo.Equals(input.EstoqueMinimo))
                ) && 
                (
                    this.ExigirCodigoRelacionado == input.ExigirCodigoRelacionado ||
                    (this.ExigirCodigoRelacionado != null &&
                    this.ExigirCodigoRelacionado.Equals(input.ExigirCodigoRelacionado))
                ) && 
                (
                    this.ExpedirMesmoTipoUC == input.ExpedirMesmoTipoUC ||
                    (this.ExpedirMesmoTipoUC != null &&
                    this.ExpedirMesmoTipoUC.Equals(input.ExpedirMesmoTipoUC))
                ) && 
                (
                    this.FatorBaseIcmsST == input.FatorBaseIcmsST ||
                    (this.FatorBaseIcmsST != null &&
                    this.FatorBaseIcmsST.Equals(input.FatorBaseIcmsST))
                ) && 
                (
                    this.FracionaEndereco == input.FracionaEndereco ||
                    (this.FracionaEndereco != null &&
                    this.FracionaEndereco.Equals(input.FracionaEndereco))
                ) && 
                (
                    this.IndiceFragilidade == input.IndiceFragilidade ||
                    (this.IndiceFragilidade != null &&
                    this.IndiceFragilidade.Equals(input.IndiceFragilidade))
                ) && 
                (
                    this.InformaDadoLogistico == input.InformaDadoLogistico ||
                    (this.InformaDadoLogistico != null &&
                    this.InformaDadoLogistico.Equals(input.InformaDadoLogistico))
                ) && 
                (
                    this.InformaIDFracionamentoPicking == input.InformaIDFracionamentoPicking ||
                    (this.InformaIDFracionamentoPicking != null &&
                    this.InformaIDFracionamentoPicking.Equals(input.InformaIDFracionamentoPicking))
                ) && 
                (
                    this.InformarPeso == input.InformarPeso ||
                    (this.InformarPeso != null &&
                    this.InformarPeso.Equals(input.InformarPeso))
                ) && 
                (
                    this.InformarTipoUC == input.InformarTipoUC ||
                    (this.InformarTipoUC != null &&
                    this.InformarTipoUC.Equals(input.InformarTipoUC))
                ) && 
                (
                    this.InformarVolume == input.InformarVolume ||
                    (this.InformarVolume != null &&
                    this.InformarVolume.Equals(input.InformarVolume))
                ) && 
                (
                    this.InsercaoMultiplaSerie == input.InsercaoMultiplaSerie ||
                    (this.InsercaoMultiplaSerie != null &&
                    this.InsercaoMultiplaSerie.Equals(input.InsercaoMultiplaSerie))
                ) && 
                (
                    this.KitProduto == input.KitProduto ||
                    (this.KitProduto != null &&
                    this.KitProduto.Equals(input.KitProduto))
                ) && 
                (
                    this.LoteLogisticoDias == input.LoteLogisticoDias ||
                    (this.LoteLogisticoDias != null &&
                    this.LoteLogisticoDias.Equals(input.LoteLogisticoDias))
                ) && 
                (
                    this.PermitirAlocacaoRessup == input.PermitirAlocacaoRessup ||
                    (this.PermitirAlocacaoRessup != null &&
                    this.PermitirAlocacaoRessup.Equals(input.PermitirAlocacaoRessup))
                ) && 
                (
                    this.PorcentagemFracionamento == input.PorcentagemFracionamento ||
                    (this.PorcentagemFracionamento != null &&
                    this.PorcentagemFracionamento.Equals(input.PorcentagemFracionamento))
                ) && 
                (
                    this.PrecoMovimento == input.PrecoMovimento ||
                    (this.PrecoMovimento != null &&
                    this.PrecoMovimento.Equals(input.PrecoMovimento))
                ) && 
                (
                    this.PrioridadeBaixa == input.PrioridadeBaixa ||
                    (this.PrioridadeBaixa != null &&
                    this.PrioridadeBaixa.Equals(input.PrioridadeBaixa))
                ) && 
                (
                    this.PriorizarMovarmParcial == input.PriorizarMovarmParcial ||
                    (this.PriorizarMovarmParcial != null &&
                    this.PriorizarMovarmParcial.Equals(input.PriorizarMovarmParcial))
                ) && 
                (
                    this.RegraMovimentacao == input.RegraMovimentacao ||
                    (this.RegraMovimentacao != null &&
                    this.RegraMovimentacao.Equals(input.RegraMovimentacao))
                ) && 
                (
                    this.ScrapProduto == input.ScrapProduto ||
                    (this.ScrapProduto != null &&
                    this.ScrapProduto.Equals(input.ScrapProduto))
                ) && 
                (
                    this.SequenciaInteira == input.SequenciaInteira ||
                    (this.SequenciaInteira != null &&
                    this.SequenciaInteira.Equals(input.SequenciaInteira))
                ) && 
                (
                    this.SistemaModulo == input.SistemaModulo ||
                    (this.SistemaModulo != null &&
                    this.SistemaModulo.Equals(input.SistemaModulo))
                ) && 
                (
                    this.SugAgruparDadoLogisticoEnd == input.SugAgruparDadoLogisticoEnd ||
                    (this.SugAgruparDadoLogisticoEnd != null &&
                    this.SugAgruparDadoLogisticoEnd.Equals(input.SugAgruparDadoLogisticoEnd))
                ) && 
                (
                    this.SugAgruparDadoLogisticoUA == input.SugAgruparDadoLogisticoUA ||
                    (this.SugAgruparDadoLogisticoUA != null &&
                    this.SugAgruparDadoLogisticoUA.Equals(input.SugAgruparDadoLogisticoUA))
                ) && 
                (
                    this.TipoRecurso == input.TipoRecurso ||
                    (this.TipoRecurso != null &&
                    this.TipoRecurso.Equals(input.TipoRecurso))
                ) && 
                (
                    this.TipoUaPadrao == input.TipoUaPadrao ||
                    (this.TipoUaPadrao != null &&
                    this.TipoUaPadrao.Equals(input.TipoUaPadrao))
                ) && 
                (
                    this.TipoUCInteiro == input.TipoUCInteiro ||
                    (this.TipoUCInteiro != null &&
                    this.TipoUCInteiro.Equals(input.TipoUCInteiro))
                ) && 
                (
                    this.UtilizarCrossDocking == input.UtilizarCrossDocking ||
                    (this.UtilizarCrossDocking != null &&
                    this.UtilizarCrossDocking.Equals(input.UtilizarCrossDocking))
                ) && 
                (
                    this.UtilizarEmbalagemExpedConf == input.UtilizarEmbalagemExpedConf ||
                    (this.UtilizarEmbalagemExpedConf != null &&
                    this.UtilizarEmbalagemExpedConf.Equals(input.UtilizarEmbalagemExpedConf))
                ) && 
                (
                    this.UtilizarRegraArmExclusivo == input.UtilizarRegraArmExclusivo ||
                    (this.UtilizarRegraArmExclusivo != null &&
                    this.UtilizarRegraArmExclusivo.Equals(input.UtilizarRegraArmExclusivo))
                ) && 
                (
                    this.UtilizarUnitizacao == input.UtilizarUnitizacao ||
                    (this.UtilizarUnitizacao != null &&
                    this.UtilizarUnitizacao.Equals(input.UtilizarUnitizacao))
                ) && 
                (
                    this.ValidarClasse == input.ValidarClasse ||
                    (this.ValidarClasse != null &&
                    this.ValidarClasse.Equals(input.ValidarClasse))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.Ativo == input.Ativo ||
                    (this.Ativo != null &&
                    this.Ativo.Equals(input.Ativo))
                ) && 
                (
                    this.TipoProduto == input.TipoProduto ||
                    (this.TipoProduto != null &&
                    this.TipoProduto.Equals(input.TipoProduto))
                ) && 
                (
                    this.ModeloProduto == input.ModeloProduto ||
                    (this.ModeloProduto != null &&
                    this.ModeloProduto.Equals(input.ModeloProduto))
                ) && 
                (
                    this.PesoBruto == input.PesoBruto ||
                    (this.PesoBruto != null &&
                    this.PesoBruto.Equals(input.PesoBruto))
                ) && 
                (
                    this.InformacaoAdicional1 == input.InformacaoAdicional1 ||
                    (this.InformacaoAdicional1 != null &&
                    this.InformacaoAdicional1.Equals(input.InformacaoAdicional1))
                ) && 
                (
                    this.InformacaoAdicional2 == input.InformacaoAdicional2 ||
                    (this.InformacaoAdicional2 != null &&
                    this.InformacaoAdicional2.Equals(input.InformacaoAdicional2))
                ) && 
                (
                    this.InformacaoAdicional3 == input.InformacaoAdicional3 ||
                    (this.InformacaoAdicional3 != null &&
                    this.InformacaoAdicional3.Equals(input.InformacaoAdicional3))
                ) && 
                (
                    this.InformacaoAdicional4 == input.InformacaoAdicional4 ||
                    (this.InformacaoAdicional4 != null &&
                    this.InformacaoAdicional4.Equals(input.InformacaoAdicional4))
                ) && 
                (
                    this.InformacaoAdicional5 == input.InformacaoAdicional5 ||
                    (this.InformacaoAdicional5 != null &&
                    this.InformacaoAdicional5.Equals(input.InformacaoAdicional5))
                ) && 
                (
                    this.ClassificacaoFiscal == input.ClassificacaoFiscal ||
                    (this.ClassificacaoFiscal != null &&
                    this.ClassificacaoFiscal.Equals(input.ClassificacaoFiscal))
                ) && 
                (
                    this.ObservacaoProduto == input.ObservacaoProduto ||
                    (this.ObservacaoProduto != null &&
                    this.ObservacaoProduto.Equals(input.ObservacaoProduto))
                ) && 
                (
                    this.TipoUCPadrao == input.TipoUCPadrao ||
                    (this.TipoUCPadrao != null &&
                    this.TipoUCPadrao.Equals(input.TipoUCPadrao))
                ) && 
                (
                    this.PrecoCusto == input.PrecoCusto ||
                    (this.PrecoCusto != null &&
                    this.PrecoCusto.Equals(input.PrecoCusto))
                ) && 
                (
                    this.TipoUC == input.TipoUC ||
                    (this.TipoUC != null &&
                    this.TipoUC.Equals(input.TipoUC))
                ) && 
                (
                    this.DataAtualizacao == input.DataAtualizacao ||
                    (this.DataAtualizacao != null &&
                    this.DataAtualizacao.Equals(input.DataAtualizacao))
                ) && 
                (
                    this.PesoProduto == input.PesoProduto ||
                    (this.PesoProduto != null &&
                    this.PesoProduto.Equals(input.PesoProduto))
                ) && 
                (
                    this.Comprimento == input.Comprimento ||
                    (this.Comprimento != null &&
                    this.Comprimento.Equals(input.Comprimento))
                ) && 
                (
                    this.Altura == input.Altura ||
                    (this.Altura != null &&
                    this.Altura.Equals(input.Altura))
                ) && 
                (
                    this.Largura == input.Largura ||
                    (this.Largura != null &&
                    this.Largura.Equals(input.Largura))
                ) && 
                (
                    this.TipoBaixa == input.TipoBaixa ||
                    (this.TipoBaixa != null &&
                    this.TipoBaixa.Equals(input.TipoBaixa))
                ) && 
                (
                    this.TipoBaixaSecundario == input.TipoBaixaSecundario ||
                    (this.TipoBaixaSecundario != null &&
                    this.TipoBaixaSecundario.Equals(input.TipoBaixaSecundario))
                ) && 
                (
                    this.DescricaoProduto2 == input.DescricaoProduto2 ||
                    (this.DescricaoProduto2 != null &&
                    this.DescricaoProduto2.Equals(input.DescricaoProduto2))
                ) && 
                (
                    this.RegraArmazenagem == input.RegraArmazenagem ||
                    (this.RegraArmazenagem != null &&
                    this.RegraArmazenagem.Equals(input.RegraArmazenagem))
                ) && 
                (
                    this.RegraPicking == input.RegraPicking ||
                    (this.RegraPicking != null &&
                    this.RegraPicking.Equals(input.RegraPicking))
                ) && 
                (
                    this.InformarNumeroSerie == input.InformarNumeroSerie ||
                    (this.InformarNumeroSerie != null &&
                    this.InformarNumeroSerie.Equals(input.InformarNumeroSerie))
                ) && 
                (
                    this.UtilizarColetor == input.UtilizarColetor ||
                    (this.UtilizarColetor != null &&
                    this.UtilizarColetor.Equals(input.UtilizarColetor))
                ) && 
                (
                    this.Regramovimentacaopicking == input.Regramovimentacaopicking ||
                    (this.Regramovimentacaopicking != null &&
                    this.Regramovimentacaopicking.Equals(input.Regramovimentacaopicking))
                ) && 
                (
                    this.TipoLogistico == input.TipoLogistico ||
                    (this.TipoLogistico != null &&
                    this.TipoLogistico.Equals(input.TipoLogistico))
                ) && 
                (
                    this.UtilizarConvocacaoAtiva == input.UtilizarConvocacaoAtiva ||
                    (this.UtilizarConvocacaoAtiva != null &&
                    this.UtilizarConvocacaoAtiva.Equals(input.UtilizarConvocacaoAtiva))
                ) && 
                (
                    this.InformarClasse == input.InformarClasse ||
                    (this.InformarClasse != null &&
                    this.InformarClasse.Equals(input.InformarClasse))
                ) && 
                (
                    this.TipoLogisticoFiscal == input.TipoLogisticoFiscal ||
                    (this.TipoLogisticoFiscal != null &&
                    this.TipoLogisticoFiscal.Equals(input.TipoLogisticoFiscal))
                ) && 
                (
                    this.EspecieProduto == input.EspecieProduto ||
                    (this.EspecieProduto != null &&
                    this.EspecieProduto.Equals(input.EspecieProduto))
                ) && 
                (
                    this.EspecieRessuprimento == input.EspecieRessuprimento ||
                    (this.EspecieRessuprimento != null &&
                    this.EspecieRessuprimento.Equals(input.EspecieRessuprimento))
                ) && 
                (
                    this.SitTributariaOrigem == input.SitTributariaOrigem ||
                    (this.SitTributariaOrigem != null &&
                    this.SitTributariaOrigem.Equals(input.SitTributariaOrigem))
                ) && 
                (
                    this.SituacaoTributaria == input.SituacaoTributaria ||
                    (this.SituacaoTributaria != null &&
                    this.SituacaoTributaria.Equals(input.SituacaoTributaria))
                ) && 
                (
                    this.AliquotaIcms == input.AliquotaIcms ||
                    (this.AliquotaIcms != null &&
                    this.AliquotaIcms.Equals(input.AliquotaIcms))
                ) && 
                (
                    this.FatorBaseIcms == input.FatorBaseIcms ||
                    (this.FatorBaseIcms != null &&
                    this.FatorBaseIcms.Equals(input.FatorBaseIcms))
                ) && 
                (
                    this.SituacaoTributariaIpi == input.SituacaoTributariaIpi ||
                    (this.SituacaoTributariaIpi != null &&
                    this.SituacaoTributariaIpi.Equals(input.SituacaoTributariaIpi))
                ) && 
                (
                    this.CodigoEnquadramentoIpi == input.CodigoEnquadramentoIpi ||
                    (this.CodigoEnquadramentoIpi != null &&
                    this.CodigoEnquadramentoIpi.Equals(input.CodigoEnquadramentoIpi))
                ) && 
                (
                    this.AliquotaIpi == input.AliquotaIpi ||
                    (this.AliquotaIpi != null &&
                    this.AliquotaIpi.Equals(input.AliquotaIpi))
                ) && 
                (
                    this.FatorBaseIpi == input.FatorBaseIpi ||
                    (this.FatorBaseIpi != null &&
                    this.FatorBaseIpi.Equals(input.FatorBaseIpi))
                ) && 
                (
                    this.ReportarNumeroFci == input.ReportarNumeroFci ||
                    (this.ReportarNumeroFci != null &&
                    this.ReportarNumeroFci.Equals(input.ReportarNumeroFci))
                ) && 
                (
                    this.InformarLoteFabricacao == input.InformarLoteFabricacao ||
                    (this.InformarLoteFabricacao != null &&
                    this.InformarLoteFabricacao.Equals(input.InformarLoteFabricacao))
                ) && 
                (
                    this.InformarDataFabricacao == input.InformarDataFabricacao ||
                    (this.InformarDataFabricacao != null &&
                    this.InformarDataFabricacao.Equals(input.InformarDataFabricacao))
                ) && 
                (
                    this.InformarDataVencimento == input.InformarDataVencimento ||
                    (this.InformarDataVencimento != null &&
                    this.InformarDataVencimento.Equals(input.InformarDataVencimento))
                ) && 
                (
                    this.InformarLoteGeral == input.InformarLoteGeral ||
                    (this.InformarLoteGeral != null &&
                    this.InformarLoteGeral.Equals(input.InformarLoteGeral))
                ) && 
                (
                    this.TabelaFiscal == input.TabelaFiscal ||
                    (this.TabelaFiscal != null &&
                    this.TabelaFiscal.Equals(input.TabelaFiscal))
                ) && 
                (
                    this.PrazoValidade == input.PrazoValidade ||
                    (this.PrazoValidade != null &&
                    this.PrazoValidade.Equals(input.PrazoValidade))
                ) && 
                (
                    this.CodigoProdutoAnvisa == input.CodigoProdutoAnvisa ||
                    (this.CodigoProdutoAnvisa != null &&
                    this.CodigoProdutoAnvisa.Equals(input.CodigoProdutoAnvisa))
                ) && 
                (
                    this.IndicadorEscalaRelevante == input.IndicadorEscalaRelevante ||
                    (this.IndicadorEscalaRelevante != null &&
                    this.IndicadorEscalaRelevante.Equals(input.IndicadorEscalaRelevante))
                ) && 
                (
                    this.CnpjFabricante == input.CnpjFabricante ||
                    (this.CnpjFabricante != null &&
                    this.CnpjFabricante.Equals(input.CnpjFabricante))
                ) && 
                (
                    this.CodigoBeneficioFiscal == input.CodigoBeneficioFiscal ||
                    (this.CodigoBeneficioFiscal != null &&
                    this.CodigoBeneficioFiscal.Equals(input.CodigoBeneficioFiscal))
                ) && 
                (
                    this.Categoria == input.Categoria ||
                    (this.Categoria != null &&
                    this.Categoria.Equals(input.Categoria))
                ) && 
                (
                    this.Linha == input.Linha ||
                    (this.Linha != null &&
                    this.Linha.Equals(input.Linha))
                ) && 
                (
                    this.OrigemProduto == input.OrigemProduto ||
                    (this.OrigemProduto != null &&
                    this.OrigemProduto.Equals(input.OrigemProduto))
                ) && 
                (
                    this.PublicoAlvo == input.PublicoAlvo ||
                    (this.PublicoAlvo != null &&
                    this.PublicoAlvo.Equals(input.PublicoAlvo))
                ) && 
                (
                    this.SubGrupo == input.SubGrupo ||
                    (this.SubGrupo != null &&
                    this.SubGrupo.Equals(input.SubGrupo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Empresa != null)
                    hashCode = hashCode * 59 + this.Empresa.GetHashCode();
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.CodigoProduto != null)
                    hashCode = hashCode * 59 + this.CodigoProduto.GetHashCode();
                if (this.DescricaoProduto != null)
                    hashCode = hashCode * 59 + this.DescricaoProduto.GetHashCode();
                if (this.ClasseProduto != null)
                    hashCode = hashCode * 59 + this.ClasseProduto.GetHashCode();
                if (this.TipoUc != null)
                    hashCode = hashCode * 59 + this.TipoUc.GetHashCode();
                if (this.Grupo != null)
                    hashCode = hashCode * 59 + this.Grupo.GetHashCode();
                if (this.CodigoGrupo != null)
                    hashCode = hashCode * 59 + this.CodigoGrupo.GetHashCode();
                if (this.ProdutoNcm != null)
                    hashCode = hashCode * 59 + this.ProdutoNcm.GetHashCode();
                if (this.AliquotaReducaoICMS != null)
                    hashCode = hashCode * 59 + this.AliquotaReducaoICMS.GetHashCode();
                if (this.AliquotaSeguroCusto != null)
                    hashCode = hashCode * 59 + this.AliquotaSeguroCusto.GetHashCode();
                if (this.EspecieSugestaoArmazenagem != null)
                    hashCode = hashCode * 59 + this.EspecieSugestaoArmazenagem.GetHashCode();
                if (this.EstoqueMaximo != null)
                    hashCode = hashCode * 59 + this.EstoqueMaximo.GetHashCode();
                if (this.EstoqueMinimo != null)
                    hashCode = hashCode * 59 + this.EstoqueMinimo.GetHashCode();
                if (this.ExigirCodigoRelacionado != null)
                    hashCode = hashCode * 59 + this.ExigirCodigoRelacionado.GetHashCode();
                if (this.ExpedirMesmoTipoUC != null)
                    hashCode = hashCode * 59 + this.ExpedirMesmoTipoUC.GetHashCode();
                if (this.FatorBaseIcmsST != null)
                    hashCode = hashCode * 59 + this.FatorBaseIcmsST.GetHashCode();
                if (this.FracionaEndereco != null)
                    hashCode = hashCode * 59 + this.FracionaEndereco.GetHashCode();
                if (this.IndiceFragilidade != null)
                    hashCode = hashCode * 59 + this.IndiceFragilidade.GetHashCode();
                if (this.InformaDadoLogistico != null)
                    hashCode = hashCode * 59 + this.InformaDadoLogistico.GetHashCode();
                if (this.InformaIDFracionamentoPicking != null)
                    hashCode = hashCode * 59 + this.InformaIDFracionamentoPicking.GetHashCode();
                if (this.InformarPeso != null)
                    hashCode = hashCode * 59 + this.InformarPeso.GetHashCode();
                if (this.InformarTipoUC != null)
                    hashCode = hashCode * 59 + this.InformarTipoUC.GetHashCode();
                if (this.InformarVolume != null)
                    hashCode = hashCode * 59 + this.InformarVolume.GetHashCode();
                if (this.InsercaoMultiplaSerie != null)
                    hashCode = hashCode * 59 + this.InsercaoMultiplaSerie.GetHashCode();
                if (this.KitProduto != null)
                    hashCode = hashCode * 59 + this.KitProduto.GetHashCode();
                if (this.LoteLogisticoDias != null)
                    hashCode = hashCode * 59 + this.LoteLogisticoDias.GetHashCode();
                if (this.PermitirAlocacaoRessup != null)
                    hashCode = hashCode * 59 + this.PermitirAlocacaoRessup.GetHashCode();
                if (this.PorcentagemFracionamento != null)
                    hashCode = hashCode * 59 + this.PorcentagemFracionamento.GetHashCode();
                if (this.PrecoMovimento != null)
                    hashCode = hashCode * 59 + this.PrecoMovimento.GetHashCode();
                if (this.PrioridadeBaixa != null)
                    hashCode = hashCode * 59 + this.PrioridadeBaixa.GetHashCode();
                if (this.PriorizarMovarmParcial != null)
                    hashCode = hashCode * 59 + this.PriorizarMovarmParcial.GetHashCode();
                if (this.RegraMovimentacao != null)
                    hashCode = hashCode * 59 + this.RegraMovimentacao.GetHashCode();
                if (this.ScrapProduto != null)
                    hashCode = hashCode * 59 + this.ScrapProduto.GetHashCode();
                if (this.SequenciaInteira != null)
                    hashCode = hashCode * 59 + this.SequenciaInteira.GetHashCode();
                if (this.SistemaModulo != null)
                    hashCode = hashCode * 59 + this.SistemaModulo.GetHashCode();
                if (this.SugAgruparDadoLogisticoEnd != null)
                    hashCode = hashCode * 59 + this.SugAgruparDadoLogisticoEnd.GetHashCode();
                if (this.SugAgruparDadoLogisticoUA != null)
                    hashCode = hashCode * 59 + this.SugAgruparDadoLogisticoUA.GetHashCode();
                if (this.TipoRecurso != null)
                    hashCode = hashCode * 59 + this.TipoRecurso.GetHashCode();
                if (this.TipoUaPadrao != null)
                    hashCode = hashCode * 59 + this.TipoUaPadrao.GetHashCode();
                if (this.TipoUCInteiro != null)
                    hashCode = hashCode * 59 + this.TipoUCInteiro.GetHashCode();
                if (this.UtilizarCrossDocking != null)
                    hashCode = hashCode * 59 + this.UtilizarCrossDocking.GetHashCode();
                if (this.UtilizarEmbalagemExpedConf != null)
                    hashCode = hashCode * 59 + this.UtilizarEmbalagemExpedConf.GetHashCode();
                if (this.UtilizarRegraArmExclusivo != null)
                    hashCode = hashCode * 59 + this.UtilizarRegraArmExclusivo.GetHashCode();
                if (this.UtilizarUnitizacao != null)
                    hashCode = hashCode * 59 + this.UtilizarUnitizacao.GetHashCode();
                if (this.ValidarClasse != null)
                    hashCode = hashCode * 59 + this.ValidarClasse.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.Ativo != null)
                    hashCode = hashCode * 59 + this.Ativo.GetHashCode();
                if (this.TipoProduto != null)
                    hashCode = hashCode * 59 + this.TipoProduto.GetHashCode();
                if (this.ModeloProduto != null)
                    hashCode = hashCode * 59 + this.ModeloProduto.GetHashCode();
                if (this.PesoBruto != null)
                    hashCode = hashCode * 59 + this.PesoBruto.GetHashCode();
                if (this.InformacaoAdicional1 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional1.GetHashCode();
                if (this.InformacaoAdicional2 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional2.GetHashCode();
                if (this.InformacaoAdicional3 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional3.GetHashCode();
                if (this.InformacaoAdicional4 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional4.GetHashCode();
                if (this.InformacaoAdicional5 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional5.GetHashCode();
                if (this.ClassificacaoFiscal != null)
                    hashCode = hashCode * 59 + this.ClassificacaoFiscal.GetHashCode();
                if (this.ObservacaoProduto != null)
                    hashCode = hashCode * 59 + this.ObservacaoProduto.GetHashCode();
                if (this.TipoUCPadrao != null)
                    hashCode = hashCode * 59 + this.TipoUCPadrao.GetHashCode();
                if (this.PrecoCusto != null)
                    hashCode = hashCode * 59 + this.PrecoCusto.GetHashCode();
                if (this.TipoUC != null)
                    hashCode = hashCode * 59 + this.TipoUC.GetHashCode();
                if (this.DataAtualizacao != null)
                    hashCode = hashCode * 59 + this.DataAtualizacao.GetHashCode();
                if (this.PesoProduto != null)
                    hashCode = hashCode * 59 + this.PesoProduto.GetHashCode();
                if (this.Comprimento != null)
                    hashCode = hashCode * 59 + this.Comprimento.GetHashCode();
                if (this.Altura != null)
                    hashCode = hashCode * 59 + this.Altura.GetHashCode();
                if (this.Largura != null)
                    hashCode = hashCode * 59 + this.Largura.GetHashCode();
                if (this.TipoBaixa != null)
                    hashCode = hashCode * 59 + this.TipoBaixa.GetHashCode();
                if (this.TipoBaixaSecundario != null)
                    hashCode = hashCode * 59 + this.TipoBaixaSecundario.GetHashCode();
                if (this.DescricaoProduto2 != null)
                    hashCode = hashCode * 59 + this.DescricaoProduto2.GetHashCode();
                if (this.RegraArmazenagem != null)
                    hashCode = hashCode * 59 + this.RegraArmazenagem.GetHashCode();
                if (this.RegraPicking != null)
                    hashCode = hashCode * 59 + this.RegraPicking.GetHashCode();
                if (this.InformarNumeroSerie != null)
                    hashCode = hashCode * 59 + this.InformarNumeroSerie.GetHashCode();
                if (this.UtilizarColetor != null)
                    hashCode = hashCode * 59 + this.UtilizarColetor.GetHashCode();
                if (this.Regramovimentacaopicking != null)
                    hashCode = hashCode * 59 + this.Regramovimentacaopicking.GetHashCode();
                if (this.TipoLogistico != null)
                    hashCode = hashCode * 59 + this.TipoLogistico.GetHashCode();
                if (this.UtilizarConvocacaoAtiva != null)
                    hashCode = hashCode * 59 + this.UtilizarConvocacaoAtiva.GetHashCode();
                if (this.InformarClasse != null)
                    hashCode = hashCode * 59 + this.InformarClasse.GetHashCode();
                if (this.TipoLogisticoFiscal != null)
                    hashCode = hashCode * 59 + this.TipoLogisticoFiscal.GetHashCode();
                if (this.EspecieProduto != null)
                    hashCode = hashCode * 59 + this.EspecieProduto.GetHashCode();
                if (this.EspecieRessuprimento != null)
                    hashCode = hashCode * 59 + this.EspecieRessuprimento.GetHashCode();
                if (this.SitTributariaOrigem != null)
                    hashCode = hashCode * 59 + this.SitTributariaOrigem.GetHashCode();
                if (this.SituacaoTributaria != null)
                    hashCode = hashCode * 59 + this.SituacaoTributaria.GetHashCode();
                if (this.AliquotaIcms != null)
                    hashCode = hashCode * 59 + this.AliquotaIcms.GetHashCode();
                if (this.FatorBaseIcms != null)
                    hashCode = hashCode * 59 + this.FatorBaseIcms.GetHashCode();
                if (this.SituacaoTributariaIpi != null)
                    hashCode = hashCode * 59 + this.SituacaoTributariaIpi.GetHashCode();
                if (this.CodigoEnquadramentoIpi != null)
                    hashCode = hashCode * 59 + this.CodigoEnquadramentoIpi.GetHashCode();
                if (this.AliquotaIpi != null)
                    hashCode = hashCode * 59 + this.AliquotaIpi.GetHashCode();
                if (this.FatorBaseIpi != null)
                    hashCode = hashCode * 59 + this.FatorBaseIpi.GetHashCode();
                if (this.ReportarNumeroFci != null)
                    hashCode = hashCode * 59 + this.ReportarNumeroFci.GetHashCode();
                if (this.InformarLoteFabricacao != null)
                    hashCode = hashCode * 59 + this.InformarLoteFabricacao.GetHashCode();
                if (this.InformarDataFabricacao != null)
                    hashCode = hashCode * 59 + this.InformarDataFabricacao.GetHashCode();
                if (this.InformarDataVencimento != null)
                    hashCode = hashCode * 59 + this.InformarDataVencimento.GetHashCode();
                if (this.InformarLoteGeral != null)
                    hashCode = hashCode * 59 + this.InformarLoteGeral.GetHashCode();
                if (this.TabelaFiscal != null)
                    hashCode = hashCode * 59 + this.TabelaFiscal.GetHashCode();
                if (this.PrazoValidade != null)
                    hashCode = hashCode * 59 + this.PrazoValidade.GetHashCode();
                if (this.CodigoProdutoAnvisa != null)
                    hashCode = hashCode * 59 + this.CodigoProdutoAnvisa.GetHashCode();
                if (this.IndicadorEscalaRelevante != null)
                    hashCode = hashCode * 59 + this.IndicadorEscalaRelevante.GetHashCode();
                if (this.CnpjFabricante != null)
                    hashCode = hashCode * 59 + this.CnpjFabricante.GetHashCode();
                if (this.CodigoBeneficioFiscal != null)
                    hashCode = hashCode * 59 + this.CodigoBeneficioFiscal.GetHashCode();
                if (this.Categoria != null)
                    hashCode = hashCode * 59 + this.Categoria.GetHashCode();
                if (this.Linha != null)
                    hashCode = hashCode * 59 + this.Linha.GetHashCode();
                if (this.OrigemProduto != null)
                    hashCode = hashCode * 59 + this.OrigemProduto.GetHashCode();
                if (this.PublicoAlvo != null)
                    hashCode = hashCode * 59 + this.PublicoAlvo.GetHashCode();
                if (this.SubGrupo != null)
                    hashCode = hashCode * 59 + this.SubGrupo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
