/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Empresa
    /// </summary>
    [DataContract]
    public partial class Empresa :  IEquatable<Empresa>, IValidatableObject
    {
        /// <summary>
        /// Defines TipoPessoaEmpresa
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TipoPessoaEmpresaEnum
        {
            
            /// <summary>
            /// Enum F for value: F
            /// </summary>
            [EnumMember(Value = "F")]
            F = 1,
            
            /// <summary>
            /// Enum J for value: J
            /// </summary>
            [EnumMember(Value = "J")]
            J = 2
        }

        /// <summary>
        /// Gets or Sets TipoPessoaEmpresa
        /// </summary>
        [DataMember(Name="tipoPessoaEmpresa", EmitDefaultValue=false)]
        public TipoPessoaEmpresaEnum TipoPessoaEmpresa { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="Empresa" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Empresa() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Empresa" /> class.
        /// </summary>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="descricaoEmpresa">descricaoEmpresa.</param>
        /// <param name="enderecoEmpresa">enderecoEmpresa.</param>
        /// <param name="bairroEmpresa">bairroEmpresa.</param>
        /// <param name="cepEmpresa">cepEmpresa.</param>
        /// <param name="municipioEmpresa">municipioEmpresa.</param>
        /// <param name="numeroEndereco">numeroEndereco.</param>
        /// <param name="getsCGCCPFEmpresa">getsCGCCPFEmpresa.</param>
        /// <param name="foneEmpresa">foneEmpresa.</param>
        /// <param name="ufEmpresa">ufEmpresa.</param>
        /// <param name="emailEmpresa">emailEmpresa.</param>
        /// <param name="paisEmpresa">paisEmpresa.</param>
        /// <param name="complementoEmpresa">complementoEmpresa.</param>
        /// <param name="observacaoEmpresa">observacaoEmpresa.</param>
        /// <param name="tipoPessoaEmpresa">tipoPessoaEmpresa (required).</param>
        /// <param name="descricaoEmpresa2">descricaoEmpresa2.</param>
        /// <param name="depositante">depositante.</param>
        /// <param name="transportadora">transportadora.</param>
        /// <param name="localidade">localidade.</param>
        /// <param name="ativo">ativo.</param>
        /// <param name="getiErgEmpresa">getiErgEmpresa.</param>
        /// <param name="inscricaoMunicipal">inscricaoMunicipal.</param>
        /// <param name="dataAtualizacao">dataAtualizacao.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="sistemaModulo">sistemaModulo.</param>
        /// <param name="cnaeFiscal">cnaeFiscal.</param>
        /// <param name="inscricaoSuframa">inscricaoSuframa.</param>
        /// <param name="indicadorIE">indicadorIE.</param>
        /// <param name="grupos">grupos.</param>
        /// <param name="tipoEmpresa">tipoEmpresa.</param>
        /// <param name="usuarioAtualizacao">usuarioAtualizacao.</param>
        /// <param name="uf">uf.</param>
        public Empresa(string codigoEmpresa = default(string), string descricaoEmpresa = default(string), string enderecoEmpresa = default(string), string bairroEmpresa = default(string), string cepEmpresa = default(string), string municipioEmpresa = default(string), string numeroEndereco = default(string), string getsCGCCPFEmpresa = default(string), string foneEmpresa = default(string), string ufEmpresa = default(string), string emailEmpresa = default(string), string paisEmpresa = default(string), string complementoEmpresa = default(string), string observacaoEmpresa = default(string), TipoPessoaEmpresaEnum tipoPessoaEmpresa = default(TipoPessoaEmpresaEnum), string descricaoEmpresa2 = default(string), int? depositante = default(int?), bool? transportadora = default(bool?), Localidade localidade = default(Localidade), int? ativo = default(int?), string getiErgEmpresa = default(string), string inscricaoMunicipal = default(string), DateTime? dataAtualizacao = default(DateTime?), string usuario = default(string), int? sistemaModulo = default(int?), CnaeFiscal cnaeFiscal = default(CnaeFiscal), string inscricaoSuframa = default(string), IndicadorIE indicadorIE = default(IndicadorIE), List<GrupoEmpresa> grupos = default(List<GrupoEmpresa>), TipoEmpresa tipoEmpresa = default(TipoEmpresa), string usuarioAtualizacao = default(string), UnidadeFederativa uf = default(UnidadeFederativa))
        {
            // to ensure "tipoPessoaEmpresa" is required (not null)
            if (tipoPessoaEmpresa == null)
            {
                throw new InvalidDataException("tipoPessoaEmpresa is a required property for Empresa and cannot be null");
            }
            else
            {
                this.TipoPessoaEmpresa = tipoPessoaEmpresa;
            }
            this.CodigoEmpresa = codigoEmpresa;
            this.DescricaoEmpresa = descricaoEmpresa;
            this.EnderecoEmpresa = enderecoEmpresa;
            this.BairroEmpresa = bairroEmpresa;
            this.CepEmpresa = cepEmpresa;
            this.MunicipioEmpresa = municipioEmpresa;
            this.NumeroEndereco = numeroEndereco;
            this.GetsCGCCPFEmpresa = getsCGCCPFEmpresa;
            this.FoneEmpresa = foneEmpresa;
            this.UfEmpresa = ufEmpresa;
            this.EmailEmpresa = emailEmpresa;
            this.PaisEmpresa = paisEmpresa;
            this.ComplementoEmpresa = complementoEmpresa;
            this.ObservacaoEmpresa = observacaoEmpresa;
            this.DescricaoEmpresa2 = descricaoEmpresa2;
            this.Depositante = depositante;
            this.Transportadora = transportadora;
            this.Localidade = localidade;
            this.Ativo = ativo;
            this.GetiErgEmpresa = getiErgEmpresa;
            this.InscricaoMunicipal = inscricaoMunicipal;
            this.DataAtualizacao = dataAtualizacao;
            this.Usuario = usuario;
            this.SistemaModulo = sistemaModulo;
            this.CnaeFiscal = cnaeFiscal;
            this.InscricaoSuframa = inscricaoSuframa;
            this.IndicadorIE = indicadorIE;
            this.Grupos = grupos;
            this.TipoEmpresa = tipoEmpresa;
            this.UsuarioAtualizacao = usuarioAtualizacao;
            this.Uf = uf;
        }
        
        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoEmpresa
        /// </summary>
        [DataMember(Name="descricaoEmpresa", EmitDefaultValue=false)]
        public string DescricaoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets EnderecoEmpresa
        /// </summary>
        [DataMember(Name="enderecoEmpresa", EmitDefaultValue=false)]
        public string EnderecoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets BairroEmpresa
        /// </summary>
        [DataMember(Name="bairroEmpresa", EmitDefaultValue=false)]
        public string BairroEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets CepEmpresa
        /// </summary>
        [DataMember(Name="cepEmpresa", EmitDefaultValue=false)]
        public string CepEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets MunicipioEmpresa
        /// </summary>
        [DataMember(Name="municipioEmpresa", EmitDefaultValue=false)]
        public string MunicipioEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets NumeroEndereco
        /// </summary>
        [DataMember(Name="numeroEndereco", EmitDefaultValue=false)]
        public string NumeroEndereco { get; set; }

        /// <summary>
        /// Gets or Sets GetsCGCCPFEmpresa
        /// </summary>
        [DataMember(Name="getsCGCCPFEmpresa", EmitDefaultValue=false)]
        public string GetsCGCCPFEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets FoneEmpresa
        /// </summary>
        [DataMember(Name="foneEmpresa", EmitDefaultValue=false)]
        public string FoneEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets UfEmpresa
        /// </summary>
        [DataMember(Name="ufEmpresa", EmitDefaultValue=false)]
        public string UfEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets EmailEmpresa
        /// </summary>
        [DataMember(Name="emailEmpresa", EmitDefaultValue=false)]
        public string EmailEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets PaisEmpresa
        /// </summary>
        [DataMember(Name="paisEmpresa", EmitDefaultValue=false)]
        public string PaisEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets ComplementoEmpresa
        /// </summary>
        [DataMember(Name="complementoEmpresa", EmitDefaultValue=false)]
        public string ComplementoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets ObservacaoEmpresa
        /// </summary>
        [DataMember(Name="observacaoEmpresa", EmitDefaultValue=false)]
        public string ObservacaoEmpresa { get; set; }


        /// <summary>
        /// Gets or Sets DescricaoEmpresa2
        /// </summary>
        [DataMember(Name="descricaoEmpresa2", EmitDefaultValue=false)]
        public string DescricaoEmpresa2 { get; set; }

        /// <summary>
        /// Gets or Sets Depositante
        /// </summary>
        [DataMember(Name="depositante", EmitDefaultValue=false)]
        public int? Depositante { get; set; }

        /// <summary>
        /// Gets or Sets Transportadora
        /// </summary>
        [DataMember(Name="transportadora", EmitDefaultValue=false)]
        public bool? Transportadora { get; set; }

        /// <summary>
        /// Gets or Sets Localidade
        /// </summary>
        [DataMember(Name="localidade", EmitDefaultValue=false)]
        public Localidade Localidade { get; set; }

        /// <summary>
        /// Gets or Sets Ativo
        /// </summary>
        [DataMember(Name="ativo", EmitDefaultValue=false)]
        public int? Ativo { get; set; }

        /// <summary>
        /// Gets or Sets GetiErgEmpresa
        /// </summary>
        [DataMember(Name="getiErgEmpresa", EmitDefaultValue=false)]
        public string GetiErgEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets InscricaoMunicipal
        /// </summary>
        [DataMember(Name="inscricaoMunicipal", EmitDefaultValue=false)]
        public string InscricaoMunicipal { get; set; }

        /// <summary>
        /// Gets or Sets DataAtualizacao
        /// </summary>
        [DataMember(Name="dataAtualizacao", EmitDefaultValue=false)]
        public DateTime? DataAtualizacao { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets SistemaModulo
        /// </summary>
        [DataMember(Name="sistemaModulo", EmitDefaultValue=false)]
        public int? SistemaModulo { get; set; }

        /// <summary>
        /// Gets or Sets CnaeFiscal
        /// </summary>
        [DataMember(Name="cnaeFiscal", EmitDefaultValue=false)]
        public CnaeFiscal CnaeFiscal { get; set; }

        /// <summary>
        /// Gets or Sets InscricaoSuframa
        /// </summary>
        [DataMember(Name="inscricaoSuframa", EmitDefaultValue=false)]
        public string InscricaoSuframa { get; set; }

        /// <summary>
        /// Gets or Sets IndicadorIE
        /// </summary>
        [DataMember(Name="indicadorIE", EmitDefaultValue=false)]
        public IndicadorIE IndicadorIE { get; set; }

        /// <summary>
        /// Gets or Sets Grupos
        /// </summary>
        [DataMember(Name="grupos", EmitDefaultValue=false)]
        public List<GrupoEmpresa> Grupos { get; set; }

        /// <summary>
        /// Gets or Sets TipoEmpresa
        /// </summary>
        [DataMember(Name="tipoEmpresa", EmitDefaultValue=false)]
        public TipoEmpresa TipoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets UsuarioAtualizacao
        /// </summary>
        [DataMember(Name="usuarioAtualizacao", EmitDefaultValue=false)]
        public string UsuarioAtualizacao { get; set; }

        /// <summary>
        /// Gets or Sets Uf
        /// </summary>
        [DataMember(Name="uf", EmitDefaultValue=false)]
        public UnidadeFederativa Uf { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Empresa {\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  DescricaoEmpresa: ").Append(DescricaoEmpresa).Append("\n");
            sb.Append("  EnderecoEmpresa: ").Append(EnderecoEmpresa).Append("\n");
            sb.Append("  BairroEmpresa: ").Append(BairroEmpresa).Append("\n");
            sb.Append("  CepEmpresa: ").Append(CepEmpresa).Append("\n");
            sb.Append("  MunicipioEmpresa: ").Append(MunicipioEmpresa).Append("\n");
            sb.Append("  NumeroEndereco: ").Append(NumeroEndereco).Append("\n");
            sb.Append("  GetsCGCCPFEmpresa: ").Append(GetsCGCCPFEmpresa).Append("\n");
            sb.Append("  FoneEmpresa: ").Append(FoneEmpresa).Append("\n");
            sb.Append("  UfEmpresa: ").Append(UfEmpresa).Append("\n");
            sb.Append("  EmailEmpresa: ").Append(EmailEmpresa).Append("\n");
            sb.Append("  PaisEmpresa: ").Append(PaisEmpresa).Append("\n");
            sb.Append("  ComplementoEmpresa: ").Append(ComplementoEmpresa).Append("\n");
            sb.Append("  ObservacaoEmpresa: ").Append(ObservacaoEmpresa).Append("\n");
            sb.Append("  TipoPessoaEmpresa: ").Append(TipoPessoaEmpresa).Append("\n");
            sb.Append("  DescricaoEmpresa2: ").Append(DescricaoEmpresa2).Append("\n");
            sb.Append("  Depositante: ").Append(Depositante).Append("\n");
            sb.Append("  Transportadora: ").Append(Transportadora).Append("\n");
            sb.Append("  Localidade: ").Append(Localidade).Append("\n");
            sb.Append("  Ativo: ").Append(Ativo).Append("\n");
            sb.Append("  GetiErgEmpresa: ").Append(GetiErgEmpresa).Append("\n");
            sb.Append("  InscricaoMunicipal: ").Append(InscricaoMunicipal).Append("\n");
            sb.Append("  DataAtualizacao: ").Append(DataAtualizacao).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  SistemaModulo: ").Append(SistemaModulo).Append("\n");
            sb.Append("  CnaeFiscal: ").Append(CnaeFiscal).Append("\n");
            sb.Append("  InscricaoSuframa: ").Append(InscricaoSuframa).Append("\n");
            sb.Append("  IndicadorIE: ").Append(IndicadorIE).Append("\n");
            sb.Append("  Grupos: ").Append(Grupos).Append("\n");
            sb.Append("  TipoEmpresa: ").Append(TipoEmpresa).Append("\n");
            sb.Append("  UsuarioAtualizacao: ").Append(UsuarioAtualizacao).Append("\n");
            sb.Append("  Uf: ").Append(Uf).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Empresa);
        }

        /// <summary>
        /// Returns true if Empresa instances are equal
        /// </summary>
        /// <param name="input">Instance of Empresa to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Empresa input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.DescricaoEmpresa == input.DescricaoEmpresa ||
                    (this.DescricaoEmpresa != null &&
                    this.DescricaoEmpresa.Equals(input.DescricaoEmpresa))
                ) && 
                (
                    this.EnderecoEmpresa == input.EnderecoEmpresa ||
                    (this.EnderecoEmpresa != null &&
                    this.EnderecoEmpresa.Equals(input.EnderecoEmpresa))
                ) && 
                (
                    this.BairroEmpresa == input.BairroEmpresa ||
                    (this.BairroEmpresa != null &&
                    this.BairroEmpresa.Equals(input.BairroEmpresa))
                ) && 
                (
                    this.CepEmpresa == input.CepEmpresa ||
                    (this.CepEmpresa != null &&
                    this.CepEmpresa.Equals(input.CepEmpresa))
                ) && 
                (
                    this.MunicipioEmpresa == input.MunicipioEmpresa ||
                    (this.MunicipioEmpresa != null &&
                    this.MunicipioEmpresa.Equals(input.MunicipioEmpresa))
                ) && 
                (
                    this.NumeroEndereco == input.NumeroEndereco ||
                    (this.NumeroEndereco != null &&
                    this.NumeroEndereco.Equals(input.NumeroEndereco))
                ) && 
                (
                    this.GetsCGCCPFEmpresa == input.GetsCGCCPFEmpresa ||
                    (this.GetsCGCCPFEmpresa != null &&
                    this.GetsCGCCPFEmpresa.Equals(input.GetsCGCCPFEmpresa))
                ) && 
                (
                    this.FoneEmpresa == input.FoneEmpresa ||
                    (this.FoneEmpresa != null &&
                    this.FoneEmpresa.Equals(input.FoneEmpresa))
                ) && 
                (
                    this.UfEmpresa == input.UfEmpresa ||
                    (this.UfEmpresa != null &&
                    this.UfEmpresa.Equals(input.UfEmpresa))
                ) && 
                (
                    this.EmailEmpresa == input.EmailEmpresa ||
                    (this.EmailEmpresa != null &&
                    this.EmailEmpresa.Equals(input.EmailEmpresa))
                ) && 
                (
                    this.PaisEmpresa == input.PaisEmpresa ||
                    (this.PaisEmpresa != null &&
                    this.PaisEmpresa.Equals(input.PaisEmpresa))
                ) && 
                (
                    this.ComplementoEmpresa == input.ComplementoEmpresa ||
                    (this.ComplementoEmpresa != null &&
                    this.ComplementoEmpresa.Equals(input.ComplementoEmpresa))
                ) && 
                (
                    this.ObservacaoEmpresa == input.ObservacaoEmpresa ||
                    (this.ObservacaoEmpresa != null &&
                    this.ObservacaoEmpresa.Equals(input.ObservacaoEmpresa))
                ) && 
                (
                    this.TipoPessoaEmpresa == input.TipoPessoaEmpresa ||
                    (this.TipoPessoaEmpresa != null &&
                    this.TipoPessoaEmpresa.Equals(input.TipoPessoaEmpresa))
                ) && 
                (
                    this.DescricaoEmpresa2 == input.DescricaoEmpresa2 ||
                    (this.DescricaoEmpresa2 != null &&
                    this.DescricaoEmpresa2.Equals(input.DescricaoEmpresa2))
                ) && 
                (
                    this.Depositante == input.Depositante ||
                    (this.Depositante != null &&
                    this.Depositante.Equals(input.Depositante))
                ) && 
                (
                    this.Transportadora == input.Transportadora ||
                    (this.Transportadora != null &&
                    this.Transportadora.Equals(input.Transportadora))
                ) && 
                (
                    this.Localidade == input.Localidade ||
                    (this.Localidade != null &&
                    this.Localidade.Equals(input.Localidade))
                ) && 
                (
                    this.Ativo == input.Ativo ||
                    (this.Ativo != null &&
                    this.Ativo.Equals(input.Ativo))
                ) && 
                (
                    this.GetiErgEmpresa == input.GetiErgEmpresa ||
                    (this.GetiErgEmpresa != null &&
                    this.GetiErgEmpresa.Equals(input.GetiErgEmpresa))
                ) && 
                (
                    this.InscricaoMunicipal == input.InscricaoMunicipal ||
                    (this.InscricaoMunicipal != null &&
                    this.InscricaoMunicipal.Equals(input.InscricaoMunicipal))
                ) && 
                (
                    this.DataAtualizacao == input.DataAtualizacao ||
                    (this.DataAtualizacao != null &&
                    this.DataAtualizacao.Equals(input.DataAtualizacao))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.SistemaModulo == input.SistemaModulo ||
                    (this.SistemaModulo != null &&
                    this.SistemaModulo.Equals(input.SistemaModulo))
                ) && 
                (
                    this.CnaeFiscal == input.CnaeFiscal ||
                    (this.CnaeFiscal != null &&
                    this.CnaeFiscal.Equals(input.CnaeFiscal))
                ) && 
                (
                    this.InscricaoSuframa == input.InscricaoSuframa ||
                    (this.InscricaoSuframa != null &&
                    this.InscricaoSuframa.Equals(input.InscricaoSuframa))
                ) && 
                (
                    this.IndicadorIE == input.IndicadorIE ||
                    (this.IndicadorIE != null &&
                    this.IndicadorIE.Equals(input.IndicadorIE))
                ) && 
                (
                    this.Grupos == input.Grupos ||
                    this.Grupos != null &&
                    this.Grupos.SequenceEqual(input.Grupos)
                ) && 
                (
                    this.TipoEmpresa == input.TipoEmpresa ||
                    (this.TipoEmpresa != null &&
                    this.TipoEmpresa.Equals(input.TipoEmpresa))
                ) && 
                (
                    this.UsuarioAtualizacao == input.UsuarioAtualizacao ||
                    (this.UsuarioAtualizacao != null &&
                    this.UsuarioAtualizacao.Equals(input.UsuarioAtualizacao))
                ) && 
                (
                    this.Uf == input.Uf ||
                    (this.Uf != null &&
                    this.Uf.Equals(input.Uf))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.DescricaoEmpresa != null)
                    hashCode = hashCode * 59 + this.DescricaoEmpresa.GetHashCode();
                if (this.EnderecoEmpresa != null)
                    hashCode = hashCode * 59 + this.EnderecoEmpresa.GetHashCode();
                if (this.BairroEmpresa != null)
                    hashCode = hashCode * 59 + this.BairroEmpresa.GetHashCode();
                if (this.CepEmpresa != null)
                    hashCode = hashCode * 59 + this.CepEmpresa.GetHashCode();
                if (this.MunicipioEmpresa != null)
                    hashCode = hashCode * 59 + this.MunicipioEmpresa.GetHashCode();
                if (this.NumeroEndereco != null)
                    hashCode = hashCode * 59 + this.NumeroEndereco.GetHashCode();
                if (this.GetsCGCCPFEmpresa != null)
                    hashCode = hashCode * 59 + this.GetsCGCCPFEmpresa.GetHashCode();
                if (this.FoneEmpresa != null)
                    hashCode = hashCode * 59 + this.FoneEmpresa.GetHashCode();
                if (this.UfEmpresa != null)
                    hashCode = hashCode * 59 + this.UfEmpresa.GetHashCode();
                if (this.EmailEmpresa != null)
                    hashCode = hashCode * 59 + this.EmailEmpresa.GetHashCode();
                if (this.PaisEmpresa != null)
                    hashCode = hashCode * 59 + this.PaisEmpresa.GetHashCode();
                if (this.ComplementoEmpresa != null)
                    hashCode = hashCode * 59 + this.ComplementoEmpresa.GetHashCode();
                if (this.ObservacaoEmpresa != null)
                    hashCode = hashCode * 59 + this.ObservacaoEmpresa.GetHashCode();
                if (this.TipoPessoaEmpresa != null)
                    hashCode = hashCode * 59 + this.TipoPessoaEmpresa.GetHashCode();
                if (this.DescricaoEmpresa2 != null)
                    hashCode = hashCode * 59 + this.DescricaoEmpresa2.GetHashCode();
                if (this.Depositante != null)
                    hashCode = hashCode * 59 + this.Depositante.GetHashCode();
                if (this.Transportadora != null)
                    hashCode = hashCode * 59 + this.Transportadora.GetHashCode();
                if (this.Localidade != null)
                    hashCode = hashCode * 59 + this.Localidade.GetHashCode();
                if (this.Ativo != null)
                    hashCode = hashCode * 59 + this.Ativo.GetHashCode();
                if (this.GetiErgEmpresa != null)
                    hashCode = hashCode * 59 + this.GetiErgEmpresa.GetHashCode();
                if (this.InscricaoMunicipal != null)
                    hashCode = hashCode * 59 + this.InscricaoMunicipal.GetHashCode();
                if (this.DataAtualizacao != null)
                    hashCode = hashCode * 59 + this.DataAtualizacao.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.SistemaModulo != null)
                    hashCode = hashCode * 59 + this.SistemaModulo.GetHashCode();
                if (this.CnaeFiscal != null)
                    hashCode = hashCode * 59 + this.CnaeFiscal.GetHashCode();
                if (this.InscricaoSuframa != null)
                    hashCode = hashCode * 59 + this.InscricaoSuframa.GetHashCode();
                if (this.IndicadorIE != null)
                    hashCode = hashCode * 59 + this.IndicadorIE.GetHashCode();
                if (this.Grupos != null)
                    hashCode = hashCode * 59 + this.Grupos.GetHashCode();
                if (this.TipoEmpresa != null)
                    hashCode = hashCode * 59 + this.TipoEmpresa.GetHashCode();
                if (this.UsuarioAtualizacao != null)
                    hashCode = hashCode * 59 + this.UsuarioAtualizacao.GetHashCode();
                if (this.Uf != null)
                    hashCode = hashCode * 59 + this.Uf.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CodigoEmpresa (string) maxLength
            if(this.CodigoEmpresa != null && this.CodigoEmpresa.Length > 15)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodigoEmpresa, length must be less than 15.", new [] { "CodigoEmpresa" });
            }

            // CodigoEmpresa (string) minLength
            if(this.CodigoEmpresa != null && this.CodigoEmpresa.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodigoEmpresa, length must be greater than 0.", new [] { "CodigoEmpresa" });
            }

            // DescricaoEmpresa (string) maxLength
            if(this.DescricaoEmpresa != null && this.DescricaoEmpresa.Length > 80)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoEmpresa, length must be less than 80.", new [] { "DescricaoEmpresa" });
            }

            // DescricaoEmpresa (string) minLength
            if(this.DescricaoEmpresa != null && this.DescricaoEmpresa.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoEmpresa, length must be greater than 1.", new [] { "DescricaoEmpresa" });
            }

            // EnderecoEmpresa (string) maxLength
            if(this.EnderecoEmpresa != null && this.EnderecoEmpresa.Length > 90)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for EnderecoEmpresa, length must be less than 90.", new [] { "EnderecoEmpresa" });
            }

            // EnderecoEmpresa (string) minLength
            if(this.EnderecoEmpresa != null && this.EnderecoEmpresa.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for EnderecoEmpresa, length must be greater than 1.", new [] { "EnderecoEmpresa" });
            }

            // BairroEmpresa (string) maxLength
            if(this.BairroEmpresa != null && this.BairroEmpresa.Length > 40)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for BairroEmpresa, length must be less than 40.", new [] { "BairroEmpresa" });
            }

            // BairroEmpresa (string) minLength
            if(this.BairroEmpresa != null && this.BairroEmpresa.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for BairroEmpresa, length must be greater than 1.", new [] { "BairroEmpresa" });
            }

            // CepEmpresa (string) maxLength
            if(this.CepEmpresa != null && this.CepEmpresa.Length > 9)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CepEmpresa, length must be less than 9.", new [] { "CepEmpresa" });
            }

            // CepEmpresa (string) minLength
            if(this.CepEmpresa != null && this.CepEmpresa.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CepEmpresa, length must be greater than 0.", new [] { "CepEmpresa" });
            }

            // MunicipioEmpresa (string) maxLength
            if(this.MunicipioEmpresa != null && this.MunicipioEmpresa.Length > 60)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for MunicipioEmpresa, length must be less than 60.", new [] { "MunicipioEmpresa" });
            }

            // MunicipioEmpresa (string) minLength
            if(this.MunicipioEmpresa != null && this.MunicipioEmpresa.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for MunicipioEmpresa, length must be greater than 1.", new [] { "MunicipioEmpresa" });
            }

            // NumeroEndereco (string) maxLength
            if(this.NumeroEndereco != null && this.NumeroEndereco.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NumeroEndereco, length must be less than 20.", new [] { "NumeroEndereco" });
            }

            // NumeroEndereco (string) minLength
            if(this.NumeroEndereco != null && this.NumeroEndereco.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NumeroEndereco, length must be greater than 0.", new [] { "NumeroEndereco" });
            }

            // GetsCGCCPFEmpresa (string) maxLength
            if(this.GetsCGCCPFEmpresa != null && this.GetsCGCCPFEmpresa.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for GetsCGCCPFEmpresa, length must be less than 20.", new [] { "GetsCGCCPFEmpresa" });
            }

            // GetsCGCCPFEmpresa (string) minLength
            if(this.GetsCGCCPFEmpresa != null && this.GetsCGCCPFEmpresa.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for GetsCGCCPFEmpresa, length must be greater than 0.", new [] { "GetsCGCCPFEmpresa" });
            }

            // FoneEmpresa (string) maxLength
            if(this.FoneEmpresa != null && this.FoneEmpresa.Length > 15)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FoneEmpresa, length must be less than 15.", new [] { "FoneEmpresa" });
            }

            // FoneEmpresa (string) minLength
            if(this.FoneEmpresa != null && this.FoneEmpresa.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FoneEmpresa, length must be greater than 0.", new [] { "FoneEmpresa" });
            }

            // UfEmpresa (string) maxLength
            if(this.UfEmpresa != null && this.UfEmpresa.Length > 2)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UfEmpresa, length must be less than 2.", new [] { "UfEmpresa" });
            }

            // UfEmpresa (string) minLength
            if(this.UfEmpresa != null && this.UfEmpresa.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UfEmpresa, length must be greater than 0.", new [] { "UfEmpresa" });
            }

            // PaisEmpresa (string) maxLength
            if(this.PaisEmpresa != null && this.PaisEmpresa.Length > 25)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PaisEmpresa, length must be less than 25.", new [] { "PaisEmpresa" });
            }

            // PaisEmpresa (string) minLength
            if(this.PaisEmpresa != null && this.PaisEmpresa.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PaisEmpresa, length must be greater than 1.", new [] { "PaisEmpresa" });
            }

            // ComplementoEmpresa (string) maxLength
            if(this.ComplementoEmpresa != null && this.ComplementoEmpresa.Length > 60)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ComplementoEmpresa, length must be less than 60.", new [] { "ComplementoEmpresa" });
            }

            // ComplementoEmpresa (string) minLength
            if(this.ComplementoEmpresa != null && this.ComplementoEmpresa.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ComplementoEmpresa, length must be greater than 1.", new [] { "ComplementoEmpresa" });
            }

            // ObservacaoEmpresa (string) maxLength
            if(this.ObservacaoEmpresa != null && this.ObservacaoEmpresa.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ObservacaoEmpresa, length must be less than 100.", new [] { "ObservacaoEmpresa" });
            }

            // ObservacaoEmpresa (string) minLength
            if(this.ObservacaoEmpresa != null && this.ObservacaoEmpresa.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ObservacaoEmpresa, length must be greater than 1.", new [] { "ObservacaoEmpresa" });
            }

            // DescricaoEmpresa2 (string) maxLength
            if(this.DescricaoEmpresa2 != null && this.DescricaoEmpresa2.Length > 80)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoEmpresa2, length must be less than 80.", new [] { "DescricaoEmpresa2" });
            }

            // DescricaoEmpresa2 (string) minLength
            if(this.DescricaoEmpresa2 != null && this.DescricaoEmpresa2.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoEmpresa2, length must be greater than 1.", new [] { "DescricaoEmpresa2" });
            }

            // GetiErgEmpresa (string) maxLength
            if(this.GetiErgEmpresa != null && this.GetiErgEmpresa.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for GetiErgEmpresa, length must be less than 20.", new [] { "GetiErgEmpresa" });
            }

            // GetiErgEmpresa (string) minLength
            if(this.GetiErgEmpresa != null && this.GetiErgEmpresa.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for GetiErgEmpresa, length must be greater than 0.", new [] { "GetiErgEmpresa" });
            }

            // InscricaoMunicipal (string) maxLength
            if(this.InscricaoMunicipal != null && this.InscricaoMunicipal.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InscricaoMunicipal, length must be less than 20.", new [] { "InscricaoMunicipal" });
            }

            // InscricaoMunicipal (string) minLength
            if(this.InscricaoMunicipal != null && this.InscricaoMunicipal.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InscricaoMunicipal, length must be greater than 1.", new [] { "InscricaoMunicipal" });
            }

            // InscricaoSuframa (string) maxLength
            if(this.InscricaoSuframa != null && this.InscricaoSuframa.Length > 20)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InscricaoSuframa, length must be less than 20.", new [] { "InscricaoSuframa" });
            }

            // InscricaoSuframa (string) minLength
            if(this.InscricaoSuframa != null && this.InscricaoSuframa.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InscricaoSuframa, length must be greater than 1.", new [] { "InscricaoSuframa" });
            }

            yield break;
        }
    }

}
