/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DocumentoOficialEntradaItem
    /// </summary>
    [DataContract]
    public partial class DocumentoOficialEntradaItem :  IEquatable<DocumentoOficialEntradaItem>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentoOficialEntradaItem" /> class.
        /// </summary>
        /// <param name="codigoEstabelecimento">codigoEstabelecimento.</param>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="tipoDocumento">tipoDocumento.</param>
        /// <param name="serieDocumento">serieDocumento.</param>
        /// <param name="documentoOficialEntrada">documentoOficialEntrada.</param>
        /// <param name="sequenciaOficialEntrada">sequenciaOficialEntrada.</param>
        /// <param name="codigoMatriz">codigoMatriz.</param>
        /// <param name="codigoProduto">codigoProduto.</param>
        /// <param name="descricaoProduto">descricaoProduto.</param>
        /// <param name="tipoUc">tipoUc.</param>
        /// <param name="fatorTipoUc">fatorTipoUc.</param>
        /// <param name="quantidadeDocumento">quantidadeDocumento.</param>
        /// <param name="quantidadeEntrada">quantidadeEntrada.</param>
        /// <param name="quantidadeInicial">quantidadeInicial.</param>
        /// <param name="valorUnitario">valorUnitario.</param>
        /// <param name="aliquotaIcms">aliquotaIcms.</param>
        /// <param name="aliquotaIcmsSub">aliquotaIcmsSub.</param>
        /// <param name="aliquotaIpi">aliquotaIpi.</param>
        /// <param name="classificacaoFiscal">classificacaoFiscal.</param>
        /// <param name="oldsituacaoTributaria">oldsituacaoTributaria.</param>
        /// <param name="pesoLiquido">pesoLiquido.</param>
        /// <param name="pesoBruto">pesoBruto.</param>
        /// <param name="largura">largura.</param>
        /// <param name="comprimento">comprimento.</param>
        /// <param name="altura">altura.</param>
        /// <param name="codigoDocumento">codigoDocumento.</param>
        /// <param name="codigoLote">codigoLote.</param>
        /// <param name="valorServico">valorServico.</param>
        /// <param name="tipoLogistico">tipoLogistico.</param>
        /// <param name="dadoLogistico">dadoLogistico.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="dataHistorico">dataHistorico.</param>
        /// <param name="numeroLote">numeroLote.</param>
        /// <param name="valorDesconto">valorDesconto.</param>
        /// <param name="valorAcrescimo">valorAcrescimo.</param>
        /// <param name="naturezaOperacao">naturezaOperacao.</param>
        /// <param name="cfop">cfop.</param>
        /// <param name="documentoRelacionado">documentoRelacionado.</param>
        /// <param name="documentoQualidade">documentoQualidade.</param>
        /// <param name="sitTributaria">sitTributaria.</param>
        /// <param name="sistemaModulo">sistemaModulo.</param>
        /// <param name="valorUnitarioFiscal">valorUnitarioFiscal.</param>
        /// <param name="observacao">observacao.</param>
        /// <param name="classeProduto">classeProduto.</param>
        /// <param name="fatorBaseIcms">fatorBaseIcms.</param>
        /// <param name="fatorBaseIpi">fatorBaseIpi.</param>
        /// <param name="aliquotaIcmsReducao">aliquotaIcmsReducao.</param>
        /// <param name="aliquotaIpiReducao">aliquotaIpiReducao.</param>
        /// <param name="quantidadeOrigem">quantidadeOrigem.</param>
        /// <param name="numeroDocumento">numeroDocumento.</param>
        /// <param name="informacaoAdicional1">informacaoAdicional1.</param>
        /// <param name="informacaoAdicional2">informacaoAdicional2.</param>
        /// <param name="informacaoAdicional3">informacaoAdicional3.</param>
        /// <param name="stDocumentoAtualizacao">stDocumentoAtualizacao.</param>
        /// <param name="ordemSeparacao">ordemSeparacao.</param>
        /// <param name="numeroPedidoSeparacao">numeroPedidoSeparacao.</param>
        /// <param name="dataPedidoSeparacao">dataPedidoSeparacao.</param>
        /// <param name="nfeInformacaoAdicional">nfeInformacaoAdicional.</param>
        /// <param name="valorBaseIcms">valorBaseIcms.</param>
        /// <param name="valorIcms">valorIcms.</param>
        /// <param name="valorBaseIpi">valorBaseIpi.</param>
        /// <param name="valorIpi">valorIpi.</param>
        /// <param name="aliquotaMva">aliquotaMva.</param>
        /// <param name="valorIcmsSt">valorIcmsSt.</param>
        /// <param name="valorBaseIcmsSt">valorBaseIcmsSt.</param>
        /// <param name="fatorBaseIcmsSt">fatorBaseIcmsSt.</param>
        /// <param name="numeroPedidoCompra">numeroPedidoCompra.</param>
        /// <param name="itemPedidoCompra">itemPedidoCompra.</param>
        /// <param name="valorTotalItem">valorTotalItem.</param>
        /// <param name="valorFrete">valorFrete.</param>
        /// <param name="valorSeguro">valorSeguro.</param>
        /// <param name="sitTributariaOrigem">sitTributariaOrigem.</param>
        /// <param name="situacaoTributaria">situacaoTributaria.</param>
        /// <param name="situacaoTributariaIpi">situacaoTributariaIpi.</param>
        /// <param name="codigoEnquadramentoIpi">codigoEnquadramentoIpi.</param>
        /// <param name="doctoOficialEntrada">doctoOficialEntrada.</param>
        /// <param name="numeroFci">numeroFci.</param>
        /// <param name="codigoNcm">codigoNcm.</param>
        /// <param name="codigoModBcSt">codigoModBcSt.</param>
        /// <param name="tes">tes.</param>
        public DocumentoOficialEntradaItem(long? codigoEstabelecimento = default(long?), string codigoEmpresa = default(string), string tipoDocumento = default(string), string serieDocumento = default(string), string documentoOficialEntrada = default(string), long? sequenciaOficialEntrada = default(long?), string codigoMatriz = default(string), string codigoProduto = default(string), string descricaoProduto = default(string), string tipoUc = default(string), decimal? fatorTipoUc = default(decimal?), decimal? quantidadeDocumento = default(decimal?), decimal? quantidadeEntrada = default(decimal?), decimal? quantidadeInicial = default(decimal?), decimal? valorUnitario = default(decimal?), decimal? aliquotaIcms = default(decimal?), decimal? aliquotaIcmsSub = default(decimal?), decimal? aliquotaIpi = default(decimal?), string classificacaoFiscal = default(string), long? oldsituacaoTributaria = default(long?), decimal? pesoLiquido = default(decimal?), decimal? pesoBruto = default(decimal?), decimal? largura = default(decimal?), decimal? comprimento = default(decimal?), decimal? altura = default(decimal?), long? codigoDocumento = default(long?), long? codigoLote = default(long?), decimal? valorServico = default(decimal?), long? tipoLogistico = default(long?), string dadoLogistico = default(string), string usuario = default(string), DateTime? dataHistorico = default(DateTime?), long? numeroLote = default(long?), decimal? valorDesconto = default(decimal?), decimal? valorAcrescimo = default(decimal?), string naturezaOperacao = default(string), string cfop = default(string), string documentoRelacionado = default(string), string documentoQualidade = default(string), string sitTributaria = default(string), long? sistemaModulo = default(long?), decimal? valorUnitarioFiscal = default(decimal?), string observacao = default(string), string classeProduto = default(string), decimal? fatorBaseIcms = default(decimal?), decimal? fatorBaseIpi = default(decimal?), decimal? aliquotaIcmsReducao = default(decimal?), decimal? aliquotaIpiReducao = default(decimal?), decimal? quantidadeOrigem = default(decimal?), string numeroDocumento = default(string), string informacaoAdicional1 = default(string), string informacaoAdicional2 = default(string), string informacaoAdicional3 = default(string), string stDocumentoAtualizacao = default(string), string ordemSeparacao = default(string), string numeroPedidoSeparacao = default(string), DateTime? dataPedidoSeparacao = default(DateTime?), string nfeInformacaoAdicional = default(string), decimal? valorBaseIcms = default(decimal?), decimal? valorIcms = default(decimal?), decimal? valorBaseIpi = default(decimal?), decimal? valorIpi = default(decimal?), decimal? aliquotaMva = default(decimal?), decimal? valorIcmsSt = default(decimal?), decimal? valorBaseIcmsSt = default(decimal?), decimal? fatorBaseIcmsSt = default(decimal?), string numeroPedidoCompra = default(string), long? itemPedidoCompra = default(long?), decimal? valorTotalItem = default(decimal?), decimal? valorFrete = default(decimal?), decimal? valorSeguro = default(decimal?), SitTributariaOrigem sitTributariaOrigem = default(SitTributariaOrigem), SitTributariaIcms situacaoTributaria = default(SitTributariaIcms), SituacaoTributariaIpi situacaoTributariaIpi = default(SituacaoTributariaIpi), CodigoEnquadramentoIpi codigoEnquadramentoIpi = default(CodigoEnquadramentoIpi), DocumentoOficialEntrada doctoOficialEntrada = default(DocumentoOficialEntrada), string numeroFci = default(string), string codigoNcm = default(string), long? codigoModBcSt = default(long?), string tes = default(string))
        {
            this.CodigoEstabelecimento = codigoEstabelecimento;
            this.CodigoEmpresa = codigoEmpresa;
            this.TipoDocumento = tipoDocumento;
            this.SerieDocumento = serieDocumento;
            this.DocumentoOficialEntrada = documentoOficialEntrada;
            this.SequenciaOficialEntrada = sequenciaOficialEntrada;
            this.CodigoMatriz = codigoMatriz;
            this.CodigoProduto = codigoProduto;
            this.DescricaoProduto = descricaoProduto;
            this.TipoUc = tipoUc;
            this.FatorTipoUc = fatorTipoUc;
            this.QuantidadeDocumento = quantidadeDocumento;
            this.QuantidadeEntrada = quantidadeEntrada;
            this.QuantidadeInicial = quantidadeInicial;
            this.ValorUnitario = valorUnitario;
            this.AliquotaIcms = aliquotaIcms;
            this.AliquotaIcmsSub = aliquotaIcmsSub;
            this.AliquotaIpi = aliquotaIpi;
            this.ClassificacaoFiscal = classificacaoFiscal;
            this.OldsituacaoTributaria = oldsituacaoTributaria;
            this.PesoLiquido = pesoLiquido;
            this.PesoBruto = pesoBruto;
            this.Largura = largura;
            this.Comprimento = comprimento;
            this.Altura = altura;
            this.CodigoDocumento = codigoDocumento;
            this.CodigoLote = codigoLote;
            this.ValorServico = valorServico;
            this.TipoLogistico = tipoLogistico;
            this.DadoLogistico = dadoLogistico;
            this.Usuario = usuario;
            this.DataHistorico = dataHistorico;
            this.NumeroLote = numeroLote;
            this.ValorDesconto = valorDesconto;
            this.ValorAcrescimo = valorAcrescimo;
            this.NaturezaOperacao = naturezaOperacao;
            this.Cfop = cfop;
            this.DocumentoRelacionado = documentoRelacionado;
            this.DocumentoQualidade = documentoQualidade;
            this.SitTributaria = sitTributaria;
            this.SistemaModulo = sistemaModulo;
            this.ValorUnitarioFiscal = valorUnitarioFiscal;
            this.Observacao = observacao;
            this.ClasseProduto = classeProduto;
            this.FatorBaseIcms = fatorBaseIcms;
            this.FatorBaseIpi = fatorBaseIpi;
            this.AliquotaIcmsReducao = aliquotaIcmsReducao;
            this.AliquotaIpiReducao = aliquotaIpiReducao;
            this.QuantidadeOrigem = quantidadeOrigem;
            this.NumeroDocumento = numeroDocumento;
            this.InformacaoAdicional1 = informacaoAdicional1;
            this.InformacaoAdicional2 = informacaoAdicional2;
            this.InformacaoAdicional3 = informacaoAdicional3;
            this.StDocumentoAtualizacao = stDocumentoAtualizacao;
            this.OrdemSeparacao = ordemSeparacao;
            this.NumeroPedidoSeparacao = numeroPedidoSeparacao;
            this.DataPedidoSeparacao = dataPedidoSeparacao;
            this.NfeInformacaoAdicional = nfeInformacaoAdicional;
            this.ValorBaseIcms = valorBaseIcms;
            this.ValorIcms = valorIcms;
            this.ValorBaseIpi = valorBaseIpi;
            this.ValorIpi = valorIpi;
            this.AliquotaMva = aliquotaMva;
            this.ValorIcmsSt = valorIcmsSt;
            this.ValorBaseIcmsSt = valorBaseIcmsSt;
            this.FatorBaseIcmsSt = fatorBaseIcmsSt;
            this.NumeroPedidoCompra = numeroPedidoCompra;
            this.ItemPedidoCompra = itemPedidoCompra;
            this.ValorTotalItem = valorTotalItem;
            this.ValorFrete = valorFrete;
            this.ValorSeguro = valorSeguro;
            this.SitTributariaOrigem = sitTributariaOrigem;
            this.SituacaoTributaria = situacaoTributaria;
            this.SituacaoTributariaIpi = situacaoTributariaIpi;
            this.CodigoEnquadramentoIpi = codigoEnquadramentoIpi;
            this.DoctoOficialEntrada = doctoOficialEntrada;
            this.NumeroFci = numeroFci;
            this.CodigoNcm = codigoNcm;
            this.CodigoModBcSt = codigoModBcSt;
            this.Tes = tes;
        }
        
        /// <summary>
        /// Gets or Sets CodigoEstabelecimento
        /// </summary>
        [DataMember(Name="codigoEstabelecimento", EmitDefaultValue=false)]
        public long? CodigoEstabelecimento { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets TipoDocumento
        /// </summary>
        [DataMember(Name="tipoDocumento", EmitDefaultValue=false)]
        public string TipoDocumento { get; set; }

        /// <summary>
        /// Gets or Sets SerieDocumento
        /// </summary>
        [DataMember(Name="serieDocumento", EmitDefaultValue=false)]
        public string SerieDocumento { get; set; }

        /// <summary>
        /// Gets or Sets DocumentoOficialEntrada
        /// </summary>
        [DataMember(Name="documentoOficialEntrada", EmitDefaultValue=false)]
        public string DocumentoOficialEntrada { get; set; }

        /// <summary>
        /// Gets or Sets SequenciaOficialEntrada
        /// </summary>
        [DataMember(Name="sequenciaOficialEntrada", EmitDefaultValue=false)]
        public long? SequenciaOficialEntrada { get; set; }

        /// <summary>
        /// Gets or Sets CodigoMatriz
        /// </summary>
        [DataMember(Name="codigoMatriz", EmitDefaultValue=false)]
        public string CodigoMatriz { get; set; }

        /// <summary>
        /// Gets or Sets CodigoProduto
        /// </summary>
        [DataMember(Name="codigoProduto", EmitDefaultValue=false)]
        public string CodigoProduto { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoProduto
        /// </summary>
        [DataMember(Name="descricaoProduto", EmitDefaultValue=false)]
        public string DescricaoProduto { get; set; }

        /// <summary>
        /// Gets or Sets TipoUc
        /// </summary>
        [DataMember(Name="tipoUc", EmitDefaultValue=false)]
        public string TipoUc { get; set; }

        /// <summary>
        /// Gets or Sets FatorTipoUc
        /// </summary>
        [DataMember(Name="fatorTipoUc", EmitDefaultValue=false)]
        public decimal? FatorTipoUc { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeDocumento
        /// </summary>
        [DataMember(Name="quantidadeDocumento", EmitDefaultValue=false)]
        public decimal? QuantidadeDocumento { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeEntrada
        /// </summary>
        [DataMember(Name="quantidadeEntrada", EmitDefaultValue=false)]
        public decimal? QuantidadeEntrada { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeInicial
        /// </summary>
        [DataMember(Name="quantidadeInicial", EmitDefaultValue=false)]
        public decimal? QuantidadeInicial { get; set; }

        /// <summary>
        /// Gets or Sets ValorUnitario
        /// </summary>
        [DataMember(Name="valorUnitario", EmitDefaultValue=false)]
        public decimal? ValorUnitario { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcms
        /// </summary>
        [DataMember(Name="aliquotaIcms", EmitDefaultValue=false)]
        public decimal? AliquotaIcms { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcmsSub
        /// </summary>
        [DataMember(Name="aliquotaIcmsSub", EmitDefaultValue=false)]
        public decimal? AliquotaIcmsSub { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIpi
        /// </summary>
        [DataMember(Name="aliquotaIpi", EmitDefaultValue=false)]
        public decimal? AliquotaIpi { get; set; }

        /// <summary>
        /// Gets or Sets ClassificacaoFiscal
        /// </summary>
        [DataMember(Name="classificacaoFiscal", EmitDefaultValue=false)]
        public string ClassificacaoFiscal { get; set; }

        /// <summary>
        /// Gets or Sets OldsituacaoTributaria
        /// </summary>
        [DataMember(Name="oldsituacaoTributaria", EmitDefaultValue=false)]
        public long? OldsituacaoTributaria { get; set; }

        /// <summary>
        /// Gets or Sets PesoLiquido
        /// </summary>
        [DataMember(Name="pesoLiquido", EmitDefaultValue=false)]
        public decimal? PesoLiquido { get; set; }

        /// <summary>
        /// Gets or Sets PesoBruto
        /// </summary>
        [DataMember(Name="pesoBruto", EmitDefaultValue=false)]
        public decimal? PesoBruto { get; set; }

        /// <summary>
        /// Gets or Sets Largura
        /// </summary>
        [DataMember(Name="largura", EmitDefaultValue=false)]
        public decimal? Largura { get; set; }

        /// <summary>
        /// Gets or Sets Comprimento
        /// </summary>
        [DataMember(Name="comprimento", EmitDefaultValue=false)]
        public decimal? Comprimento { get; set; }

        /// <summary>
        /// Gets or Sets Altura
        /// </summary>
        [DataMember(Name="altura", EmitDefaultValue=false)]
        public decimal? Altura { get; set; }

        /// <summary>
        /// Gets or Sets CodigoDocumento
        /// </summary>
        [DataMember(Name="codigoDocumento", EmitDefaultValue=false)]
        public long? CodigoDocumento { get; set; }

        /// <summary>
        /// Gets or Sets CodigoLote
        /// </summary>
        [DataMember(Name="codigoLote", EmitDefaultValue=false)]
        public long? CodigoLote { get; set; }

        /// <summary>
        /// Gets or Sets ValorServico
        /// </summary>
        [DataMember(Name="valorServico", EmitDefaultValue=false)]
        public decimal? ValorServico { get; set; }

        /// <summary>
        /// Gets or Sets TipoLogistico
        /// </summary>
        [DataMember(Name="tipoLogistico", EmitDefaultValue=false)]
        public long? TipoLogistico { get; set; }

        /// <summary>
        /// Gets or Sets DadoLogistico
        /// </summary>
        [DataMember(Name="dadoLogistico", EmitDefaultValue=false)]
        public string DadoLogistico { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets DataHistorico
        /// </summary>
        [DataMember(Name="dataHistorico", EmitDefaultValue=false)]
        public DateTime? DataHistorico { get; set; }

        /// <summary>
        /// Gets or Sets NumeroLote
        /// </summary>
        [DataMember(Name="numeroLote", EmitDefaultValue=false)]
        public long? NumeroLote { get; set; }

        /// <summary>
        /// Gets or Sets ValorDesconto
        /// </summary>
        [DataMember(Name="valorDesconto", EmitDefaultValue=false)]
        public decimal? ValorDesconto { get; set; }

        /// <summary>
        /// Gets or Sets ValorAcrescimo
        /// </summary>
        [DataMember(Name="valorAcrescimo", EmitDefaultValue=false)]
        public decimal? ValorAcrescimo { get; set; }

        /// <summary>
        /// Gets or Sets NaturezaOperacao
        /// </summary>
        [DataMember(Name="naturezaOperacao", EmitDefaultValue=false)]
        public string NaturezaOperacao { get; set; }

        /// <summary>
        /// Gets or Sets Cfop
        /// </summary>
        [DataMember(Name="cfop", EmitDefaultValue=false)]
        public string Cfop { get; set; }

        /// <summary>
        /// Gets or Sets DocumentoRelacionado
        /// </summary>
        [DataMember(Name="documentoRelacionado", EmitDefaultValue=false)]
        public string DocumentoRelacionado { get; set; }

        /// <summary>
        /// Gets or Sets DocumentoQualidade
        /// </summary>
        [DataMember(Name="documentoQualidade", EmitDefaultValue=false)]
        public string DocumentoQualidade { get; set; }

        /// <summary>
        /// Gets or Sets SitTributaria
        /// </summary>
        [DataMember(Name="sitTributaria", EmitDefaultValue=false)]
        public string SitTributaria { get; set; }

        /// <summary>
        /// Gets or Sets SistemaModulo
        /// </summary>
        [DataMember(Name="sistemaModulo", EmitDefaultValue=false)]
        public long? SistemaModulo { get; set; }

        /// <summary>
        /// Gets or Sets ValorUnitarioFiscal
        /// </summary>
        [DataMember(Name="valorUnitarioFiscal", EmitDefaultValue=false)]
        public decimal? ValorUnitarioFiscal { get; set; }

        /// <summary>
        /// Gets or Sets Observacao
        /// </summary>
        [DataMember(Name="observacao", EmitDefaultValue=false)]
        public string Observacao { get; set; }

        /// <summary>
        /// Gets or Sets ClasseProduto
        /// </summary>
        [DataMember(Name="classeProduto", EmitDefaultValue=false)]
        public string ClasseProduto { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIcms
        /// </summary>
        [DataMember(Name="fatorBaseIcms", EmitDefaultValue=false)]
        public decimal? FatorBaseIcms { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIpi
        /// </summary>
        [DataMember(Name="fatorBaseIpi", EmitDefaultValue=false)]
        public decimal? FatorBaseIpi { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcmsReducao
        /// </summary>
        [DataMember(Name="aliquotaIcmsReducao", EmitDefaultValue=false)]
        public decimal? AliquotaIcmsReducao { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIpiReducao
        /// </summary>
        [DataMember(Name="aliquotaIpiReducao", EmitDefaultValue=false)]
        public decimal? AliquotaIpiReducao { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeOrigem
        /// </summary>
        [DataMember(Name="quantidadeOrigem", EmitDefaultValue=false)]
        public decimal? QuantidadeOrigem { get; set; }

        /// <summary>
        /// Gets or Sets NumeroDocumento
        /// </summary>
        [DataMember(Name="numeroDocumento", EmitDefaultValue=false)]
        public string NumeroDocumento { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional1
        /// </summary>
        [DataMember(Name="informacaoAdicional1", EmitDefaultValue=false)]
        public string InformacaoAdicional1 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional2
        /// </summary>
        [DataMember(Name="informacaoAdicional2", EmitDefaultValue=false)]
        public string InformacaoAdicional2 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional3
        /// </summary>
        [DataMember(Name="informacaoAdicional3", EmitDefaultValue=false)]
        public string InformacaoAdicional3 { get; set; }

        /// <summary>
        /// Gets or Sets StDocumentoAtualizacao
        /// </summary>
        [DataMember(Name="stDocumentoAtualizacao", EmitDefaultValue=false)]
        public string StDocumentoAtualizacao { get; set; }

        /// <summary>
        /// Gets or Sets OrdemSeparacao
        /// </summary>
        [DataMember(Name="ordemSeparacao", EmitDefaultValue=false)]
        public string OrdemSeparacao { get; set; }

        /// <summary>
        /// Gets or Sets NumeroPedidoSeparacao
        /// </summary>
        [DataMember(Name="numeroPedidoSeparacao", EmitDefaultValue=false)]
        public string NumeroPedidoSeparacao { get; set; }

        /// <summary>
        /// Gets or Sets DataPedidoSeparacao
        /// </summary>
        [DataMember(Name="dataPedidoSeparacao", EmitDefaultValue=false)]
        public DateTime? DataPedidoSeparacao { get; set; }

        /// <summary>
        /// Gets or Sets NfeInformacaoAdicional
        /// </summary>
        [DataMember(Name="nfeInformacaoAdicional", EmitDefaultValue=false)]
        public string NfeInformacaoAdicional { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIcms
        /// </summary>
        [DataMember(Name="valorBaseIcms", EmitDefaultValue=false)]
        public decimal? ValorBaseIcms { get; set; }

        /// <summary>
        /// Gets or Sets ValorIcms
        /// </summary>
        [DataMember(Name="valorIcms", EmitDefaultValue=false)]
        public decimal? ValorIcms { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIpi
        /// </summary>
        [DataMember(Name="valorBaseIpi", EmitDefaultValue=false)]
        public decimal? ValorBaseIpi { get; set; }

        /// <summary>
        /// Gets or Sets ValorIpi
        /// </summary>
        [DataMember(Name="valorIpi", EmitDefaultValue=false)]
        public decimal? ValorIpi { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaMva
        /// </summary>
        [DataMember(Name="aliquotaMva", EmitDefaultValue=false)]
        public decimal? AliquotaMva { get; set; }

        /// <summary>
        /// Gets or Sets ValorIcmsSt
        /// </summary>
        [DataMember(Name="valorIcmsSt", EmitDefaultValue=false)]
        public decimal? ValorIcmsSt { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIcmsSt
        /// </summary>
        [DataMember(Name="valorBaseIcmsSt", EmitDefaultValue=false)]
        public decimal? ValorBaseIcmsSt { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIcmsSt
        /// </summary>
        [DataMember(Name="fatorBaseIcmsSt", EmitDefaultValue=false)]
        public decimal? FatorBaseIcmsSt { get; set; }

        /// <summary>
        /// Gets or Sets NumeroPedidoCompra
        /// </summary>
        [DataMember(Name="numeroPedidoCompra", EmitDefaultValue=false)]
        public string NumeroPedidoCompra { get; set; }

        /// <summary>
        /// Gets or Sets ItemPedidoCompra
        /// </summary>
        [DataMember(Name="itemPedidoCompra", EmitDefaultValue=false)]
        public long? ItemPedidoCompra { get; set; }

        /// <summary>
        /// Gets or Sets ValorTotalItem
        /// </summary>
        [DataMember(Name="valorTotalItem", EmitDefaultValue=false)]
        public decimal? ValorTotalItem { get; set; }

        /// <summary>
        /// Gets or Sets ValorFrete
        /// </summary>
        [DataMember(Name="valorFrete", EmitDefaultValue=false)]
        public decimal? ValorFrete { get; set; }

        /// <summary>
        /// Gets or Sets ValorSeguro
        /// </summary>
        [DataMember(Name="valorSeguro", EmitDefaultValue=false)]
        public decimal? ValorSeguro { get; set; }

        /// <summary>
        /// Gets or Sets SitTributariaOrigem
        /// </summary>
        [DataMember(Name="sitTributariaOrigem", EmitDefaultValue=false)]
        public SitTributariaOrigem SitTributariaOrigem { get; set; }

        /// <summary>
        /// Gets or Sets SituacaoTributaria
        /// </summary>
        [DataMember(Name="situacaoTributaria", EmitDefaultValue=false)]
        public SitTributariaIcms SituacaoTributaria { get; set; }

        /// <summary>
        /// Gets or Sets SituacaoTributariaIpi
        /// </summary>
        [DataMember(Name="situacaoTributariaIpi", EmitDefaultValue=false)]
        public SituacaoTributariaIpi SituacaoTributariaIpi { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEnquadramentoIpi
        /// </summary>
        [DataMember(Name="codigoEnquadramentoIpi", EmitDefaultValue=false)]
        public CodigoEnquadramentoIpi CodigoEnquadramentoIpi { get; set; }

        /// <summary>
        /// Gets or Sets DoctoOficialEntrada
        /// </summary>
        [DataMember(Name="doctoOficialEntrada", EmitDefaultValue=false)]
        public DocumentoOficialEntrada DoctoOficialEntrada { get; set; }

        /// <summary>
        /// Gets or Sets NumeroFci
        /// </summary>
        [DataMember(Name="numeroFci", EmitDefaultValue=false)]
        public string NumeroFci { get; set; }

        /// <summary>
        /// Gets or Sets CodigoNcm
        /// </summary>
        [DataMember(Name="codigoNcm", EmitDefaultValue=false)]
        public string CodigoNcm { get; set; }

        /// <summary>
        /// Gets or Sets CodigoModBcSt
        /// </summary>
        [DataMember(Name="codigoModBcSt", EmitDefaultValue=false)]
        public long? CodigoModBcSt { get; set; }

        /// <summary>
        /// Gets or Sets Tes
        /// </summary>
        [DataMember(Name="tes", EmitDefaultValue=false)]
        public string Tes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DocumentoOficialEntradaItem {\n");
            sb.Append("  CodigoEstabelecimento: ").Append(CodigoEstabelecimento).Append("\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  TipoDocumento: ").Append(TipoDocumento).Append("\n");
            sb.Append("  SerieDocumento: ").Append(SerieDocumento).Append("\n");
            sb.Append("  DocumentoOficialEntrada: ").Append(DocumentoOficialEntrada).Append("\n");
            sb.Append("  SequenciaOficialEntrada: ").Append(SequenciaOficialEntrada).Append("\n");
            sb.Append("  CodigoMatriz: ").Append(CodigoMatriz).Append("\n");
            sb.Append("  CodigoProduto: ").Append(CodigoProduto).Append("\n");
            sb.Append("  DescricaoProduto: ").Append(DescricaoProduto).Append("\n");
            sb.Append("  TipoUc: ").Append(TipoUc).Append("\n");
            sb.Append("  FatorTipoUc: ").Append(FatorTipoUc).Append("\n");
            sb.Append("  QuantidadeDocumento: ").Append(QuantidadeDocumento).Append("\n");
            sb.Append("  QuantidadeEntrada: ").Append(QuantidadeEntrada).Append("\n");
            sb.Append("  QuantidadeInicial: ").Append(QuantidadeInicial).Append("\n");
            sb.Append("  ValorUnitario: ").Append(ValorUnitario).Append("\n");
            sb.Append("  AliquotaIcms: ").Append(AliquotaIcms).Append("\n");
            sb.Append("  AliquotaIcmsSub: ").Append(AliquotaIcmsSub).Append("\n");
            sb.Append("  AliquotaIpi: ").Append(AliquotaIpi).Append("\n");
            sb.Append("  ClassificacaoFiscal: ").Append(ClassificacaoFiscal).Append("\n");
            sb.Append("  OldsituacaoTributaria: ").Append(OldsituacaoTributaria).Append("\n");
            sb.Append("  PesoLiquido: ").Append(PesoLiquido).Append("\n");
            sb.Append("  PesoBruto: ").Append(PesoBruto).Append("\n");
            sb.Append("  Largura: ").Append(Largura).Append("\n");
            sb.Append("  Comprimento: ").Append(Comprimento).Append("\n");
            sb.Append("  Altura: ").Append(Altura).Append("\n");
            sb.Append("  CodigoDocumento: ").Append(CodigoDocumento).Append("\n");
            sb.Append("  CodigoLote: ").Append(CodigoLote).Append("\n");
            sb.Append("  ValorServico: ").Append(ValorServico).Append("\n");
            sb.Append("  TipoLogistico: ").Append(TipoLogistico).Append("\n");
            sb.Append("  DadoLogistico: ").Append(DadoLogistico).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  DataHistorico: ").Append(DataHistorico).Append("\n");
            sb.Append("  NumeroLote: ").Append(NumeroLote).Append("\n");
            sb.Append("  ValorDesconto: ").Append(ValorDesconto).Append("\n");
            sb.Append("  ValorAcrescimo: ").Append(ValorAcrescimo).Append("\n");
            sb.Append("  NaturezaOperacao: ").Append(NaturezaOperacao).Append("\n");
            sb.Append("  Cfop: ").Append(Cfop).Append("\n");
            sb.Append("  DocumentoRelacionado: ").Append(DocumentoRelacionado).Append("\n");
            sb.Append("  DocumentoQualidade: ").Append(DocumentoQualidade).Append("\n");
            sb.Append("  SitTributaria: ").Append(SitTributaria).Append("\n");
            sb.Append("  SistemaModulo: ").Append(SistemaModulo).Append("\n");
            sb.Append("  ValorUnitarioFiscal: ").Append(ValorUnitarioFiscal).Append("\n");
            sb.Append("  Observacao: ").Append(Observacao).Append("\n");
            sb.Append("  ClasseProduto: ").Append(ClasseProduto).Append("\n");
            sb.Append("  FatorBaseIcms: ").Append(FatorBaseIcms).Append("\n");
            sb.Append("  FatorBaseIpi: ").Append(FatorBaseIpi).Append("\n");
            sb.Append("  AliquotaIcmsReducao: ").Append(AliquotaIcmsReducao).Append("\n");
            sb.Append("  AliquotaIpiReducao: ").Append(AliquotaIpiReducao).Append("\n");
            sb.Append("  QuantidadeOrigem: ").Append(QuantidadeOrigem).Append("\n");
            sb.Append("  NumeroDocumento: ").Append(NumeroDocumento).Append("\n");
            sb.Append("  InformacaoAdicional1: ").Append(InformacaoAdicional1).Append("\n");
            sb.Append("  InformacaoAdicional2: ").Append(InformacaoAdicional2).Append("\n");
            sb.Append("  InformacaoAdicional3: ").Append(InformacaoAdicional3).Append("\n");
            sb.Append("  StDocumentoAtualizacao: ").Append(StDocumentoAtualizacao).Append("\n");
            sb.Append("  OrdemSeparacao: ").Append(OrdemSeparacao).Append("\n");
            sb.Append("  NumeroPedidoSeparacao: ").Append(NumeroPedidoSeparacao).Append("\n");
            sb.Append("  DataPedidoSeparacao: ").Append(DataPedidoSeparacao).Append("\n");
            sb.Append("  NfeInformacaoAdicional: ").Append(NfeInformacaoAdicional).Append("\n");
            sb.Append("  ValorBaseIcms: ").Append(ValorBaseIcms).Append("\n");
            sb.Append("  ValorIcms: ").Append(ValorIcms).Append("\n");
            sb.Append("  ValorBaseIpi: ").Append(ValorBaseIpi).Append("\n");
            sb.Append("  ValorIpi: ").Append(ValorIpi).Append("\n");
            sb.Append("  AliquotaMva: ").Append(AliquotaMva).Append("\n");
            sb.Append("  ValorIcmsSt: ").Append(ValorIcmsSt).Append("\n");
            sb.Append("  ValorBaseIcmsSt: ").Append(ValorBaseIcmsSt).Append("\n");
            sb.Append("  FatorBaseIcmsSt: ").Append(FatorBaseIcmsSt).Append("\n");
            sb.Append("  NumeroPedidoCompra: ").Append(NumeroPedidoCompra).Append("\n");
            sb.Append("  ItemPedidoCompra: ").Append(ItemPedidoCompra).Append("\n");
            sb.Append("  ValorTotalItem: ").Append(ValorTotalItem).Append("\n");
            sb.Append("  ValorFrete: ").Append(ValorFrete).Append("\n");
            sb.Append("  ValorSeguro: ").Append(ValorSeguro).Append("\n");
            sb.Append("  SitTributariaOrigem: ").Append(SitTributariaOrigem).Append("\n");
            sb.Append("  SituacaoTributaria: ").Append(SituacaoTributaria).Append("\n");
            sb.Append("  SituacaoTributariaIpi: ").Append(SituacaoTributariaIpi).Append("\n");
            sb.Append("  CodigoEnquadramentoIpi: ").Append(CodigoEnquadramentoIpi).Append("\n");
            sb.Append("  DoctoOficialEntrada: ").Append(DoctoOficialEntrada).Append("\n");
            sb.Append("  NumeroFci: ").Append(NumeroFci).Append("\n");
            sb.Append("  CodigoNcm: ").Append(CodigoNcm).Append("\n");
            sb.Append("  CodigoModBcSt: ").Append(CodigoModBcSt).Append("\n");
            sb.Append("  Tes: ").Append(Tes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DocumentoOficialEntradaItem);
        }

        /// <summary>
        /// Returns true if DocumentoOficialEntradaItem instances are equal
        /// </summary>
        /// <param name="input">Instance of DocumentoOficialEntradaItem to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DocumentoOficialEntradaItem input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoEstabelecimento == input.CodigoEstabelecimento ||
                    (this.CodigoEstabelecimento != null &&
                    this.CodigoEstabelecimento.Equals(input.CodigoEstabelecimento))
                ) && 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.TipoDocumento == input.TipoDocumento ||
                    (this.TipoDocumento != null &&
                    this.TipoDocumento.Equals(input.TipoDocumento))
                ) && 
                (
                    this.SerieDocumento == input.SerieDocumento ||
                    (this.SerieDocumento != null &&
                    this.SerieDocumento.Equals(input.SerieDocumento))
                ) && 
                (
                    this.DocumentoOficialEntrada == input.DocumentoOficialEntrada ||
                    (this.DocumentoOficialEntrada != null &&
                    this.DocumentoOficialEntrada.Equals(input.DocumentoOficialEntrada))
                ) && 
                (
                    this.SequenciaOficialEntrada == input.SequenciaOficialEntrada ||
                    (this.SequenciaOficialEntrada != null &&
                    this.SequenciaOficialEntrada.Equals(input.SequenciaOficialEntrada))
                ) && 
                (
                    this.CodigoMatriz == input.CodigoMatriz ||
                    (this.CodigoMatriz != null &&
                    this.CodigoMatriz.Equals(input.CodigoMatriz))
                ) && 
                (
                    this.CodigoProduto == input.CodigoProduto ||
                    (this.CodigoProduto != null &&
                    this.CodigoProduto.Equals(input.CodigoProduto))
                ) && 
                (
                    this.DescricaoProduto == input.DescricaoProduto ||
                    (this.DescricaoProduto != null &&
                    this.DescricaoProduto.Equals(input.DescricaoProduto))
                ) && 
                (
                    this.TipoUc == input.TipoUc ||
                    (this.TipoUc != null &&
                    this.TipoUc.Equals(input.TipoUc))
                ) && 
                (
                    this.FatorTipoUc == input.FatorTipoUc ||
                    (this.FatorTipoUc != null &&
                    this.FatorTipoUc.Equals(input.FatorTipoUc))
                ) && 
                (
                    this.QuantidadeDocumento == input.QuantidadeDocumento ||
                    (this.QuantidadeDocumento != null &&
                    this.QuantidadeDocumento.Equals(input.QuantidadeDocumento))
                ) && 
                (
                    this.QuantidadeEntrada == input.QuantidadeEntrada ||
                    (this.QuantidadeEntrada != null &&
                    this.QuantidadeEntrada.Equals(input.QuantidadeEntrada))
                ) && 
                (
                    this.QuantidadeInicial == input.QuantidadeInicial ||
                    (this.QuantidadeInicial != null &&
                    this.QuantidadeInicial.Equals(input.QuantidadeInicial))
                ) && 
                (
                    this.ValorUnitario == input.ValorUnitario ||
                    (this.ValorUnitario != null &&
                    this.ValorUnitario.Equals(input.ValorUnitario))
                ) && 
                (
                    this.AliquotaIcms == input.AliquotaIcms ||
                    (this.AliquotaIcms != null &&
                    this.AliquotaIcms.Equals(input.AliquotaIcms))
                ) && 
                (
                    this.AliquotaIcmsSub == input.AliquotaIcmsSub ||
                    (this.AliquotaIcmsSub != null &&
                    this.AliquotaIcmsSub.Equals(input.AliquotaIcmsSub))
                ) && 
                (
                    this.AliquotaIpi == input.AliquotaIpi ||
                    (this.AliquotaIpi != null &&
                    this.AliquotaIpi.Equals(input.AliquotaIpi))
                ) && 
                (
                    this.ClassificacaoFiscal == input.ClassificacaoFiscal ||
                    (this.ClassificacaoFiscal != null &&
                    this.ClassificacaoFiscal.Equals(input.ClassificacaoFiscal))
                ) && 
                (
                    this.OldsituacaoTributaria == input.OldsituacaoTributaria ||
                    (this.OldsituacaoTributaria != null &&
                    this.OldsituacaoTributaria.Equals(input.OldsituacaoTributaria))
                ) && 
                (
                    this.PesoLiquido == input.PesoLiquido ||
                    (this.PesoLiquido != null &&
                    this.PesoLiquido.Equals(input.PesoLiquido))
                ) && 
                (
                    this.PesoBruto == input.PesoBruto ||
                    (this.PesoBruto != null &&
                    this.PesoBruto.Equals(input.PesoBruto))
                ) && 
                (
                    this.Largura == input.Largura ||
                    (this.Largura != null &&
                    this.Largura.Equals(input.Largura))
                ) && 
                (
                    this.Comprimento == input.Comprimento ||
                    (this.Comprimento != null &&
                    this.Comprimento.Equals(input.Comprimento))
                ) && 
                (
                    this.Altura == input.Altura ||
                    (this.Altura != null &&
                    this.Altura.Equals(input.Altura))
                ) && 
                (
                    this.CodigoDocumento == input.CodigoDocumento ||
                    (this.CodigoDocumento != null &&
                    this.CodigoDocumento.Equals(input.CodigoDocumento))
                ) && 
                (
                    this.CodigoLote == input.CodigoLote ||
                    (this.CodigoLote != null &&
                    this.CodigoLote.Equals(input.CodigoLote))
                ) && 
                (
                    this.ValorServico == input.ValorServico ||
                    (this.ValorServico != null &&
                    this.ValorServico.Equals(input.ValorServico))
                ) && 
                (
                    this.TipoLogistico == input.TipoLogistico ||
                    (this.TipoLogistico != null &&
                    this.TipoLogistico.Equals(input.TipoLogistico))
                ) && 
                (
                    this.DadoLogistico == input.DadoLogistico ||
                    (this.DadoLogistico != null &&
                    this.DadoLogistico.Equals(input.DadoLogistico))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.DataHistorico == input.DataHistorico ||
                    (this.DataHistorico != null &&
                    this.DataHistorico.Equals(input.DataHistorico))
                ) && 
                (
                    this.NumeroLote == input.NumeroLote ||
                    (this.NumeroLote != null &&
                    this.NumeroLote.Equals(input.NumeroLote))
                ) && 
                (
                    this.ValorDesconto == input.ValorDesconto ||
                    (this.ValorDesconto != null &&
                    this.ValorDesconto.Equals(input.ValorDesconto))
                ) && 
                (
                    this.ValorAcrescimo == input.ValorAcrescimo ||
                    (this.ValorAcrescimo != null &&
                    this.ValorAcrescimo.Equals(input.ValorAcrescimo))
                ) && 
                (
                    this.NaturezaOperacao == input.NaturezaOperacao ||
                    (this.NaturezaOperacao != null &&
                    this.NaturezaOperacao.Equals(input.NaturezaOperacao))
                ) && 
                (
                    this.Cfop == input.Cfop ||
                    (this.Cfop != null &&
                    this.Cfop.Equals(input.Cfop))
                ) && 
                (
                    this.DocumentoRelacionado == input.DocumentoRelacionado ||
                    (this.DocumentoRelacionado != null &&
                    this.DocumentoRelacionado.Equals(input.DocumentoRelacionado))
                ) && 
                (
                    this.DocumentoQualidade == input.DocumentoQualidade ||
                    (this.DocumentoQualidade != null &&
                    this.DocumentoQualidade.Equals(input.DocumentoQualidade))
                ) && 
                (
                    this.SitTributaria == input.SitTributaria ||
                    (this.SitTributaria != null &&
                    this.SitTributaria.Equals(input.SitTributaria))
                ) && 
                (
                    this.SistemaModulo == input.SistemaModulo ||
                    (this.SistemaModulo != null &&
                    this.SistemaModulo.Equals(input.SistemaModulo))
                ) && 
                (
                    this.ValorUnitarioFiscal == input.ValorUnitarioFiscal ||
                    (this.ValorUnitarioFiscal != null &&
                    this.ValorUnitarioFiscal.Equals(input.ValorUnitarioFiscal))
                ) && 
                (
                    this.Observacao == input.Observacao ||
                    (this.Observacao != null &&
                    this.Observacao.Equals(input.Observacao))
                ) && 
                (
                    this.ClasseProduto == input.ClasseProduto ||
                    (this.ClasseProduto != null &&
                    this.ClasseProduto.Equals(input.ClasseProduto))
                ) && 
                (
                    this.FatorBaseIcms == input.FatorBaseIcms ||
                    (this.FatorBaseIcms != null &&
                    this.FatorBaseIcms.Equals(input.FatorBaseIcms))
                ) && 
                (
                    this.FatorBaseIpi == input.FatorBaseIpi ||
                    (this.FatorBaseIpi != null &&
                    this.FatorBaseIpi.Equals(input.FatorBaseIpi))
                ) && 
                (
                    this.AliquotaIcmsReducao == input.AliquotaIcmsReducao ||
                    (this.AliquotaIcmsReducao != null &&
                    this.AliquotaIcmsReducao.Equals(input.AliquotaIcmsReducao))
                ) && 
                (
                    this.AliquotaIpiReducao == input.AliquotaIpiReducao ||
                    (this.AliquotaIpiReducao != null &&
                    this.AliquotaIpiReducao.Equals(input.AliquotaIpiReducao))
                ) && 
                (
                    this.QuantidadeOrigem == input.QuantidadeOrigem ||
                    (this.QuantidadeOrigem != null &&
                    this.QuantidadeOrigem.Equals(input.QuantidadeOrigem))
                ) && 
                (
                    this.NumeroDocumento == input.NumeroDocumento ||
                    (this.NumeroDocumento != null &&
                    this.NumeroDocumento.Equals(input.NumeroDocumento))
                ) && 
                (
                    this.InformacaoAdicional1 == input.InformacaoAdicional1 ||
                    (this.InformacaoAdicional1 != null &&
                    this.InformacaoAdicional1.Equals(input.InformacaoAdicional1))
                ) && 
                (
                    this.InformacaoAdicional2 == input.InformacaoAdicional2 ||
                    (this.InformacaoAdicional2 != null &&
                    this.InformacaoAdicional2.Equals(input.InformacaoAdicional2))
                ) && 
                (
                    this.InformacaoAdicional3 == input.InformacaoAdicional3 ||
                    (this.InformacaoAdicional3 != null &&
                    this.InformacaoAdicional3.Equals(input.InformacaoAdicional3))
                ) && 
                (
                    this.StDocumentoAtualizacao == input.StDocumentoAtualizacao ||
                    (this.StDocumentoAtualizacao != null &&
                    this.StDocumentoAtualizacao.Equals(input.StDocumentoAtualizacao))
                ) && 
                (
                    this.OrdemSeparacao == input.OrdemSeparacao ||
                    (this.OrdemSeparacao != null &&
                    this.OrdemSeparacao.Equals(input.OrdemSeparacao))
                ) && 
                (
                    this.NumeroPedidoSeparacao == input.NumeroPedidoSeparacao ||
                    (this.NumeroPedidoSeparacao != null &&
                    this.NumeroPedidoSeparacao.Equals(input.NumeroPedidoSeparacao))
                ) && 
                (
                    this.DataPedidoSeparacao == input.DataPedidoSeparacao ||
                    (this.DataPedidoSeparacao != null &&
                    this.DataPedidoSeparacao.Equals(input.DataPedidoSeparacao))
                ) && 
                (
                    this.NfeInformacaoAdicional == input.NfeInformacaoAdicional ||
                    (this.NfeInformacaoAdicional != null &&
                    this.NfeInformacaoAdicional.Equals(input.NfeInformacaoAdicional))
                ) && 
                (
                    this.ValorBaseIcms == input.ValorBaseIcms ||
                    (this.ValorBaseIcms != null &&
                    this.ValorBaseIcms.Equals(input.ValorBaseIcms))
                ) && 
                (
                    this.ValorIcms == input.ValorIcms ||
                    (this.ValorIcms != null &&
                    this.ValorIcms.Equals(input.ValorIcms))
                ) && 
                (
                    this.ValorBaseIpi == input.ValorBaseIpi ||
                    (this.ValorBaseIpi != null &&
                    this.ValorBaseIpi.Equals(input.ValorBaseIpi))
                ) && 
                (
                    this.ValorIpi == input.ValorIpi ||
                    (this.ValorIpi != null &&
                    this.ValorIpi.Equals(input.ValorIpi))
                ) && 
                (
                    this.AliquotaMva == input.AliquotaMva ||
                    (this.AliquotaMva != null &&
                    this.AliquotaMva.Equals(input.AliquotaMva))
                ) && 
                (
                    this.ValorIcmsSt == input.ValorIcmsSt ||
                    (this.ValorIcmsSt != null &&
                    this.ValorIcmsSt.Equals(input.ValorIcmsSt))
                ) && 
                (
                    this.ValorBaseIcmsSt == input.ValorBaseIcmsSt ||
                    (this.ValorBaseIcmsSt != null &&
                    this.ValorBaseIcmsSt.Equals(input.ValorBaseIcmsSt))
                ) && 
                (
                    this.FatorBaseIcmsSt == input.FatorBaseIcmsSt ||
                    (this.FatorBaseIcmsSt != null &&
                    this.FatorBaseIcmsSt.Equals(input.FatorBaseIcmsSt))
                ) && 
                (
                    this.NumeroPedidoCompra == input.NumeroPedidoCompra ||
                    (this.NumeroPedidoCompra != null &&
                    this.NumeroPedidoCompra.Equals(input.NumeroPedidoCompra))
                ) && 
                (
                    this.ItemPedidoCompra == input.ItemPedidoCompra ||
                    (this.ItemPedidoCompra != null &&
                    this.ItemPedidoCompra.Equals(input.ItemPedidoCompra))
                ) && 
                (
                    this.ValorTotalItem == input.ValorTotalItem ||
                    (this.ValorTotalItem != null &&
                    this.ValorTotalItem.Equals(input.ValorTotalItem))
                ) && 
                (
                    this.ValorFrete == input.ValorFrete ||
                    (this.ValorFrete != null &&
                    this.ValorFrete.Equals(input.ValorFrete))
                ) && 
                (
                    this.ValorSeguro == input.ValorSeguro ||
                    (this.ValorSeguro != null &&
                    this.ValorSeguro.Equals(input.ValorSeguro))
                ) && 
                (
                    this.SitTributariaOrigem == input.SitTributariaOrigem ||
                    (this.SitTributariaOrigem != null &&
                    this.SitTributariaOrigem.Equals(input.SitTributariaOrigem))
                ) && 
                (
                    this.SituacaoTributaria == input.SituacaoTributaria ||
                    (this.SituacaoTributaria != null &&
                    this.SituacaoTributaria.Equals(input.SituacaoTributaria))
                ) && 
                (
                    this.SituacaoTributariaIpi == input.SituacaoTributariaIpi ||
                    (this.SituacaoTributariaIpi != null &&
                    this.SituacaoTributariaIpi.Equals(input.SituacaoTributariaIpi))
                ) && 
                (
                    this.CodigoEnquadramentoIpi == input.CodigoEnquadramentoIpi ||
                    (this.CodigoEnquadramentoIpi != null &&
                    this.CodigoEnquadramentoIpi.Equals(input.CodigoEnquadramentoIpi))
                ) && 
                (
                    this.DoctoOficialEntrada == input.DoctoOficialEntrada ||
                    (this.DoctoOficialEntrada != null &&
                    this.DoctoOficialEntrada.Equals(input.DoctoOficialEntrada))
                ) && 
                (
                    this.NumeroFci == input.NumeroFci ||
                    (this.NumeroFci != null &&
                    this.NumeroFci.Equals(input.NumeroFci))
                ) && 
                (
                    this.CodigoNcm == input.CodigoNcm ||
                    (this.CodigoNcm != null &&
                    this.CodigoNcm.Equals(input.CodigoNcm))
                ) && 
                (
                    this.CodigoModBcSt == input.CodigoModBcSt ||
                    (this.CodigoModBcSt != null &&
                    this.CodigoModBcSt.Equals(input.CodigoModBcSt))
                ) && 
                (
                    this.Tes == input.Tes ||
                    (this.Tes != null &&
                    this.Tes.Equals(input.Tes))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoEstabelecimento != null)
                    hashCode = hashCode * 59 + this.CodigoEstabelecimento.GetHashCode();
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.TipoDocumento != null)
                    hashCode = hashCode * 59 + this.TipoDocumento.GetHashCode();
                if (this.SerieDocumento != null)
                    hashCode = hashCode * 59 + this.SerieDocumento.GetHashCode();
                if (this.DocumentoOficialEntrada != null)
                    hashCode = hashCode * 59 + this.DocumentoOficialEntrada.GetHashCode();
                if (this.SequenciaOficialEntrada != null)
                    hashCode = hashCode * 59 + this.SequenciaOficialEntrada.GetHashCode();
                if (this.CodigoMatriz != null)
                    hashCode = hashCode * 59 + this.CodigoMatriz.GetHashCode();
                if (this.CodigoProduto != null)
                    hashCode = hashCode * 59 + this.CodigoProduto.GetHashCode();
                if (this.DescricaoProduto != null)
                    hashCode = hashCode * 59 + this.DescricaoProduto.GetHashCode();
                if (this.TipoUc != null)
                    hashCode = hashCode * 59 + this.TipoUc.GetHashCode();
                if (this.FatorTipoUc != null)
                    hashCode = hashCode * 59 + this.FatorTipoUc.GetHashCode();
                if (this.QuantidadeDocumento != null)
                    hashCode = hashCode * 59 + this.QuantidadeDocumento.GetHashCode();
                if (this.QuantidadeEntrada != null)
                    hashCode = hashCode * 59 + this.QuantidadeEntrada.GetHashCode();
                if (this.QuantidadeInicial != null)
                    hashCode = hashCode * 59 + this.QuantidadeInicial.GetHashCode();
                if (this.ValorUnitario != null)
                    hashCode = hashCode * 59 + this.ValorUnitario.GetHashCode();
                if (this.AliquotaIcms != null)
                    hashCode = hashCode * 59 + this.AliquotaIcms.GetHashCode();
                if (this.AliquotaIcmsSub != null)
                    hashCode = hashCode * 59 + this.AliquotaIcmsSub.GetHashCode();
                if (this.AliquotaIpi != null)
                    hashCode = hashCode * 59 + this.AliquotaIpi.GetHashCode();
                if (this.ClassificacaoFiscal != null)
                    hashCode = hashCode * 59 + this.ClassificacaoFiscal.GetHashCode();
                if (this.OldsituacaoTributaria != null)
                    hashCode = hashCode * 59 + this.OldsituacaoTributaria.GetHashCode();
                if (this.PesoLiquido != null)
                    hashCode = hashCode * 59 + this.PesoLiquido.GetHashCode();
                if (this.PesoBruto != null)
                    hashCode = hashCode * 59 + this.PesoBruto.GetHashCode();
                if (this.Largura != null)
                    hashCode = hashCode * 59 + this.Largura.GetHashCode();
                if (this.Comprimento != null)
                    hashCode = hashCode * 59 + this.Comprimento.GetHashCode();
                if (this.Altura != null)
                    hashCode = hashCode * 59 + this.Altura.GetHashCode();
                if (this.CodigoDocumento != null)
                    hashCode = hashCode * 59 + this.CodigoDocumento.GetHashCode();
                if (this.CodigoLote != null)
                    hashCode = hashCode * 59 + this.CodigoLote.GetHashCode();
                if (this.ValorServico != null)
                    hashCode = hashCode * 59 + this.ValorServico.GetHashCode();
                if (this.TipoLogistico != null)
                    hashCode = hashCode * 59 + this.TipoLogistico.GetHashCode();
                if (this.DadoLogistico != null)
                    hashCode = hashCode * 59 + this.DadoLogistico.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.DataHistorico != null)
                    hashCode = hashCode * 59 + this.DataHistorico.GetHashCode();
                if (this.NumeroLote != null)
                    hashCode = hashCode * 59 + this.NumeroLote.GetHashCode();
                if (this.ValorDesconto != null)
                    hashCode = hashCode * 59 + this.ValorDesconto.GetHashCode();
                if (this.ValorAcrescimo != null)
                    hashCode = hashCode * 59 + this.ValorAcrescimo.GetHashCode();
                if (this.NaturezaOperacao != null)
                    hashCode = hashCode * 59 + this.NaturezaOperacao.GetHashCode();
                if (this.Cfop != null)
                    hashCode = hashCode * 59 + this.Cfop.GetHashCode();
                if (this.DocumentoRelacionado != null)
                    hashCode = hashCode * 59 + this.DocumentoRelacionado.GetHashCode();
                if (this.DocumentoQualidade != null)
                    hashCode = hashCode * 59 + this.DocumentoQualidade.GetHashCode();
                if (this.SitTributaria != null)
                    hashCode = hashCode * 59 + this.SitTributaria.GetHashCode();
                if (this.SistemaModulo != null)
                    hashCode = hashCode * 59 + this.SistemaModulo.GetHashCode();
                if (this.ValorUnitarioFiscal != null)
                    hashCode = hashCode * 59 + this.ValorUnitarioFiscal.GetHashCode();
                if (this.Observacao != null)
                    hashCode = hashCode * 59 + this.Observacao.GetHashCode();
                if (this.ClasseProduto != null)
                    hashCode = hashCode * 59 + this.ClasseProduto.GetHashCode();
                if (this.FatorBaseIcms != null)
                    hashCode = hashCode * 59 + this.FatorBaseIcms.GetHashCode();
                if (this.FatorBaseIpi != null)
                    hashCode = hashCode * 59 + this.FatorBaseIpi.GetHashCode();
                if (this.AliquotaIcmsReducao != null)
                    hashCode = hashCode * 59 + this.AliquotaIcmsReducao.GetHashCode();
                if (this.AliquotaIpiReducao != null)
                    hashCode = hashCode * 59 + this.AliquotaIpiReducao.GetHashCode();
                if (this.QuantidadeOrigem != null)
                    hashCode = hashCode * 59 + this.QuantidadeOrigem.GetHashCode();
                if (this.NumeroDocumento != null)
                    hashCode = hashCode * 59 + this.NumeroDocumento.GetHashCode();
                if (this.InformacaoAdicional1 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional1.GetHashCode();
                if (this.InformacaoAdicional2 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional2.GetHashCode();
                if (this.InformacaoAdicional3 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional3.GetHashCode();
                if (this.StDocumentoAtualizacao != null)
                    hashCode = hashCode * 59 + this.StDocumentoAtualizacao.GetHashCode();
                if (this.OrdemSeparacao != null)
                    hashCode = hashCode * 59 + this.OrdemSeparacao.GetHashCode();
                if (this.NumeroPedidoSeparacao != null)
                    hashCode = hashCode * 59 + this.NumeroPedidoSeparacao.GetHashCode();
                if (this.DataPedidoSeparacao != null)
                    hashCode = hashCode * 59 + this.DataPedidoSeparacao.GetHashCode();
                if (this.NfeInformacaoAdicional != null)
                    hashCode = hashCode * 59 + this.NfeInformacaoAdicional.GetHashCode();
                if (this.ValorBaseIcms != null)
                    hashCode = hashCode * 59 + this.ValorBaseIcms.GetHashCode();
                if (this.ValorIcms != null)
                    hashCode = hashCode * 59 + this.ValorIcms.GetHashCode();
                if (this.ValorBaseIpi != null)
                    hashCode = hashCode * 59 + this.ValorBaseIpi.GetHashCode();
                if (this.ValorIpi != null)
                    hashCode = hashCode * 59 + this.ValorIpi.GetHashCode();
                if (this.AliquotaMva != null)
                    hashCode = hashCode * 59 + this.AliquotaMva.GetHashCode();
                if (this.ValorIcmsSt != null)
                    hashCode = hashCode * 59 + this.ValorIcmsSt.GetHashCode();
                if (this.ValorBaseIcmsSt != null)
                    hashCode = hashCode * 59 + this.ValorBaseIcmsSt.GetHashCode();
                if (this.FatorBaseIcmsSt != null)
                    hashCode = hashCode * 59 + this.FatorBaseIcmsSt.GetHashCode();
                if (this.NumeroPedidoCompra != null)
                    hashCode = hashCode * 59 + this.NumeroPedidoCompra.GetHashCode();
                if (this.ItemPedidoCompra != null)
                    hashCode = hashCode * 59 + this.ItemPedidoCompra.GetHashCode();
                if (this.ValorTotalItem != null)
                    hashCode = hashCode * 59 + this.ValorTotalItem.GetHashCode();
                if (this.ValorFrete != null)
                    hashCode = hashCode * 59 + this.ValorFrete.GetHashCode();
                if (this.ValorSeguro != null)
                    hashCode = hashCode * 59 + this.ValorSeguro.GetHashCode();
                if (this.SitTributariaOrigem != null)
                    hashCode = hashCode * 59 + this.SitTributariaOrigem.GetHashCode();
                if (this.SituacaoTributaria != null)
                    hashCode = hashCode * 59 + this.SituacaoTributaria.GetHashCode();
                if (this.SituacaoTributariaIpi != null)
                    hashCode = hashCode * 59 + this.SituacaoTributariaIpi.GetHashCode();
                if (this.CodigoEnquadramentoIpi != null)
                    hashCode = hashCode * 59 + this.CodigoEnquadramentoIpi.GetHashCode();
                if (this.DoctoOficialEntrada != null)
                    hashCode = hashCode * 59 + this.DoctoOficialEntrada.GetHashCode();
                if (this.NumeroFci != null)
                    hashCode = hashCode * 59 + this.NumeroFci.GetHashCode();
                if (this.CodigoNcm != null)
                    hashCode = hashCode * 59 + this.CodigoNcm.GetHashCode();
                if (this.CodigoModBcSt != null)
                    hashCode = hashCode * 59 + this.CodigoModBcSt.GetHashCode();
                if (this.Tes != null)
                    hashCode = hashCode * 59 + this.Tes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ClassificacaoFiscal (string) maxLength
            if(this.ClassificacaoFiscal != null && this.ClassificacaoFiscal.Length > 10)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ClassificacaoFiscal, length must be less than 10.", new [] { "ClassificacaoFiscal" });
            }

            // ClassificacaoFiscal (string) minLength
            if(this.ClassificacaoFiscal != null && this.ClassificacaoFiscal.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ClassificacaoFiscal, length must be greater than 0.", new [] { "ClassificacaoFiscal" });
            }

            // DadoLogistico (string) maxLength
            if(this.DadoLogistico != null && this.DadoLogistico.Length > 25)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DadoLogistico, length must be less than 25.", new [] { "DadoLogistico" });
            }

            // DadoLogistico (string) minLength
            if(this.DadoLogistico != null && this.DadoLogistico.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DadoLogistico, length must be greater than 0.", new [] { "DadoLogistico" });
            }

            // Usuario (string) maxLength
            if(this.Usuario != null && this.Usuario.Length > 60)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Usuario, length must be less than 60.", new [] { "Usuario" });
            }

            // Usuario (string) minLength
            if(this.Usuario != null && this.Usuario.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Usuario, length must be greater than 0.", new [] { "Usuario" });
            }

            // NaturezaOperacao (string) maxLength
            if(this.NaturezaOperacao != null && this.NaturezaOperacao.Length > 15)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NaturezaOperacao, length must be less than 15.", new [] { "NaturezaOperacao" });
            }

            // NaturezaOperacao (string) minLength
            if(this.NaturezaOperacao != null && this.NaturezaOperacao.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NaturezaOperacao, length must be greater than 0.", new [] { "NaturezaOperacao" });
            }

            // Cfop (string) maxLength
            if(this.Cfop != null && this.Cfop.Length > 15)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Cfop, length must be less than 15.", new [] { "Cfop" });
            }

            // Cfop (string) minLength
            if(this.Cfop != null && this.Cfop.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Cfop, length must be greater than 0.", new [] { "Cfop" });
            }

            // DocumentoRelacionado (string) maxLength
            if(this.DocumentoRelacionado != null && this.DocumentoRelacionado.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DocumentoRelacionado, length must be less than 100.", new [] { "DocumentoRelacionado" });
            }

            // DocumentoRelacionado (string) minLength
            if(this.DocumentoRelacionado != null && this.DocumentoRelacionado.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DocumentoRelacionado, length must be greater than 0.", new [] { "DocumentoRelacionado" });
            }

            // DocumentoQualidade (string) maxLength
            if(this.DocumentoQualidade != null && this.DocumentoQualidade.Length > 25)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DocumentoQualidade, length must be less than 25.", new [] { "DocumentoQualidade" });
            }

            // DocumentoQualidade (string) minLength
            if(this.DocumentoQualidade != null && this.DocumentoQualidade.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DocumentoQualidade, length must be greater than 0.", new [] { "DocumentoQualidade" });
            }

            // SitTributaria (string) maxLength
            if(this.SitTributaria != null && this.SitTributaria.Length > 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SitTributaria, length must be less than 3.", new [] { "SitTributaria" });
            }

            // SitTributaria (string) minLength
            if(this.SitTributaria != null && this.SitTributaria.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SitTributaria, length must be greater than 0.", new [] { "SitTributaria" });
            }

            // Observacao (string) maxLength
            if(this.Observacao != null && this.Observacao.Length > 200)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Observacao, length must be less than 200.", new [] { "Observacao" });
            }

            // Observacao (string) minLength
            if(this.Observacao != null && this.Observacao.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Observacao, length must be greater than 0.", new [] { "Observacao" });
            }

            // ClasseProduto (string) maxLength
            if(this.ClasseProduto != null && this.ClasseProduto.Length > 5)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ClasseProduto, length must be less than 5.", new [] { "ClasseProduto" });
            }

            // ClasseProduto (string) minLength
            if(this.ClasseProduto != null && this.ClasseProduto.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ClasseProduto, length must be greater than 0.", new [] { "ClasseProduto" });
            }

            // NumeroDocumento (string) maxLength
            if(this.NumeroDocumento != null && this.NumeroDocumento.Length > 10)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NumeroDocumento, length must be less than 10.", new [] { "NumeroDocumento" });
            }

            // NumeroDocumento (string) minLength
            if(this.NumeroDocumento != null && this.NumeroDocumento.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NumeroDocumento, length must be greater than 0.", new [] { "NumeroDocumento" });
            }

            // InformacaoAdicional1 (string) maxLength
            if(this.InformacaoAdicional1 != null && this.InformacaoAdicional1.Length > 25)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InformacaoAdicional1, length must be less than 25.", new [] { "InformacaoAdicional1" });
            }

            // InformacaoAdicional1 (string) minLength
            if(this.InformacaoAdicional1 != null && this.InformacaoAdicional1.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InformacaoAdicional1, length must be greater than 0.", new [] { "InformacaoAdicional1" });
            }

            // InformacaoAdicional2 (string) maxLength
            if(this.InformacaoAdicional2 != null && this.InformacaoAdicional2.Length > 25)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InformacaoAdicional2, length must be less than 25.", new [] { "InformacaoAdicional2" });
            }

            // InformacaoAdicional2 (string) minLength
            if(this.InformacaoAdicional2 != null && this.InformacaoAdicional2.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InformacaoAdicional2, length must be greater than 0.", new [] { "InformacaoAdicional2" });
            }

            // InformacaoAdicional3 (string) maxLength
            if(this.InformacaoAdicional3 != null && this.InformacaoAdicional3.Length > 25)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InformacaoAdicional3, length must be less than 25.", new [] { "InformacaoAdicional3" });
            }

            // InformacaoAdicional3 (string) minLength
            if(this.InformacaoAdicional3 != null && this.InformacaoAdicional3.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InformacaoAdicional3, length must be greater than 0.", new [] { "InformacaoAdicional3" });
            }

            // StDocumentoAtualizacao (string) maxLength
            if(this.StDocumentoAtualizacao != null && this.StDocumentoAtualizacao.Length > 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for StDocumentoAtualizacao, length must be less than 1.", new [] { "StDocumentoAtualizacao" });
            }

            // StDocumentoAtualizacao (string) minLength
            if(this.StDocumentoAtualizacao != null && this.StDocumentoAtualizacao.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for StDocumentoAtualizacao, length must be greater than 0.", new [] { "StDocumentoAtualizacao" });
            }

            // OrdemSeparacao (string) maxLength
            if(this.OrdemSeparacao != null && this.OrdemSeparacao.Length > 15)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrdemSeparacao, length must be less than 15.", new [] { "OrdemSeparacao" });
            }

            // OrdemSeparacao (string) minLength
            if(this.OrdemSeparacao != null && this.OrdemSeparacao.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for OrdemSeparacao, length must be greater than 0.", new [] { "OrdemSeparacao" });
            }

            // NumeroPedidoSeparacao (string) maxLength
            if(this.NumeroPedidoSeparacao != null && this.NumeroPedidoSeparacao.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NumeroPedidoSeparacao, length must be less than 50.", new [] { "NumeroPedidoSeparacao" });
            }

            // NumeroPedidoSeparacao (string) minLength
            if(this.NumeroPedidoSeparacao != null && this.NumeroPedidoSeparacao.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NumeroPedidoSeparacao, length must be greater than 0.", new [] { "NumeroPedidoSeparacao" });
            }

            // NfeInformacaoAdicional (string) maxLength
            if(this.NfeInformacaoAdicional != null && this.NfeInformacaoAdicional.Length > 500)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NfeInformacaoAdicional, length must be less than 500.", new [] { "NfeInformacaoAdicional" });
            }

            // NfeInformacaoAdicional (string) minLength
            if(this.NfeInformacaoAdicional != null && this.NfeInformacaoAdicional.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NfeInformacaoAdicional, length must be greater than 0.", new [] { "NfeInformacaoAdicional" });
            }

            // NumeroPedidoCompra (string) maxLength
            if(this.NumeroPedidoCompra != null && this.NumeroPedidoCompra.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NumeroPedidoCompra, length must be less than 50.", new [] { "NumeroPedidoCompra" });
            }

            // NumeroPedidoCompra (string) minLength
            if(this.NumeroPedidoCompra != null && this.NumeroPedidoCompra.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for NumeroPedidoCompra, length must be greater than 0.", new [] { "NumeroPedidoCompra" });
            }

            yield break;
        }
    }

}
