/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ProdutoRevisaoDTO
    /// </summary>
    [DataContract]
    public partial class ProdutoRevisaoDTO :  IEquatable<ProdutoRevisaoDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProdutoRevisaoDTO" /> class.
        /// </summary>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="codigoProduto">codigoProduto.</param>
        /// <param name="numeroRevisao">numeroRevisao.</param>
        /// <param name="tipoUc">tipoUc.</param>
        /// <param name="fatorTipoUc">fatorTipoUc.</param>
        /// <param name="dataRevisao">dataRevisao.</param>
        /// <param name="observacaoRevisao">observacaoRevisao.</param>
        /// <param name="classeProduto">classeProduto.</param>
        /// <param name="descricaoRevisao">descricaoRevisao.</param>
        /// <param name="largura">largura.</param>
        /// <param name="comprimento">comprimento.</param>
        /// <param name="altura">altura.</param>
        /// <param name="pesoLiquido">pesoLiquido.</param>
        /// <param name="pesoBruto">pesoBruto.</param>
        /// <param name="ativo">ativo.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="dataAtualizacao">dataAtualizacao.</param>
        /// <param name="produtoRevisaoComponentes">produtoRevisaoComponentes.</param>
        public ProdutoRevisaoDTO(string codigoEmpresa = default(string), string codigoProduto = default(string), string numeroRevisao = default(string), string tipoUc = default(string), decimal? fatorTipoUc = default(decimal?), DateTime? dataRevisao = default(DateTime?), string observacaoRevisao = default(string), string classeProduto = default(string), string descricaoRevisao = default(string), decimal? largura = default(decimal?), decimal? comprimento = default(decimal?), decimal? altura = default(decimal?), decimal? pesoLiquido = default(decimal?), decimal? pesoBruto = default(decimal?), bool? ativo = default(bool?), string usuario = default(string), DateTime? dataAtualizacao = default(DateTime?), List<ProdutoRevisaoComponenteDTO> produtoRevisaoComponentes = default(List<ProdutoRevisaoComponenteDTO>))
        {
            this.CodigoEmpresa = codigoEmpresa;
            this.CodigoProduto = codigoProduto;
            this.NumeroRevisao = numeroRevisao;
            this.TipoUc = tipoUc;
            this.FatorTipoUc = fatorTipoUc;
            this.DataRevisao = dataRevisao;
            this.ObservacaoRevisao = observacaoRevisao;
            this.ClasseProduto = classeProduto;
            this.DescricaoRevisao = descricaoRevisao;
            this.Largura = largura;
            this.Comprimento = comprimento;
            this.Altura = altura;
            this.PesoLiquido = pesoLiquido;
            this.PesoBruto = pesoBruto;
            this.Ativo = ativo;
            this.Usuario = usuario;
            this.DataAtualizacao = dataAtualizacao;
            this.ProdutoRevisaoComponentes = produtoRevisaoComponentes;
        }
        
        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets CodigoProduto
        /// </summary>
        [DataMember(Name="codigoProduto", EmitDefaultValue=false)]
        public string CodigoProduto { get; set; }

        /// <summary>
        /// Gets or Sets NumeroRevisao
        /// </summary>
        [DataMember(Name="numeroRevisao", EmitDefaultValue=false)]
        public string NumeroRevisao { get; set; }

        /// <summary>
        /// Gets or Sets TipoUc
        /// </summary>
        [DataMember(Name="tipoUc", EmitDefaultValue=false)]
        public string TipoUc { get; set; }

        /// <summary>
        /// Gets or Sets FatorTipoUc
        /// </summary>
        [DataMember(Name="fatorTipoUc", EmitDefaultValue=false)]
        public decimal? FatorTipoUc { get; set; }

        /// <summary>
        /// Gets or Sets DataRevisao
        /// </summary>
        [DataMember(Name="dataRevisao", EmitDefaultValue=false)]
        public DateTime? DataRevisao { get; set; }

        /// <summary>
        /// Gets or Sets ObservacaoRevisao
        /// </summary>
        [DataMember(Name="observacaoRevisao", EmitDefaultValue=false)]
        public string ObservacaoRevisao { get; set; }

        /// <summary>
        /// Gets or Sets ClasseProduto
        /// </summary>
        [DataMember(Name="classeProduto", EmitDefaultValue=false)]
        public string ClasseProduto { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoRevisao
        /// </summary>
        [DataMember(Name="descricaoRevisao", EmitDefaultValue=false)]
        public string DescricaoRevisao { get; set; }

        /// <summary>
        /// Gets or Sets Largura
        /// </summary>
        [DataMember(Name="largura", EmitDefaultValue=false)]
        public decimal? Largura { get; set; }

        /// <summary>
        /// Gets or Sets Comprimento
        /// </summary>
        [DataMember(Name="comprimento", EmitDefaultValue=false)]
        public decimal? Comprimento { get; set; }

        /// <summary>
        /// Gets or Sets Altura
        /// </summary>
        [DataMember(Name="altura", EmitDefaultValue=false)]
        public decimal? Altura { get; set; }

        /// <summary>
        /// Gets or Sets PesoLiquido
        /// </summary>
        [DataMember(Name="pesoLiquido", EmitDefaultValue=false)]
        public decimal? PesoLiquido { get; set; }

        /// <summary>
        /// Gets or Sets PesoBruto
        /// </summary>
        [DataMember(Name="pesoBruto", EmitDefaultValue=false)]
        public decimal? PesoBruto { get; set; }

        /// <summary>
        /// Gets or Sets Ativo
        /// </summary>
        [DataMember(Name="ativo", EmitDefaultValue=false)]
        public bool? Ativo { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets DataAtualizacao
        /// </summary>
        [DataMember(Name="dataAtualizacao", EmitDefaultValue=false)]
        public DateTime? DataAtualizacao { get; set; }

        /// <summary>
        /// Gets or Sets ProdutoRevisaoComponentes
        /// </summary>
        [DataMember(Name="produtoRevisaoComponentes", EmitDefaultValue=false)]
        public List<ProdutoRevisaoComponenteDTO> ProdutoRevisaoComponentes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProdutoRevisaoDTO {\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  CodigoProduto: ").Append(CodigoProduto).Append("\n");
            sb.Append("  NumeroRevisao: ").Append(NumeroRevisao).Append("\n");
            sb.Append("  TipoUc: ").Append(TipoUc).Append("\n");
            sb.Append("  FatorTipoUc: ").Append(FatorTipoUc).Append("\n");
            sb.Append("  DataRevisao: ").Append(DataRevisao).Append("\n");
            sb.Append("  ObservacaoRevisao: ").Append(ObservacaoRevisao).Append("\n");
            sb.Append("  ClasseProduto: ").Append(ClasseProduto).Append("\n");
            sb.Append("  DescricaoRevisao: ").Append(DescricaoRevisao).Append("\n");
            sb.Append("  Largura: ").Append(Largura).Append("\n");
            sb.Append("  Comprimento: ").Append(Comprimento).Append("\n");
            sb.Append("  Altura: ").Append(Altura).Append("\n");
            sb.Append("  PesoLiquido: ").Append(PesoLiquido).Append("\n");
            sb.Append("  PesoBruto: ").Append(PesoBruto).Append("\n");
            sb.Append("  Ativo: ").Append(Ativo).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  DataAtualizacao: ").Append(DataAtualizacao).Append("\n");
            sb.Append("  ProdutoRevisaoComponentes: ").Append(ProdutoRevisaoComponentes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProdutoRevisaoDTO);
        }

        /// <summary>
        /// Returns true if ProdutoRevisaoDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of ProdutoRevisaoDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProdutoRevisaoDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.CodigoProduto == input.CodigoProduto ||
                    (this.CodigoProduto != null &&
                    this.CodigoProduto.Equals(input.CodigoProduto))
                ) && 
                (
                    this.NumeroRevisao == input.NumeroRevisao ||
                    (this.NumeroRevisao != null &&
                    this.NumeroRevisao.Equals(input.NumeroRevisao))
                ) && 
                (
                    this.TipoUc == input.TipoUc ||
                    (this.TipoUc != null &&
                    this.TipoUc.Equals(input.TipoUc))
                ) && 
                (
                    this.FatorTipoUc == input.FatorTipoUc ||
                    (this.FatorTipoUc != null &&
                    this.FatorTipoUc.Equals(input.FatorTipoUc))
                ) && 
                (
                    this.DataRevisao == input.DataRevisao ||
                    (this.DataRevisao != null &&
                    this.DataRevisao.Equals(input.DataRevisao))
                ) && 
                (
                    this.ObservacaoRevisao == input.ObservacaoRevisao ||
                    (this.ObservacaoRevisao != null &&
                    this.ObservacaoRevisao.Equals(input.ObservacaoRevisao))
                ) && 
                (
                    this.ClasseProduto == input.ClasseProduto ||
                    (this.ClasseProduto != null &&
                    this.ClasseProduto.Equals(input.ClasseProduto))
                ) && 
                (
                    this.DescricaoRevisao == input.DescricaoRevisao ||
                    (this.DescricaoRevisao != null &&
                    this.DescricaoRevisao.Equals(input.DescricaoRevisao))
                ) && 
                (
                    this.Largura == input.Largura ||
                    (this.Largura != null &&
                    this.Largura.Equals(input.Largura))
                ) && 
                (
                    this.Comprimento == input.Comprimento ||
                    (this.Comprimento != null &&
                    this.Comprimento.Equals(input.Comprimento))
                ) && 
                (
                    this.Altura == input.Altura ||
                    (this.Altura != null &&
                    this.Altura.Equals(input.Altura))
                ) && 
                (
                    this.PesoLiquido == input.PesoLiquido ||
                    (this.PesoLiquido != null &&
                    this.PesoLiquido.Equals(input.PesoLiquido))
                ) && 
                (
                    this.PesoBruto == input.PesoBruto ||
                    (this.PesoBruto != null &&
                    this.PesoBruto.Equals(input.PesoBruto))
                ) && 
                (
                    this.Ativo == input.Ativo ||
                    (this.Ativo != null &&
                    this.Ativo.Equals(input.Ativo))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.DataAtualizacao == input.DataAtualizacao ||
                    (this.DataAtualizacao != null &&
                    this.DataAtualizacao.Equals(input.DataAtualizacao))
                ) && 
                (
                    this.ProdutoRevisaoComponentes == input.ProdutoRevisaoComponentes ||
                    this.ProdutoRevisaoComponentes != null &&
                    this.ProdutoRevisaoComponentes.SequenceEqual(input.ProdutoRevisaoComponentes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.CodigoProduto != null)
                    hashCode = hashCode * 59 + this.CodigoProduto.GetHashCode();
                if (this.NumeroRevisao != null)
                    hashCode = hashCode * 59 + this.NumeroRevisao.GetHashCode();
                if (this.TipoUc != null)
                    hashCode = hashCode * 59 + this.TipoUc.GetHashCode();
                if (this.FatorTipoUc != null)
                    hashCode = hashCode * 59 + this.FatorTipoUc.GetHashCode();
                if (this.DataRevisao != null)
                    hashCode = hashCode * 59 + this.DataRevisao.GetHashCode();
                if (this.ObservacaoRevisao != null)
                    hashCode = hashCode * 59 + this.ObservacaoRevisao.GetHashCode();
                if (this.ClasseProduto != null)
                    hashCode = hashCode * 59 + this.ClasseProduto.GetHashCode();
                if (this.DescricaoRevisao != null)
                    hashCode = hashCode * 59 + this.DescricaoRevisao.GetHashCode();
                if (this.Largura != null)
                    hashCode = hashCode * 59 + this.Largura.GetHashCode();
                if (this.Comprimento != null)
                    hashCode = hashCode * 59 + this.Comprimento.GetHashCode();
                if (this.Altura != null)
                    hashCode = hashCode * 59 + this.Altura.GetHashCode();
                if (this.PesoLiquido != null)
                    hashCode = hashCode * 59 + this.PesoLiquido.GetHashCode();
                if (this.PesoBruto != null)
                    hashCode = hashCode * 59 + this.PesoBruto.GetHashCode();
                if (this.Ativo != null)
                    hashCode = hashCode * 59 + this.Ativo.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.DataAtualizacao != null)
                    hashCode = hashCode * 59 + this.DataAtualizacao.GetHashCode();
                if (this.ProdutoRevisaoComponentes != null)
                    hashCode = hashCode * 59 + this.ProdutoRevisaoComponentes.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
