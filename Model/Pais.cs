/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Pais
    /// </summary>
    [DataContract]
    public partial class Pais :  IEquatable<Pais>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Pais" /> class.
        /// </summary>
        /// <param name="codigoPais">codigoPais.</param>
        /// <param name="descricaoPais">descricaoPais.</param>
        /// <param name="isoAlpha3">isoAlpha3.</param>
        /// <param name="isoAlpha2">isoAlpha2.</param>
        /// <param name="unNumeric3">unNumeric3.</param>
        /// <param name="descricaoCompleta">descricaoCompleta.</param>
        /// <param name="regiaoContinente">regiaoContinente.</param>
        /// <param name="capitalPais">capitalPais.</param>
        /// <param name="capitalpais2">capitalpais2.</param>
        /// <param name="descricaoCapitalPais2">descricaoCapitalPais2.</param>
        /// <param name="tipoPais">tipoPais.</param>
        /// <param name="descricaoPaisIng">descricaoPaisIng.</param>
        /// <param name="descricaCompletaIng">descricaCompletaIng.</param>
        /// <param name="capitalPaisIng">capitalPaisIng.</param>
        /// <param name="capitalPais2Ing">capitalPais2Ing.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="dataAtualizacao">dataAtualizacao.</param>
        /// <param name="codigoPaisBacen">codigoPaisBacen.</param>
        public Pais(string codigoPais = default(string), string descricaoPais = default(string), string isoAlpha3 = default(string), string isoAlpha2 = default(string), string unNumeric3 = default(string), string descricaoCompleta = default(string), RegiaoContinente regiaoContinente = default(RegiaoContinente), string capitalPais = default(string), string capitalpais2 = default(string), string descricaoCapitalPais2 = default(string), TipoPais tipoPais = default(TipoPais), string descricaoPaisIng = default(string), string descricaCompletaIng = default(string), string capitalPaisIng = default(string), string capitalPais2Ing = default(string), string usuario = default(string), DateTime? dataAtualizacao = default(DateTime?), long? codigoPaisBacen = default(long?))
        {
            this.CodigoPais = codigoPais;
            this.DescricaoPais = descricaoPais;
            this.IsoAlpha3 = isoAlpha3;
            this.IsoAlpha2 = isoAlpha2;
            this.UnNumeric3 = unNumeric3;
            this.DescricaoCompleta = descricaoCompleta;
            this.RegiaoContinente = regiaoContinente;
            this.CapitalPais = capitalPais;
            this.Capitalpais2 = capitalpais2;
            this.DescricaoCapitalPais2 = descricaoCapitalPais2;
            this.TipoPais = tipoPais;
            this.DescricaoPaisIng = descricaoPaisIng;
            this.DescricaCompletaIng = descricaCompletaIng;
            this.CapitalPaisIng = capitalPaisIng;
            this.CapitalPais2Ing = capitalPais2Ing;
            this.Usuario = usuario;
            this.DataAtualizacao = dataAtualizacao;
            this.CodigoPaisBacen = codigoPaisBacen;
        }
        
        /// <summary>
        /// Gets or Sets CodigoPais
        /// </summary>
        [DataMember(Name="codigoPais", EmitDefaultValue=false)]
        public string CodigoPais { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoPais
        /// </summary>
        [DataMember(Name="descricaoPais", EmitDefaultValue=false)]
        public string DescricaoPais { get; set; }

        /// <summary>
        /// Gets or Sets IsoAlpha3
        /// </summary>
        [DataMember(Name="isoAlpha3", EmitDefaultValue=false)]
        public string IsoAlpha3 { get; set; }

        /// <summary>
        /// Gets or Sets IsoAlpha2
        /// </summary>
        [DataMember(Name="isoAlpha2", EmitDefaultValue=false)]
        public string IsoAlpha2 { get; set; }

        /// <summary>
        /// Gets or Sets UnNumeric3
        /// </summary>
        [DataMember(Name="unNumeric3", EmitDefaultValue=false)]
        public string UnNumeric3 { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoCompleta
        /// </summary>
        [DataMember(Name="descricaoCompleta", EmitDefaultValue=false)]
        public string DescricaoCompleta { get; set; }

        /// <summary>
        /// Gets or Sets RegiaoContinente
        /// </summary>
        [DataMember(Name="regiaoContinente", EmitDefaultValue=false)]
        public RegiaoContinente RegiaoContinente { get; set; }

        /// <summary>
        /// Gets or Sets CapitalPais
        /// </summary>
        [DataMember(Name="capitalPais", EmitDefaultValue=false)]
        public string CapitalPais { get; set; }

        /// <summary>
        /// Gets or Sets Capitalpais2
        /// </summary>
        [DataMember(Name="capitalpais2", EmitDefaultValue=false)]
        public string Capitalpais2 { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoCapitalPais2
        /// </summary>
        [DataMember(Name="descricaoCapitalPais2", EmitDefaultValue=false)]
        public string DescricaoCapitalPais2 { get; set; }

        /// <summary>
        /// Gets or Sets TipoPais
        /// </summary>
        [DataMember(Name="tipoPais", EmitDefaultValue=false)]
        public TipoPais TipoPais { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoPaisIng
        /// </summary>
        [DataMember(Name="descricaoPaisIng", EmitDefaultValue=false)]
        public string DescricaoPaisIng { get; set; }

        /// <summary>
        /// Gets or Sets DescricaCompletaIng
        /// </summary>
        [DataMember(Name="descricaCompletaIng", EmitDefaultValue=false)]
        public string DescricaCompletaIng { get; set; }

        /// <summary>
        /// Gets or Sets CapitalPaisIng
        /// </summary>
        [DataMember(Name="capitalPaisIng", EmitDefaultValue=false)]
        public string CapitalPaisIng { get; set; }

        /// <summary>
        /// Gets or Sets CapitalPais2Ing
        /// </summary>
        [DataMember(Name="capitalPais2Ing", EmitDefaultValue=false)]
        public string CapitalPais2Ing { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets DataAtualizacao
        /// </summary>
        [DataMember(Name="dataAtualizacao", EmitDefaultValue=false)]
        public DateTime? DataAtualizacao { get; set; }

        /// <summary>
        /// Gets or Sets CodigoPaisBacen
        /// </summary>
        [DataMember(Name="codigoPaisBacen", EmitDefaultValue=false)]
        public long? CodigoPaisBacen { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Pais {\n");
            sb.Append("  CodigoPais: ").Append(CodigoPais).Append("\n");
            sb.Append("  DescricaoPais: ").Append(DescricaoPais).Append("\n");
            sb.Append("  IsoAlpha3: ").Append(IsoAlpha3).Append("\n");
            sb.Append("  IsoAlpha2: ").Append(IsoAlpha2).Append("\n");
            sb.Append("  UnNumeric3: ").Append(UnNumeric3).Append("\n");
            sb.Append("  DescricaoCompleta: ").Append(DescricaoCompleta).Append("\n");
            sb.Append("  RegiaoContinente: ").Append(RegiaoContinente).Append("\n");
            sb.Append("  CapitalPais: ").Append(CapitalPais).Append("\n");
            sb.Append("  Capitalpais2: ").Append(Capitalpais2).Append("\n");
            sb.Append("  DescricaoCapitalPais2: ").Append(DescricaoCapitalPais2).Append("\n");
            sb.Append("  TipoPais: ").Append(TipoPais).Append("\n");
            sb.Append("  DescricaoPaisIng: ").Append(DescricaoPaisIng).Append("\n");
            sb.Append("  DescricaCompletaIng: ").Append(DescricaCompletaIng).Append("\n");
            sb.Append("  CapitalPaisIng: ").Append(CapitalPaisIng).Append("\n");
            sb.Append("  CapitalPais2Ing: ").Append(CapitalPais2Ing).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  DataAtualizacao: ").Append(DataAtualizacao).Append("\n");
            sb.Append("  CodigoPaisBacen: ").Append(CodigoPaisBacen).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Pais);
        }

        /// <summary>
        /// Returns true if Pais instances are equal
        /// </summary>
        /// <param name="input">Instance of Pais to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Pais input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoPais == input.CodigoPais ||
                    (this.CodigoPais != null &&
                    this.CodigoPais.Equals(input.CodigoPais))
                ) && 
                (
                    this.DescricaoPais == input.DescricaoPais ||
                    (this.DescricaoPais != null &&
                    this.DescricaoPais.Equals(input.DescricaoPais))
                ) && 
                (
                    this.IsoAlpha3 == input.IsoAlpha3 ||
                    (this.IsoAlpha3 != null &&
                    this.IsoAlpha3.Equals(input.IsoAlpha3))
                ) && 
                (
                    this.IsoAlpha2 == input.IsoAlpha2 ||
                    (this.IsoAlpha2 != null &&
                    this.IsoAlpha2.Equals(input.IsoAlpha2))
                ) && 
                (
                    this.UnNumeric3 == input.UnNumeric3 ||
                    (this.UnNumeric3 != null &&
                    this.UnNumeric3.Equals(input.UnNumeric3))
                ) && 
                (
                    this.DescricaoCompleta == input.DescricaoCompleta ||
                    (this.DescricaoCompleta != null &&
                    this.DescricaoCompleta.Equals(input.DescricaoCompleta))
                ) && 
                (
                    this.RegiaoContinente == input.RegiaoContinente ||
                    (this.RegiaoContinente != null &&
                    this.RegiaoContinente.Equals(input.RegiaoContinente))
                ) && 
                (
                    this.CapitalPais == input.CapitalPais ||
                    (this.CapitalPais != null &&
                    this.CapitalPais.Equals(input.CapitalPais))
                ) && 
                (
                    this.Capitalpais2 == input.Capitalpais2 ||
                    (this.Capitalpais2 != null &&
                    this.Capitalpais2.Equals(input.Capitalpais2))
                ) && 
                (
                    this.DescricaoCapitalPais2 == input.DescricaoCapitalPais2 ||
                    (this.DescricaoCapitalPais2 != null &&
                    this.DescricaoCapitalPais2.Equals(input.DescricaoCapitalPais2))
                ) && 
                (
                    this.TipoPais == input.TipoPais ||
                    (this.TipoPais != null &&
                    this.TipoPais.Equals(input.TipoPais))
                ) && 
                (
                    this.DescricaoPaisIng == input.DescricaoPaisIng ||
                    (this.DescricaoPaisIng != null &&
                    this.DescricaoPaisIng.Equals(input.DescricaoPaisIng))
                ) && 
                (
                    this.DescricaCompletaIng == input.DescricaCompletaIng ||
                    (this.DescricaCompletaIng != null &&
                    this.DescricaCompletaIng.Equals(input.DescricaCompletaIng))
                ) && 
                (
                    this.CapitalPaisIng == input.CapitalPaisIng ||
                    (this.CapitalPaisIng != null &&
                    this.CapitalPaisIng.Equals(input.CapitalPaisIng))
                ) && 
                (
                    this.CapitalPais2Ing == input.CapitalPais2Ing ||
                    (this.CapitalPais2Ing != null &&
                    this.CapitalPais2Ing.Equals(input.CapitalPais2Ing))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.DataAtualizacao == input.DataAtualizacao ||
                    (this.DataAtualizacao != null &&
                    this.DataAtualizacao.Equals(input.DataAtualizacao))
                ) && 
                (
                    this.CodigoPaisBacen == input.CodigoPaisBacen ||
                    (this.CodigoPaisBacen != null &&
                    this.CodigoPaisBacen.Equals(input.CodigoPaisBacen))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoPais != null)
                    hashCode = hashCode * 59 + this.CodigoPais.GetHashCode();
                if (this.DescricaoPais != null)
                    hashCode = hashCode * 59 + this.DescricaoPais.GetHashCode();
                if (this.IsoAlpha3 != null)
                    hashCode = hashCode * 59 + this.IsoAlpha3.GetHashCode();
                if (this.IsoAlpha2 != null)
                    hashCode = hashCode * 59 + this.IsoAlpha2.GetHashCode();
                if (this.UnNumeric3 != null)
                    hashCode = hashCode * 59 + this.UnNumeric3.GetHashCode();
                if (this.DescricaoCompleta != null)
                    hashCode = hashCode * 59 + this.DescricaoCompleta.GetHashCode();
                if (this.RegiaoContinente != null)
                    hashCode = hashCode * 59 + this.RegiaoContinente.GetHashCode();
                if (this.CapitalPais != null)
                    hashCode = hashCode * 59 + this.CapitalPais.GetHashCode();
                if (this.Capitalpais2 != null)
                    hashCode = hashCode * 59 + this.Capitalpais2.GetHashCode();
                if (this.DescricaoCapitalPais2 != null)
                    hashCode = hashCode * 59 + this.DescricaoCapitalPais2.GetHashCode();
                if (this.TipoPais != null)
                    hashCode = hashCode * 59 + this.TipoPais.GetHashCode();
                if (this.DescricaoPaisIng != null)
                    hashCode = hashCode * 59 + this.DescricaoPaisIng.GetHashCode();
                if (this.DescricaCompletaIng != null)
                    hashCode = hashCode * 59 + this.DescricaCompletaIng.GetHashCode();
                if (this.CapitalPaisIng != null)
                    hashCode = hashCode * 59 + this.CapitalPaisIng.GetHashCode();
                if (this.CapitalPais2Ing != null)
                    hashCode = hashCode * 59 + this.CapitalPais2Ing.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.DataAtualizacao != null)
                    hashCode = hashCode * 59 + this.DataAtualizacao.GetHashCode();
                if (this.CodigoPaisBacen != null)
                    hashCode = hashCode * 59 + this.CodigoPaisBacen.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CodigoPais (string) maxLength
            if(this.CodigoPais != null && this.CodigoPais.Length > 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodigoPais, length must be less than 3.", new [] { "CodigoPais" });
            }

            // CodigoPais (string) minLength
            if(this.CodigoPais != null && this.CodigoPais.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodigoPais, length must be greater than 0.", new [] { "CodigoPais" });
            }

            // DescricaoPais (string) maxLength
            if(this.DescricaoPais != null && this.DescricaoPais.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoPais, length must be less than 50.", new [] { "DescricaoPais" });
            }

            // DescricaoPais (string) minLength
            if(this.DescricaoPais != null && this.DescricaoPais.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoPais, length must be greater than 0.", new [] { "DescricaoPais" });
            }

            // IsoAlpha3 (string) maxLength
            if(this.IsoAlpha3 != null && this.IsoAlpha3.Length > 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IsoAlpha3, length must be less than 3.", new [] { "IsoAlpha3" });
            }

            // IsoAlpha3 (string) minLength
            if(this.IsoAlpha3 != null && this.IsoAlpha3.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IsoAlpha3, length must be greater than 0.", new [] { "IsoAlpha3" });
            }

            // IsoAlpha2 (string) maxLength
            if(this.IsoAlpha2 != null && this.IsoAlpha2.Length > 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IsoAlpha2, length must be less than 3.", new [] { "IsoAlpha2" });
            }

            // IsoAlpha2 (string) minLength
            if(this.IsoAlpha2 != null && this.IsoAlpha2.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for IsoAlpha2, length must be greater than 0.", new [] { "IsoAlpha2" });
            }

            // UnNumeric3 (string) maxLength
            if(this.UnNumeric3 != null && this.UnNumeric3.Length > 3)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UnNumeric3, length must be less than 3.", new [] { "UnNumeric3" });
            }

            // UnNumeric3 (string) minLength
            if(this.UnNumeric3 != null && this.UnNumeric3.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for UnNumeric3, length must be greater than 0.", new [] { "UnNumeric3" });
            }

            // DescricaoCompleta (string) maxLength
            if(this.DescricaoCompleta != null && this.DescricaoCompleta.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoCompleta, length must be less than 100.", new [] { "DescricaoCompleta" });
            }

            // DescricaoCompleta (string) minLength
            if(this.DescricaoCompleta != null && this.DescricaoCompleta.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoCompleta, length must be greater than 0.", new [] { "DescricaoCompleta" });
            }

            // CapitalPais (string) maxLength
            if(this.CapitalPais != null && this.CapitalPais.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CapitalPais, length must be less than 50.", new [] { "CapitalPais" });
            }

            // CapitalPais (string) minLength
            if(this.CapitalPais != null && this.CapitalPais.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CapitalPais, length must be greater than 0.", new [] { "CapitalPais" });
            }

            // Capitalpais2 (string) maxLength
            if(this.Capitalpais2 != null && this.Capitalpais2.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Capitalpais2, length must be less than 50.", new [] { "Capitalpais2" });
            }

            // Capitalpais2 (string) minLength
            if(this.Capitalpais2 != null && this.Capitalpais2.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Capitalpais2, length must be greater than 0.", new [] { "Capitalpais2" });
            }

            // DescricaoCapitalPais2 (string) maxLength
            if(this.DescricaoCapitalPais2 != null && this.DescricaoCapitalPais2.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoCapitalPais2, length must be less than 50.", new [] { "DescricaoCapitalPais2" });
            }

            // DescricaoCapitalPais2 (string) minLength
            if(this.DescricaoCapitalPais2 != null && this.DescricaoCapitalPais2.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoCapitalPais2, length must be greater than 0.", new [] { "DescricaoCapitalPais2" });
            }

            // DescricaoPaisIng (string) maxLength
            if(this.DescricaoPaisIng != null && this.DescricaoPaisIng.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoPaisIng, length must be less than 50.", new [] { "DescricaoPaisIng" });
            }

            // DescricaoPaisIng (string) minLength
            if(this.DescricaoPaisIng != null && this.DescricaoPaisIng.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoPaisIng, length must be greater than 0.", new [] { "DescricaoPaisIng" });
            }

            // DescricaCompletaIng (string) maxLength
            if(this.DescricaCompletaIng != null && this.DescricaCompletaIng.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaCompletaIng, length must be less than 100.", new [] { "DescricaCompletaIng" });
            }

            // DescricaCompletaIng (string) minLength
            if(this.DescricaCompletaIng != null && this.DescricaCompletaIng.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaCompletaIng, length must be greater than 0.", new [] { "DescricaCompletaIng" });
            }

            // CapitalPaisIng (string) maxLength
            if(this.CapitalPaisIng != null && this.CapitalPaisIng.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CapitalPaisIng, length must be less than 50.", new [] { "CapitalPaisIng" });
            }

            // CapitalPaisIng (string) minLength
            if(this.CapitalPaisIng != null && this.CapitalPaisIng.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CapitalPaisIng, length must be greater than 0.", new [] { "CapitalPaisIng" });
            }

            // CapitalPais2Ing (string) maxLength
            if(this.CapitalPais2Ing != null && this.CapitalPais2Ing.Length > 50)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CapitalPais2Ing, length must be less than 50.", new [] { "CapitalPais2Ing" });
            }

            // CapitalPais2Ing (string) minLength
            if(this.CapitalPais2Ing != null && this.CapitalPais2Ing.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CapitalPais2Ing, length must be greater than 0.", new [] { "CapitalPais2Ing" });
            }

            // Usuario (string) maxLength
            if(this.Usuario != null && this.Usuario.Length > 15)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Usuario, length must be less than 15.", new [] { "Usuario" });
            }

            // Usuario (string) minLength
            if(this.Usuario != null && this.Usuario.Length < 0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Usuario, length must be greater than 0.", new [] { "Usuario" });
            }

            // CodigoPaisBacen (long?) maximum
            if(this.CodigoPaisBacen > (long?)4)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodigoPaisBacen, must be a value less than or equal to 4.", new [] { "CodigoPaisBacen" });
            }

            // CodigoPaisBacen (long?) minimum
            if(this.CodigoPaisBacen < (long?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodigoPaisBacen, must be a value greater than or equal to 0.", new [] { "CodigoPaisBacen" });
            }

            yield break;
        }
    }

}
