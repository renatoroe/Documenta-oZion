/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// SubGrupoDTO
    /// </summary>
    [DataContract]
    public partial class SubGrupoDTO :  IEquatable<SubGrupoDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SubGrupoDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SubGrupoDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SubGrupoDTO" /> class.
        /// </summary>
        /// <param name="codigoSubGrupo">Sub Grupo, caso não exista será cadastrado (required).</param>
        /// <param name="descricaoSubGrupo">Descrição do Sub Grupo do Produto (required).</param>
        public SubGrupoDTO(string codigoSubGrupo = default(string), string descricaoSubGrupo = default(string))
        {
            // to ensure "codigoSubGrupo" is required (not null)
            if (codigoSubGrupo == null)
            {
                throw new InvalidDataException("codigoSubGrupo is a required property for SubGrupoDTO and cannot be null");
            }
            else
            {
                this.CodigoSubGrupo = codigoSubGrupo;
            }
            // to ensure "descricaoSubGrupo" is required (not null)
            if (descricaoSubGrupo == null)
            {
                throw new InvalidDataException("descricaoSubGrupo is a required property for SubGrupoDTO and cannot be null");
            }
            else
            {
                this.DescricaoSubGrupo = descricaoSubGrupo;
            }
        }
        
        /// <summary>
        /// Sub Grupo, caso não exista será cadastrado
        /// </summary>
        /// <value>Sub Grupo, caso não exista será cadastrado</value>
        [DataMember(Name="codigoSubGrupo", EmitDefaultValue=false)]
        public string CodigoSubGrupo { get; set; }

        /// <summary>
        /// Descrição do Sub Grupo do Produto
        /// </summary>
        /// <value>Descrição do Sub Grupo do Produto</value>
        [DataMember(Name="descricaoSubGrupo", EmitDefaultValue=false)]
        public string DescricaoSubGrupo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SubGrupoDTO {\n");
            sb.Append("  CodigoSubGrupo: ").Append(CodigoSubGrupo).Append("\n");
            sb.Append("  DescricaoSubGrupo: ").Append(DescricaoSubGrupo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SubGrupoDTO);
        }

        /// <summary>
        /// Returns true if SubGrupoDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of SubGrupoDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SubGrupoDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoSubGrupo == input.CodigoSubGrupo ||
                    (this.CodigoSubGrupo != null &&
                    this.CodigoSubGrupo.Equals(input.CodigoSubGrupo))
                ) && 
                (
                    this.DescricaoSubGrupo == input.DescricaoSubGrupo ||
                    (this.DescricaoSubGrupo != null &&
                    this.DescricaoSubGrupo.Equals(input.DescricaoSubGrupo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoSubGrupo != null)
                    hashCode = hashCode * 59 + this.CodigoSubGrupo.GetHashCode();
                if (this.DescricaoSubGrupo != null)
                    hashCode = hashCode * 59 + this.DescricaoSubGrupo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CodigoSubGrupo (string) maxLength
            if(this.CodigoSubGrupo != null && this.CodigoSubGrupo.Length > 25)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodigoSubGrupo, length must be less than 25.", new [] { "CodigoSubGrupo" });
            }

            // CodigoSubGrupo (string) minLength
            if(this.CodigoSubGrupo != null && this.CodigoSubGrupo.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodigoSubGrupo, length must be greater than 1.", new [] { "CodigoSubGrupo" });
            }

            // DescricaoSubGrupo (string) maxLength
            if(this.DescricaoSubGrupo != null && this.DescricaoSubGrupo.Length > 100)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoSubGrupo, length must be less than 100.", new [] { "DescricaoSubGrupo" });
            }

            // DescricaoSubGrupo (string) minLength
            if(this.DescricaoSubGrupo != null && this.DescricaoSubGrupo.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for DescricaoSubGrupo, length must be greater than 1.", new [] { "DescricaoSubGrupo" });
            }

            yield break;
        }
    }

}
