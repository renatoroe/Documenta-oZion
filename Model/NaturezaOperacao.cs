/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// NaturezaOperacao
    /// </summary>
    [DataContract]
    public partial class NaturezaOperacao :  IEquatable<NaturezaOperacao>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NaturezaOperacao" /> class.
        /// </summary>
        /// <param name="naturezaOperacao">naturezaOperacao.</param>
        /// <param name="descricaoNaturezaOperacao">descricaoNaturezaOperacao.</param>
        /// <param name="naturezaOperacaoImpressao">naturezaOperacaoImpressao.</param>
        /// <param name="cfop1">cfop1.</param>
        /// <param name="cfop2">cfop2.</param>
        /// <param name="cfop3">cfop3.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="dataHistorico">dataHistorico.</param>
        /// <param name="entradaSaida">entradaSaida.</param>
        /// <param name="tipoEmitenteFiscal">tipoEmitenteFiscal.</param>
        /// <param name="ativo">ativo.</param>
        public NaturezaOperacao(string naturezaOperacao = default(string), string descricaoNaturezaOperacao = default(string), string naturezaOperacaoImpressao = default(string), string cfop1 = default(string), string cfop2 = default(string), string cfop3 = default(string), string usuario = default(string), DateTime? dataHistorico = default(DateTime?), string entradaSaida = default(string), string tipoEmitenteFiscal = default(string), bool? ativo = default(bool?))
        {
            this._NaturezaOperacao = naturezaOperacao;
            this.DescricaoNaturezaOperacao = descricaoNaturezaOperacao;
            this.NaturezaOperacaoImpressao = naturezaOperacaoImpressao;
            this.Cfop1 = cfop1;
            this.Cfop2 = cfop2;
            this.Cfop3 = cfop3;
            this.Usuario = usuario;
            this.DataHistorico = dataHistorico;
            this.EntradaSaida = entradaSaida;
            this.TipoEmitenteFiscal = tipoEmitenteFiscal;
            this.Ativo = ativo;
        }
        
        /// <summary>
        /// Gets or Sets _NaturezaOperacao
        /// </summary>
        [DataMember(Name="naturezaOperacao", EmitDefaultValue=false)]
        public string _NaturezaOperacao { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoNaturezaOperacao
        /// </summary>
        [DataMember(Name="descricaoNaturezaOperacao", EmitDefaultValue=false)]
        public string DescricaoNaturezaOperacao { get; set; }

        /// <summary>
        /// Gets or Sets NaturezaOperacaoImpressao
        /// </summary>
        [DataMember(Name="naturezaOperacaoImpressao", EmitDefaultValue=false)]
        public string NaturezaOperacaoImpressao { get; set; }

        /// <summary>
        /// Gets or Sets Cfop1
        /// </summary>
        [DataMember(Name="cfop1", EmitDefaultValue=false)]
        public string Cfop1 { get; set; }

        /// <summary>
        /// Gets or Sets Cfop2
        /// </summary>
        [DataMember(Name="cfop2", EmitDefaultValue=false)]
        public string Cfop2 { get; set; }

        /// <summary>
        /// Gets or Sets Cfop3
        /// </summary>
        [DataMember(Name="cfop3", EmitDefaultValue=false)]
        public string Cfop3 { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets DataHistorico
        /// </summary>
        [DataMember(Name="dataHistorico", EmitDefaultValue=false)]
        public DateTime? DataHistorico { get; set; }

        /// <summary>
        /// Gets or Sets EntradaSaida
        /// </summary>
        [DataMember(Name="entradaSaida", EmitDefaultValue=false)]
        public string EntradaSaida { get; set; }

        /// <summary>
        /// Gets or Sets TipoEmitenteFiscal
        /// </summary>
        [DataMember(Name="tipoEmitenteFiscal", EmitDefaultValue=false)]
        public string TipoEmitenteFiscal { get; set; }

        /// <summary>
        /// Gets or Sets Ativo
        /// </summary>
        [DataMember(Name="ativo", EmitDefaultValue=false)]
        public bool? Ativo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class NaturezaOperacao {\n");
            sb.Append("  _NaturezaOperacao: ").Append(_NaturezaOperacao).Append("\n");
            sb.Append("  DescricaoNaturezaOperacao: ").Append(DescricaoNaturezaOperacao).Append("\n");
            sb.Append("  NaturezaOperacaoImpressao: ").Append(NaturezaOperacaoImpressao).Append("\n");
            sb.Append("  Cfop1: ").Append(Cfop1).Append("\n");
            sb.Append("  Cfop2: ").Append(Cfop2).Append("\n");
            sb.Append("  Cfop3: ").Append(Cfop3).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  DataHistorico: ").Append(DataHistorico).Append("\n");
            sb.Append("  EntradaSaida: ").Append(EntradaSaida).Append("\n");
            sb.Append("  TipoEmitenteFiscal: ").Append(TipoEmitenteFiscal).Append("\n");
            sb.Append("  Ativo: ").Append(Ativo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as NaturezaOperacao);
        }

        /// <summary>
        /// Returns true if NaturezaOperacao instances are equal
        /// </summary>
        /// <param name="input">Instance of NaturezaOperacao to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(NaturezaOperacao input)
        {
            if (input == null)
                return false;

            return 
                (
                    this._NaturezaOperacao == input._NaturezaOperacao ||
                    (this._NaturezaOperacao != null &&
                    this._NaturezaOperacao.Equals(input._NaturezaOperacao))
                ) && 
                (
                    this.DescricaoNaturezaOperacao == input.DescricaoNaturezaOperacao ||
                    (this.DescricaoNaturezaOperacao != null &&
                    this.DescricaoNaturezaOperacao.Equals(input.DescricaoNaturezaOperacao))
                ) && 
                (
                    this.NaturezaOperacaoImpressao == input.NaturezaOperacaoImpressao ||
                    (this.NaturezaOperacaoImpressao != null &&
                    this.NaturezaOperacaoImpressao.Equals(input.NaturezaOperacaoImpressao))
                ) && 
                (
                    this.Cfop1 == input.Cfop1 ||
                    (this.Cfop1 != null &&
                    this.Cfop1.Equals(input.Cfop1))
                ) && 
                (
                    this.Cfop2 == input.Cfop2 ||
                    (this.Cfop2 != null &&
                    this.Cfop2.Equals(input.Cfop2))
                ) && 
                (
                    this.Cfop3 == input.Cfop3 ||
                    (this.Cfop3 != null &&
                    this.Cfop3.Equals(input.Cfop3))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.DataHistorico == input.DataHistorico ||
                    (this.DataHistorico != null &&
                    this.DataHistorico.Equals(input.DataHistorico))
                ) && 
                (
                    this.EntradaSaida == input.EntradaSaida ||
                    (this.EntradaSaida != null &&
                    this.EntradaSaida.Equals(input.EntradaSaida))
                ) && 
                (
                    this.TipoEmitenteFiscal == input.TipoEmitenteFiscal ||
                    (this.TipoEmitenteFiscal != null &&
                    this.TipoEmitenteFiscal.Equals(input.TipoEmitenteFiscal))
                ) && 
                (
                    this.Ativo == input.Ativo ||
                    (this.Ativo != null &&
                    this.Ativo.Equals(input.Ativo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._NaturezaOperacao != null)
                    hashCode = hashCode * 59 + this._NaturezaOperacao.GetHashCode();
                if (this.DescricaoNaturezaOperacao != null)
                    hashCode = hashCode * 59 + this.DescricaoNaturezaOperacao.GetHashCode();
                if (this.NaturezaOperacaoImpressao != null)
                    hashCode = hashCode * 59 + this.NaturezaOperacaoImpressao.GetHashCode();
                if (this.Cfop1 != null)
                    hashCode = hashCode * 59 + this.Cfop1.GetHashCode();
                if (this.Cfop2 != null)
                    hashCode = hashCode * 59 + this.Cfop2.GetHashCode();
                if (this.Cfop3 != null)
                    hashCode = hashCode * 59 + this.Cfop3.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.DataHistorico != null)
                    hashCode = hashCode * 59 + this.DataHistorico.GetHashCode();
                if (this.EntradaSaida != null)
                    hashCode = hashCode * 59 + this.EntradaSaida.GetHashCode();
                if (this.TipoEmitenteFiscal != null)
                    hashCode = hashCode * 59 + this.TipoEmitenteFiscal.GetHashCode();
                if (this.Ativo != null)
                    hashCode = hashCode * 59 + this.Ativo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
