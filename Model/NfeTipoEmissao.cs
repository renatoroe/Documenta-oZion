/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// NfeTipoEmissao
    /// </summary>
    [DataContract]
    public partial class NfeTipoEmissao :  IEquatable<NfeTipoEmissao>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NfeTipoEmissao" /> class.
        /// </summary>
        /// <param name="nfeTipoEmissao">nfeTipoEmissao.</param>
        /// <param name="descricaoTipoEmissao">descricaoTipoEmissao.</param>
        /// <param name="informacao">informacao.</param>
        public NfeTipoEmissao(int? nfeTipoEmissao = default(int?), string descricaoTipoEmissao = default(string), string informacao = default(string))
        {
            this._NfeTipoEmissao = nfeTipoEmissao;
            this.DescricaoTipoEmissao = descricaoTipoEmissao;
            this.Informacao = informacao;
        }
        
        /// <summary>
        /// Gets or Sets _NfeTipoEmissao
        /// </summary>
        [DataMember(Name="nfeTipoEmissao", EmitDefaultValue=false)]
        public int? _NfeTipoEmissao { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoTipoEmissao
        /// </summary>
        [DataMember(Name="descricaoTipoEmissao", EmitDefaultValue=false)]
        public string DescricaoTipoEmissao { get; set; }

        /// <summary>
        /// Gets or Sets Informacao
        /// </summary>
        [DataMember(Name="informacao", EmitDefaultValue=false)]
        public string Informacao { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class NfeTipoEmissao {\n");
            sb.Append("  _NfeTipoEmissao: ").Append(_NfeTipoEmissao).Append("\n");
            sb.Append("  DescricaoTipoEmissao: ").Append(DescricaoTipoEmissao).Append("\n");
            sb.Append("  Informacao: ").Append(Informacao).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as NfeTipoEmissao);
        }

        /// <summary>
        /// Returns true if NfeTipoEmissao instances are equal
        /// </summary>
        /// <param name="input">Instance of NfeTipoEmissao to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(NfeTipoEmissao input)
        {
            if (input == null)
                return false;

            return 
                (
                    this._NfeTipoEmissao == input._NfeTipoEmissao ||
                    (this._NfeTipoEmissao != null &&
                    this._NfeTipoEmissao.Equals(input._NfeTipoEmissao))
                ) && 
                (
                    this.DescricaoTipoEmissao == input.DescricaoTipoEmissao ||
                    (this.DescricaoTipoEmissao != null &&
                    this.DescricaoTipoEmissao.Equals(input.DescricaoTipoEmissao))
                ) && 
                (
                    this.Informacao == input.Informacao ||
                    (this.Informacao != null &&
                    this.Informacao.Equals(input.Informacao))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._NfeTipoEmissao != null)
                    hashCode = hashCode * 59 + this._NfeTipoEmissao.GetHashCode();
                if (this.DescricaoTipoEmissao != null)
                    hashCode = hashCode * 59 + this.DescricaoTipoEmissao.GetHashCode();
                if (this.Informacao != null)
                    hashCode = hashCode * 59 + this.Informacao.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
