/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// PrevisaoEntradaItemDTO
    /// </summary>
    [DataContract]
    public partial class PrevisaoEntradaItemDTO :  IEquatable<PrevisaoEntradaItemDTO>, IValidatableObject
    {
        /// <summary>
        /// Defines TipoLogistico
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TipoLogisticoEnum
        {
            
            /// <summary>
            /// Enum DATADEENTRADA for value: DATA_DE_ENTRADA
            /// </summary>
            [EnumMember(Value = "DATA_DE_ENTRADA")]
            DATADEENTRADA = 1,
            
            /// <summary>
            /// Enum LOTEDEENTRADA for value: LOTE_DE_ENTRADA
            /// </summary>
            [EnumMember(Value = "LOTE_DE_ENTRADA")]
            LOTEDEENTRADA = 2,
            
            /// <summary>
            /// Enum LOTEDEFABRICACAO for value: LOTE_DE_FABRICACAO
            /// </summary>
            [EnumMember(Value = "LOTE_DE_FABRICACAO")]
            LOTEDEFABRICACAO = 3,
            
            /// <summary>
            /// Enum DATADEFABRICACAO for value: DATA_DE_FABRICACAO
            /// </summary>
            [EnumMember(Value = "DATA_DE_FABRICACAO")]
            DATADEFABRICACAO = 4,
            
            /// <summary>
            /// Enum DATADEVENCIMENTO for value: DATA_DE_VENCIMENTO
            /// </summary>
            [EnumMember(Value = "DATA_DE_VENCIMENTO")]
            DATADEVENCIMENTO = 5,
            
            /// <summary>
            /// Enum ETIQUETAENDERECO for value: ETIQUETA_ENDERECO
            /// </summary>
            [EnumMember(Value = "ETIQUETA_ENDERECO")]
            ETIQUETAENDERECO = 6,
            
            /// <summary>
            /// Enum PRIORIDADEENDERECO for value: PRIORIDADE_ENDERECO
            /// </summary>
            [EnumMember(Value = "PRIORIDADE_ENDERECO")]
            PRIORIDADEENDERECO = 7,
            
            /// <summary>
            /// Enum VALORDEENTRADA for value: VALOR_DE_ENTRADA
            /// </summary>
            [EnumMember(Value = "VALOR_DE_ENTRADA")]
            VALORDEENTRADA = 8,
            
            /// <summary>
            /// Enum LOTEGERAL for value: LOTE_GERAL
            /// </summary>
            [EnumMember(Value = "LOTE_GERAL")]
            LOTEGERAL = 9,
            
            /// <summary>
            /// Enum IDENTIFICADORVOLUME for value: IDENTIFICADOR_VOLUME
            /// </summary>
            [EnumMember(Value = "IDENTIFICADOR_VOLUME")]
            IDENTIFICADORVOLUME = 10
        }

        /// <summary>
        /// Gets or Sets TipoLogistico
        /// </summary>
        [DataMember(Name="tipoLogistico", EmitDefaultValue=false)]
        public TipoLogisticoEnum? TipoLogistico { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PrevisaoEntradaItemDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PrevisaoEntradaItemDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PrevisaoEntradaItemDTO" /> class.
        /// </summary>
        /// <param name="tipoUc">tipoUc (required).</param>
        /// <param name="classeProduto">classeProduto.</param>
        /// <param name="produto">produto (required).</param>
        /// <param name="sitTributariaOrigem">sitTributariaOrigem.</param>
        /// <param name="situacaoTributaria">situacaoTributaria.</param>
        /// <param name="matriz">matriz.</param>
        /// <param name="prevEntrada">prevEntrada.</param>
        /// <param name="situacaoTributariaIpi">situacaoTributariaIpi.</param>
        /// <param name="codigoEnquadramentoIpi">codigoEnquadramentoIpi.</param>
        /// <param name="codigoEstabelecimento">codigoEstabelecimento.</param>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="tipoDocumento">tipoDocumento.</param>
        /// <param name="serieDocumento">serieDocumento.</param>
        /// <param name="previsaoEntrada">previsaoEntrada.</param>
        /// <param name="sequenciaPrevisaoEntrada">sequenciaPrevisaoEntrada.</param>
        /// <param name="quantidadeDocumento">quantidadeDocumento (required).</param>
        /// <param name="valorUnitario">valorUnitario (required).</param>
        /// <param name="valorTotalItem">valorTotalItem.</param>
        /// <param name="cfop">cfop.</param>
        /// <param name="naturezaOperacao">naturezaOperacao.</param>
        /// <param name="fatorTipoUC">fatorTipoUC.</param>
        /// <param name="quantidadeEntrada">quantidadeEntrada.</param>
        /// <param name="quantidadeInicial">quantidadeInicial.</param>
        /// <param name="nfeInformacaoAdicional">nfeInformacaoAdicional.</param>
        /// <param name="tipoLogistico">tipoLogistico.</param>
        /// <param name="dadoLogistico">dadoLogistico.</param>
        /// <param name="aliquotaIcms">aliquotaIcms.</param>
        /// <param name="aliquotaIcmsReducao">aliquotaIcmsReducao.</param>
        /// <param name="valorBaseIcmsSt">valorBaseIcmsSt.</param>
        /// <param name="aliquotaIcmsSub">aliquotaIcmsSub.</param>
        /// <param name="valorIcmsSt">valorIcmsSt.</param>
        /// <param name="aliquotaIpi">aliquotaIpi.</param>
        /// <param name="aliquotaIpiReducao">aliquotaIpiReducao.</param>
        /// <param name="valorDesconto">valorDesconto.</param>
        /// <param name="fatorBaseIcms">fatorBaseIcms.</param>
        /// <param name="fatorBaseIcmsSt">fatorBaseIcmsSt.</param>
        /// <param name="fatorBaseIpi">fatorBaseIpi.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="dataHistorico">dataHistorico.</param>
        /// <param name="codigoProduto">codigoProduto.</param>
        /// <param name="descricaoProduto">descricaoProduto.</param>
        /// <param name="quantidadePrevista">quantidadePrevista.</param>
        /// <param name="pesoLiquido">pesoLiquido.</param>
        /// <param name="pesoBruto">pesoBruto.</param>
        /// <param name="largura">largura.</param>
        /// <param name="comprimento">comprimento.</param>
        /// <param name="altura">altura.</param>
        /// <param name="valorServico">valorServico.</param>
        /// <param name="valorAcrescimo">valorAcrescimo.</param>
        /// <param name="valorUnitarioFiscal">valorUnitarioFiscal.</param>
        /// <param name="quantidadeorigem">quantidadeorigem.</param>
        /// <param name="informacaoAdicional1">informacaoAdicional1.</param>
        /// <param name="informacaoAdicional2">informacaoAdicional2.</param>
        /// <param name="informacaoAdicional3">informacaoAdicional3.</param>
        /// <param name="numeroFci">numeroFci.</param>
        /// <param name="observacao">observacao.</param>
        /// <param name="numeroDocumento">numeroDocumento.</param>
        /// <param name="codigoNcm">codigoNcm.</param>
        /// <param name="itemPedidoCompra">itemPedidoCompra.</param>
        /// <param name="aliquotamva">aliquotamva.</param>
        public PrevisaoEntradaItemDTO(TipoUcDTO tipoUc = default(TipoUcDTO), ClasseProdutoDTO classeProduto = default(ClasseProdutoDTO), ProdutoDTO produto = default(ProdutoDTO), SitTributariaOrigemDTO sitTributariaOrigem = default(SitTributariaOrigemDTO), SitTributariaIcmsDTO situacaoTributaria = default(SitTributariaIcmsDTO), EmpresaDTO matriz = default(EmpresaDTO), PrevisaoEntradaDTO prevEntrada = default(PrevisaoEntradaDTO), SituacaoTributariaIpiDTO situacaoTributariaIpi = default(SituacaoTributariaIpiDTO), CodigoEnquadramentoIpiDTO codigoEnquadramentoIpi = default(CodigoEnquadramentoIpiDTO), long? codigoEstabelecimento = default(long?), string codigoEmpresa = default(string), string tipoDocumento = default(string), string serieDocumento = default(string), string previsaoEntrada = default(string), long? sequenciaPrevisaoEntrada = default(long?), decimal? quantidadeDocumento = default(decimal?), decimal? valorUnitario = default(decimal?), decimal? valorTotalItem = default(decimal?), string cfop = default(string), string naturezaOperacao = default(string), decimal? fatorTipoUC = default(decimal?), decimal? quantidadeEntrada = default(decimal?), decimal? quantidadeInicial = default(decimal?), string nfeInformacaoAdicional = default(string), TipoLogisticoEnum? tipoLogistico = default(TipoLogisticoEnum?), string dadoLogistico = default(string), decimal? aliquotaIcms = default(decimal?), decimal? aliquotaIcmsReducao = default(decimal?), decimal? valorBaseIcmsSt = default(decimal?), decimal? aliquotaIcmsSub = default(decimal?), decimal? valorIcmsSt = default(decimal?), decimal? aliquotaIpi = default(decimal?), decimal? aliquotaIpiReducao = default(decimal?), decimal? valorDesconto = default(decimal?), decimal? fatorBaseIcms = default(decimal?), decimal? fatorBaseIcmsSt = default(decimal?), decimal? fatorBaseIpi = default(decimal?), string usuario = default(string), DateTime? dataHistorico = default(DateTime?), string codigoProduto = default(string), string descricaoProduto = default(string), decimal? quantidadePrevista = default(decimal?), decimal? pesoLiquido = default(decimal?), decimal? pesoBruto = default(decimal?), decimal? largura = default(decimal?), decimal? comprimento = default(decimal?), decimal? altura = default(decimal?), decimal? valorServico = default(decimal?), decimal? valorAcrescimo = default(decimal?), decimal? valorUnitarioFiscal = default(decimal?), decimal? quantidadeorigem = default(decimal?), string informacaoAdicional1 = default(string), string informacaoAdicional2 = default(string), string informacaoAdicional3 = default(string), string numeroFci = default(string), string observacao = default(string), string numeroDocumento = default(string), string codigoNcm = default(string), long? itemPedidoCompra = default(long?), decimal? aliquotamva = default(decimal?))
        {
            // to ensure "tipoUc" is required (not null)
            if (tipoUc == null)
            {
                throw new InvalidDataException("tipoUc is a required property for PrevisaoEntradaItemDTO and cannot be null");
            }
            else
            {
                this.TipoUc = tipoUc;
            }
            // to ensure "produto" is required (not null)
            if (produto == null)
            {
                throw new InvalidDataException("produto is a required property for PrevisaoEntradaItemDTO and cannot be null");
            }
            else
            {
                this.Produto = produto;
            }
            // to ensure "quantidadeDocumento" is required (not null)
            if (quantidadeDocumento == null)
            {
                throw new InvalidDataException("quantidadeDocumento is a required property for PrevisaoEntradaItemDTO and cannot be null");
            }
            else
            {
                this.QuantidadeDocumento = quantidadeDocumento;
            }
            // to ensure "valorUnitario" is required (not null)
            if (valorUnitario == null)
            {
                throw new InvalidDataException("valorUnitario is a required property for PrevisaoEntradaItemDTO and cannot be null");
            }
            else
            {
                this.ValorUnitario = valorUnitario;
            }
            this.ClasseProduto = classeProduto;
            this.SitTributariaOrigem = sitTributariaOrigem;
            this.SituacaoTributaria = situacaoTributaria;
            this.Matriz = matriz;
            this.PrevEntrada = prevEntrada;
            this.SituacaoTributariaIpi = situacaoTributariaIpi;
            this.CodigoEnquadramentoIpi = codigoEnquadramentoIpi;
            this.CodigoEstabelecimento = codigoEstabelecimento;
            this.CodigoEmpresa = codigoEmpresa;
            this.TipoDocumento = tipoDocumento;
            this.SerieDocumento = serieDocumento;
            this.PrevisaoEntrada = previsaoEntrada;
            this.SequenciaPrevisaoEntrada = sequenciaPrevisaoEntrada;
            this.ValorTotalItem = valorTotalItem;
            this.Cfop = cfop;
            this.NaturezaOperacao = naturezaOperacao;
            this.FatorTipoUC = fatorTipoUC;
            this.QuantidadeEntrada = quantidadeEntrada;
            this.QuantidadeInicial = quantidadeInicial;
            this.NfeInformacaoAdicional = nfeInformacaoAdicional;
            this.TipoLogistico = tipoLogistico;
            this.DadoLogistico = dadoLogistico;
            this.AliquotaIcms = aliquotaIcms;
            this.AliquotaIcmsReducao = aliquotaIcmsReducao;
            this.ValorBaseIcmsSt = valorBaseIcmsSt;
            this.AliquotaIcmsSub = aliquotaIcmsSub;
            this.ValorIcmsSt = valorIcmsSt;
            this.AliquotaIpi = aliquotaIpi;
            this.AliquotaIpiReducao = aliquotaIpiReducao;
            this.ValorDesconto = valorDesconto;
            this.FatorBaseIcms = fatorBaseIcms;
            this.FatorBaseIcmsSt = fatorBaseIcmsSt;
            this.FatorBaseIpi = fatorBaseIpi;
            this.Usuario = usuario;
            this.DataHistorico = dataHistorico;
            this.CodigoProduto = codigoProduto;
            this.DescricaoProduto = descricaoProduto;
            this.QuantidadePrevista = quantidadePrevista;
            this.PesoLiquido = pesoLiquido;
            this.PesoBruto = pesoBruto;
            this.Largura = largura;
            this.Comprimento = comprimento;
            this.Altura = altura;
            this.ValorServico = valorServico;
            this.ValorAcrescimo = valorAcrescimo;
            this.ValorUnitarioFiscal = valorUnitarioFiscal;
            this.Quantidadeorigem = quantidadeorigem;
            this.InformacaoAdicional1 = informacaoAdicional1;
            this.InformacaoAdicional2 = informacaoAdicional2;
            this.InformacaoAdicional3 = informacaoAdicional3;
            this.NumeroFci = numeroFci;
            this.Observacao = observacao;
            this.NumeroDocumento = numeroDocumento;
            this.CodigoNcm = codigoNcm;
            this.ItemPedidoCompra = itemPedidoCompra;
            this.Aliquotamva = aliquotamva;
        }
        
        /// <summary>
        /// Gets or Sets TipoUc
        /// </summary>
        [DataMember(Name="tipoUc", EmitDefaultValue=false)]
        public TipoUcDTO TipoUc { get; set; }

        /// <summary>
        /// Gets or Sets ClasseProduto
        /// </summary>
        [DataMember(Name="classeProduto", EmitDefaultValue=false)]
        public ClasseProdutoDTO ClasseProduto { get; set; }

        /// <summary>
        /// Gets or Sets Produto
        /// </summary>
        [DataMember(Name="produto", EmitDefaultValue=false)]
        public ProdutoDTO Produto { get; set; }

        /// <summary>
        /// Gets or Sets SitTributariaOrigem
        /// </summary>
        [DataMember(Name="sitTributariaOrigem", EmitDefaultValue=false)]
        public SitTributariaOrigemDTO SitTributariaOrigem { get; set; }

        /// <summary>
        /// Gets or Sets SituacaoTributaria
        /// </summary>
        [DataMember(Name="situacaoTributaria", EmitDefaultValue=false)]
        public SitTributariaIcmsDTO SituacaoTributaria { get; set; }

        /// <summary>
        /// Gets or Sets Matriz
        /// </summary>
        [DataMember(Name="matriz", EmitDefaultValue=false)]
        public EmpresaDTO Matriz { get; set; }

        /// <summary>
        /// Gets or Sets PrevEntrada
        /// </summary>
        [DataMember(Name="prevEntrada", EmitDefaultValue=false)]
        public PrevisaoEntradaDTO PrevEntrada { get; set; }

        /// <summary>
        /// Gets or Sets SituacaoTributariaIpi
        /// </summary>
        [DataMember(Name="situacaoTributariaIpi", EmitDefaultValue=false)]
        public SituacaoTributariaIpiDTO SituacaoTributariaIpi { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEnquadramentoIpi
        /// </summary>
        [DataMember(Name="codigoEnquadramentoIpi", EmitDefaultValue=false)]
        public CodigoEnquadramentoIpiDTO CodigoEnquadramentoIpi { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEstabelecimento
        /// </summary>
        [DataMember(Name="codigoEstabelecimento", EmitDefaultValue=false)]
        public long? CodigoEstabelecimento { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets TipoDocumento
        /// </summary>
        [DataMember(Name="tipoDocumento", EmitDefaultValue=false)]
        public string TipoDocumento { get; set; }

        /// <summary>
        /// Gets or Sets SerieDocumento
        /// </summary>
        [DataMember(Name="serieDocumento", EmitDefaultValue=false)]
        public string SerieDocumento { get; set; }

        /// <summary>
        /// Gets or Sets PrevisaoEntrada
        /// </summary>
        [DataMember(Name="previsaoEntrada", EmitDefaultValue=false)]
        public string PrevisaoEntrada { get; set; }

        /// <summary>
        /// Gets or Sets SequenciaPrevisaoEntrada
        /// </summary>
        [DataMember(Name="sequenciaPrevisaoEntrada", EmitDefaultValue=false)]
        public long? SequenciaPrevisaoEntrada { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeDocumento
        /// </summary>
        [DataMember(Name="quantidadeDocumento", EmitDefaultValue=false)]
        public decimal? QuantidadeDocumento { get; set; }

        /// <summary>
        /// Gets or Sets ValorUnitario
        /// </summary>
        [DataMember(Name="valorUnitario", EmitDefaultValue=false)]
        public decimal? ValorUnitario { get; set; }

        /// <summary>
        /// Gets or Sets ValorTotalItem
        /// </summary>
        [DataMember(Name="valorTotalItem", EmitDefaultValue=false)]
        public decimal? ValorTotalItem { get; set; }

        /// <summary>
        /// Gets or Sets Cfop
        /// </summary>
        [DataMember(Name="cfop", EmitDefaultValue=false)]
        public string Cfop { get; set; }

        /// <summary>
        /// Gets or Sets NaturezaOperacao
        /// </summary>
        [DataMember(Name="naturezaOperacao", EmitDefaultValue=false)]
        public string NaturezaOperacao { get; set; }

        /// <summary>
        /// Gets or Sets FatorTipoUC
        /// </summary>
        [DataMember(Name="fatorTipoUC", EmitDefaultValue=false)]
        public decimal? FatorTipoUC { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeEntrada
        /// </summary>
        [DataMember(Name="quantidadeEntrada", EmitDefaultValue=false)]
        public decimal? QuantidadeEntrada { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeInicial
        /// </summary>
        [DataMember(Name="quantidadeInicial", EmitDefaultValue=false)]
        public decimal? QuantidadeInicial { get; set; }

        /// <summary>
        /// Gets or Sets NfeInformacaoAdicional
        /// </summary>
        [DataMember(Name="nfeInformacaoAdicional", EmitDefaultValue=false)]
        public string NfeInformacaoAdicional { get; set; }


        /// <summary>
        /// Gets or Sets DadoLogistico
        /// </summary>
        [DataMember(Name="dadoLogistico", EmitDefaultValue=false)]
        public string DadoLogistico { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcms
        /// </summary>
        [DataMember(Name="aliquotaIcms", EmitDefaultValue=false)]
        public decimal? AliquotaIcms { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcmsReducao
        /// </summary>
        [DataMember(Name="aliquotaIcmsReducao", EmitDefaultValue=false)]
        public decimal? AliquotaIcmsReducao { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIcmsSt
        /// </summary>
        [DataMember(Name="valorBaseIcmsSt", EmitDefaultValue=false)]
        public decimal? ValorBaseIcmsSt { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcmsSub
        /// </summary>
        [DataMember(Name="aliquotaIcmsSub", EmitDefaultValue=false)]
        public decimal? AliquotaIcmsSub { get; set; }

        /// <summary>
        /// Gets or Sets ValorIcmsSt
        /// </summary>
        [DataMember(Name="valorIcmsSt", EmitDefaultValue=false)]
        public decimal? ValorIcmsSt { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIpi
        /// </summary>
        [DataMember(Name="aliquotaIpi", EmitDefaultValue=false)]
        public decimal? AliquotaIpi { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIpiReducao
        /// </summary>
        [DataMember(Name="aliquotaIpiReducao", EmitDefaultValue=false)]
        public decimal? AliquotaIpiReducao { get; set; }

        /// <summary>
        /// Gets or Sets ValorDesconto
        /// </summary>
        [DataMember(Name="valorDesconto", EmitDefaultValue=false)]
        public decimal? ValorDesconto { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIcms
        /// </summary>
        [DataMember(Name="fatorBaseIcms", EmitDefaultValue=false)]
        public decimal? FatorBaseIcms { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIcmsSt
        /// </summary>
        [DataMember(Name="fatorBaseIcmsSt", EmitDefaultValue=false)]
        public decimal? FatorBaseIcmsSt { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIpi
        /// </summary>
        [DataMember(Name="fatorBaseIpi", EmitDefaultValue=false)]
        public decimal? FatorBaseIpi { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets DataHistorico
        /// </summary>
        [DataMember(Name="dataHistorico", EmitDefaultValue=false)]
        public DateTime? DataHistorico { get; set; }

        /// <summary>
        /// Gets or Sets CodigoProduto
        /// </summary>
        [DataMember(Name="codigoProduto", EmitDefaultValue=false)]
        public string CodigoProduto { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoProduto
        /// </summary>
        [DataMember(Name="descricaoProduto", EmitDefaultValue=false)]
        public string DescricaoProduto { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadePrevista
        /// </summary>
        [DataMember(Name="quantidadePrevista", EmitDefaultValue=false)]
        public decimal? QuantidadePrevista { get; set; }

        /// <summary>
        /// Gets or Sets PesoLiquido
        /// </summary>
        [DataMember(Name="pesoLiquido", EmitDefaultValue=false)]
        public decimal? PesoLiquido { get; set; }

        /// <summary>
        /// Gets or Sets PesoBruto
        /// </summary>
        [DataMember(Name="pesoBruto", EmitDefaultValue=false)]
        public decimal? PesoBruto { get; set; }

        /// <summary>
        /// Gets or Sets Largura
        /// </summary>
        [DataMember(Name="largura", EmitDefaultValue=false)]
        public decimal? Largura { get; set; }

        /// <summary>
        /// Gets or Sets Comprimento
        /// </summary>
        [DataMember(Name="comprimento", EmitDefaultValue=false)]
        public decimal? Comprimento { get; set; }

        /// <summary>
        /// Gets or Sets Altura
        /// </summary>
        [DataMember(Name="altura", EmitDefaultValue=false)]
        public decimal? Altura { get; set; }

        /// <summary>
        /// Gets or Sets ValorServico
        /// </summary>
        [DataMember(Name="valorServico", EmitDefaultValue=false)]
        public decimal? ValorServico { get; set; }

        /// <summary>
        /// Gets or Sets ValorAcrescimo
        /// </summary>
        [DataMember(Name="valorAcrescimo", EmitDefaultValue=false)]
        public decimal? ValorAcrescimo { get; set; }

        /// <summary>
        /// Gets or Sets ValorUnitarioFiscal
        /// </summary>
        [DataMember(Name="valorUnitarioFiscal", EmitDefaultValue=false)]
        public decimal? ValorUnitarioFiscal { get; set; }

        /// <summary>
        /// Gets or Sets Quantidadeorigem
        /// </summary>
        [DataMember(Name="quantidadeorigem", EmitDefaultValue=false)]
        public decimal? Quantidadeorigem { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional1
        /// </summary>
        [DataMember(Name="informacaoAdicional1", EmitDefaultValue=false)]
        public string InformacaoAdicional1 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional2
        /// </summary>
        [DataMember(Name="informacaoAdicional2", EmitDefaultValue=false)]
        public string InformacaoAdicional2 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional3
        /// </summary>
        [DataMember(Name="informacaoAdicional3", EmitDefaultValue=false)]
        public string InformacaoAdicional3 { get; set; }

        /// <summary>
        /// Gets or Sets NumeroFci
        /// </summary>
        [DataMember(Name="numeroFci", EmitDefaultValue=false)]
        public string NumeroFci { get; set; }

        /// <summary>
        /// Gets or Sets Observacao
        /// </summary>
        [DataMember(Name="observacao", EmitDefaultValue=false)]
        public string Observacao { get; set; }

        /// <summary>
        /// Gets or Sets NumeroDocumento
        /// </summary>
        [DataMember(Name="numeroDocumento", EmitDefaultValue=false)]
        public string NumeroDocumento { get; set; }

        /// <summary>
        /// Gets or Sets CodigoNcm
        /// </summary>
        [DataMember(Name="codigoNcm", EmitDefaultValue=false)]
        public string CodigoNcm { get; set; }

        /// <summary>
        /// Gets or Sets ItemPedidoCompra
        /// </summary>
        [DataMember(Name="itemPedidoCompra", EmitDefaultValue=false)]
        public long? ItemPedidoCompra { get; set; }

        /// <summary>
        /// Gets or Sets Aliquotamva
        /// </summary>
        [DataMember(Name="aliquotamva", EmitDefaultValue=false)]
        public decimal? Aliquotamva { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PrevisaoEntradaItemDTO {\n");
            sb.Append("  TipoUc: ").Append(TipoUc).Append("\n");
            sb.Append("  ClasseProduto: ").Append(ClasseProduto).Append("\n");
            sb.Append("  Produto: ").Append(Produto).Append("\n");
            sb.Append("  SitTributariaOrigem: ").Append(SitTributariaOrigem).Append("\n");
            sb.Append("  SituacaoTributaria: ").Append(SituacaoTributaria).Append("\n");
            sb.Append("  Matriz: ").Append(Matriz).Append("\n");
            sb.Append("  PrevEntrada: ").Append(PrevEntrada).Append("\n");
            sb.Append("  SituacaoTributariaIpi: ").Append(SituacaoTributariaIpi).Append("\n");
            sb.Append("  CodigoEnquadramentoIpi: ").Append(CodigoEnquadramentoIpi).Append("\n");
            sb.Append("  CodigoEstabelecimento: ").Append(CodigoEstabelecimento).Append("\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  TipoDocumento: ").Append(TipoDocumento).Append("\n");
            sb.Append("  SerieDocumento: ").Append(SerieDocumento).Append("\n");
            sb.Append("  PrevisaoEntrada: ").Append(PrevisaoEntrada).Append("\n");
            sb.Append("  SequenciaPrevisaoEntrada: ").Append(SequenciaPrevisaoEntrada).Append("\n");
            sb.Append("  QuantidadeDocumento: ").Append(QuantidadeDocumento).Append("\n");
            sb.Append("  ValorUnitario: ").Append(ValorUnitario).Append("\n");
            sb.Append("  ValorTotalItem: ").Append(ValorTotalItem).Append("\n");
            sb.Append("  Cfop: ").Append(Cfop).Append("\n");
            sb.Append("  NaturezaOperacao: ").Append(NaturezaOperacao).Append("\n");
            sb.Append("  FatorTipoUC: ").Append(FatorTipoUC).Append("\n");
            sb.Append("  QuantidadeEntrada: ").Append(QuantidadeEntrada).Append("\n");
            sb.Append("  QuantidadeInicial: ").Append(QuantidadeInicial).Append("\n");
            sb.Append("  NfeInformacaoAdicional: ").Append(NfeInformacaoAdicional).Append("\n");
            sb.Append("  TipoLogistico: ").Append(TipoLogistico).Append("\n");
            sb.Append("  DadoLogistico: ").Append(DadoLogistico).Append("\n");
            sb.Append("  AliquotaIcms: ").Append(AliquotaIcms).Append("\n");
            sb.Append("  AliquotaIcmsReducao: ").Append(AliquotaIcmsReducao).Append("\n");
            sb.Append("  ValorBaseIcmsSt: ").Append(ValorBaseIcmsSt).Append("\n");
            sb.Append("  AliquotaIcmsSub: ").Append(AliquotaIcmsSub).Append("\n");
            sb.Append("  ValorIcmsSt: ").Append(ValorIcmsSt).Append("\n");
            sb.Append("  AliquotaIpi: ").Append(AliquotaIpi).Append("\n");
            sb.Append("  AliquotaIpiReducao: ").Append(AliquotaIpiReducao).Append("\n");
            sb.Append("  ValorDesconto: ").Append(ValorDesconto).Append("\n");
            sb.Append("  FatorBaseIcms: ").Append(FatorBaseIcms).Append("\n");
            sb.Append("  FatorBaseIcmsSt: ").Append(FatorBaseIcmsSt).Append("\n");
            sb.Append("  FatorBaseIpi: ").Append(FatorBaseIpi).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  DataHistorico: ").Append(DataHistorico).Append("\n");
            sb.Append("  CodigoProduto: ").Append(CodigoProduto).Append("\n");
            sb.Append("  DescricaoProduto: ").Append(DescricaoProduto).Append("\n");
            sb.Append("  QuantidadePrevista: ").Append(QuantidadePrevista).Append("\n");
            sb.Append("  PesoLiquido: ").Append(PesoLiquido).Append("\n");
            sb.Append("  PesoBruto: ").Append(PesoBruto).Append("\n");
            sb.Append("  Largura: ").Append(Largura).Append("\n");
            sb.Append("  Comprimento: ").Append(Comprimento).Append("\n");
            sb.Append("  Altura: ").Append(Altura).Append("\n");
            sb.Append("  ValorServico: ").Append(ValorServico).Append("\n");
            sb.Append("  ValorAcrescimo: ").Append(ValorAcrescimo).Append("\n");
            sb.Append("  ValorUnitarioFiscal: ").Append(ValorUnitarioFiscal).Append("\n");
            sb.Append("  Quantidadeorigem: ").Append(Quantidadeorigem).Append("\n");
            sb.Append("  InformacaoAdicional1: ").Append(InformacaoAdicional1).Append("\n");
            sb.Append("  InformacaoAdicional2: ").Append(InformacaoAdicional2).Append("\n");
            sb.Append("  InformacaoAdicional3: ").Append(InformacaoAdicional3).Append("\n");
            sb.Append("  NumeroFci: ").Append(NumeroFci).Append("\n");
            sb.Append("  Observacao: ").Append(Observacao).Append("\n");
            sb.Append("  NumeroDocumento: ").Append(NumeroDocumento).Append("\n");
            sb.Append("  CodigoNcm: ").Append(CodigoNcm).Append("\n");
            sb.Append("  ItemPedidoCompra: ").Append(ItemPedidoCompra).Append("\n");
            sb.Append("  Aliquotamva: ").Append(Aliquotamva).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PrevisaoEntradaItemDTO);
        }

        /// <summary>
        /// Returns true if PrevisaoEntradaItemDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of PrevisaoEntradaItemDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PrevisaoEntradaItemDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TipoUc == input.TipoUc ||
                    (this.TipoUc != null &&
                    this.TipoUc.Equals(input.TipoUc))
                ) && 
                (
                    this.ClasseProduto == input.ClasseProduto ||
                    (this.ClasseProduto != null &&
                    this.ClasseProduto.Equals(input.ClasseProduto))
                ) && 
                (
                    this.Produto == input.Produto ||
                    (this.Produto != null &&
                    this.Produto.Equals(input.Produto))
                ) && 
                (
                    this.SitTributariaOrigem == input.SitTributariaOrigem ||
                    (this.SitTributariaOrigem != null &&
                    this.SitTributariaOrigem.Equals(input.SitTributariaOrigem))
                ) && 
                (
                    this.SituacaoTributaria == input.SituacaoTributaria ||
                    (this.SituacaoTributaria != null &&
                    this.SituacaoTributaria.Equals(input.SituacaoTributaria))
                ) && 
                (
                    this.Matriz == input.Matriz ||
                    (this.Matriz != null &&
                    this.Matriz.Equals(input.Matriz))
                ) && 
                (
                    this.PrevEntrada == input.PrevEntrada ||
                    (this.PrevEntrada != null &&
                    this.PrevEntrada.Equals(input.PrevEntrada))
                ) && 
                (
                    this.SituacaoTributariaIpi == input.SituacaoTributariaIpi ||
                    (this.SituacaoTributariaIpi != null &&
                    this.SituacaoTributariaIpi.Equals(input.SituacaoTributariaIpi))
                ) && 
                (
                    this.CodigoEnquadramentoIpi == input.CodigoEnquadramentoIpi ||
                    (this.CodigoEnquadramentoIpi != null &&
                    this.CodigoEnquadramentoIpi.Equals(input.CodigoEnquadramentoIpi))
                ) && 
                (
                    this.CodigoEstabelecimento == input.CodigoEstabelecimento ||
                    (this.CodigoEstabelecimento != null &&
                    this.CodigoEstabelecimento.Equals(input.CodigoEstabelecimento))
                ) && 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.TipoDocumento == input.TipoDocumento ||
                    (this.TipoDocumento != null &&
                    this.TipoDocumento.Equals(input.TipoDocumento))
                ) && 
                (
                    this.SerieDocumento == input.SerieDocumento ||
                    (this.SerieDocumento != null &&
                    this.SerieDocumento.Equals(input.SerieDocumento))
                ) && 
                (
                    this.PrevisaoEntrada == input.PrevisaoEntrada ||
                    (this.PrevisaoEntrada != null &&
                    this.PrevisaoEntrada.Equals(input.PrevisaoEntrada))
                ) && 
                (
                    this.SequenciaPrevisaoEntrada == input.SequenciaPrevisaoEntrada ||
                    (this.SequenciaPrevisaoEntrada != null &&
                    this.SequenciaPrevisaoEntrada.Equals(input.SequenciaPrevisaoEntrada))
                ) && 
                (
                    this.QuantidadeDocumento == input.QuantidadeDocumento ||
                    (this.QuantidadeDocumento != null &&
                    this.QuantidadeDocumento.Equals(input.QuantidadeDocumento))
                ) && 
                (
                    this.ValorUnitario == input.ValorUnitario ||
                    (this.ValorUnitario != null &&
                    this.ValorUnitario.Equals(input.ValorUnitario))
                ) && 
                (
                    this.ValorTotalItem == input.ValorTotalItem ||
                    (this.ValorTotalItem != null &&
                    this.ValorTotalItem.Equals(input.ValorTotalItem))
                ) && 
                (
                    this.Cfop == input.Cfop ||
                    (this.Cfop != null &&
                    this.Cfop.Equals(input.Cfop))
                ) && 
                (
                    this.NaturezaOperacao == input.NaturezaOperacao ||
                    (this.NaturezaOperacao != null &&
                    this.NaturezaOperacao.Equals(input.NaturezaOperacao))
                ) && 
                (
                    this.FatorTipoUC == input.FatorTipoUC ||
                    (this.FatorTipoUC != null &&
                    this.FatorTipoUC.Equals(input.FatorTipoUC))
                ) && 
                (
                    this.QuantidadeEntrada == input.QuantidadeEntrada ||
                    (this.QuantidadeEntrada != null &&
                    this.QuantidadeEntrada.Equals(input.QuantidadeEntrada))
                ) && 
                (
                    this.QuantidadeInicial == input.QuantidadeInicial ||
                    (this.QuantidadeInicial != null &&
                    this.QuantidadeInicial.Equals(input.QuantidadeInicial))
                ) && 
                (
                    this.NfeInformacaoAdicional == input.NfeInformacaoAdicional ||
                    (this.NfeInformacaoAdicional != null &&
                    this.NfeInformacaoAdicional.Equals(input.NfeInformacaoAdicional))
                ) && 
                (
                    this.TipoLogistico == input.TipoLogistico ||
                    (this.TipoLogistico != null &&
                    this.TipoLogistico.Equals(input.TipoLogistico))
                ) && 
                (
                    this.DadoLogistico == input.DadoLogistico ||
                    (this.DadoLogistico != null &&
                    this.DadoLogistico.Equals(input.DadoLogistico))
                ) && 
                (
                    this.AliquotaIcms == input.AliquotaIcms ||
                    (this.AliquotaIcms != null &&
                    this.AliquotaIcms.Equals(input.AliquotaIcms))
                ) && 
                (
                    this.AliquotaIcmsReducao == input.AliquotaIcmsReducao ||
                    (this.AliquotaIcmsReducao != null &&
                    this.AliquotaIcmsReducao.Equals(input.AliquotaIcmsReducao))
                ) && 
                (
                    this.ValorBaseIcmsSt == input.ValorBaseIcmsSt ||
                    (this.ValorBaseIcmsSt != null &&
                    this.ValorBaseIcmsSt.Equals(input.ValorBaseIcmsSt))
                ) && 
                (
                    this.AliquotaIcmsSub == input.AliquotaIcmsSub ||
                    (this.AliquotaIcmsSub != null &&
                    this.AliquotaIcmsSub.Equals(input.AliquotaIcmsSub))
                ) && 
                (
                    this.ValorIcmsSt == input.ValorIcmsSt ||
                    (this.ValorIcmsSt != null &&
                    this.ValorIcmsSt.Equals(input.ValorIcmsSt))
                ) && 
                (
                    this.AliquotaIpi == input.AliquotaIpi ||
                    (this.AliquotaIpi != null &&
                    this.AliquotaIpi.Equals(input.AliquotaIpi))
                ) && 
                (
                    this.AliquotaIpiReducao == input.AliquotaIpiReducao ||
                    (this.AliquotaIpiReducao != null &&
                    this.AliquotaIpiReducao.Equals(input.AliquotaIpiReducao))
                ) && 
                (
                    this.ValorDesconto == input.ValorDesconto ||
                    (this.ValorDesconto != null &&
                    this.ValorDesconto.Equals(input.ValorDesconto))
                ) && 
                (
                    this.FatorBaseIcms == input.FatorBaseIcms ||
                    (this.FatorBaseIcms != null &&
                    this.FatorBaseIcms.Equals(input.FatorBaseIcms))
                ) && 
                (
                    this.FatorBaseIcmsSt == input.FatorBaseIcmsSt ||
                    (this.FatorBaseIcmsSt != null &&
                    this.FatorBaseIcmsSt.Equals(input.FatorBaseIcmsSt))
                ) && 
                (
                    this.FatorBaseIpi == input.FatorBaseIpi ||
                    (this.FatorBaseIpi != null &&
                    this.FatorBaseIpi.Equals(input.FatorBaseIpi))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.DataHistorico == input.DataHistorico ||
                    (this.DataHistorico != null &&
                    this.DataHistorico.Equals(input.DataHistorico))
                ) && 
                (
                    this.CodigoProduto == input.CodigoProduto ||
                    (this.CodigoProduto != null &&
                    this.CodigoProduto.Equals(input.CodigoProduto))
                ) && 
                (
                    this.DescricaoProduto == input.DescricaoProduto ||
                    (this.DescricaoProduto != null &&
                    this.DescricaoProduto.Equals(input.DescricaoProduto))
                ) && 
                (
                    this.QuantidadePrevista == input.QuantidadePrevista ||
                    (this.QuantidadePrevista != null &&
                    this.QuantidadePrevista.Equals(input.QuantidadePrevista))
                ) && 
                (
                    this.PesoLiquido == input.PesoLiquido ||
                    (this.PesoLiquido != null &&
                    this.PesoLiquido.Equals(input.PesoLiquido))
                ) && 
                (
                    this.PesoBruto == input.PesoBruto ||
                    (this.PesoBruto != null &&
                    this.PesoBruto.Equals(input.PesoBruto))
                ) && 
                (
                    this.Largura == input.Largura ||
                    (this.Largura != null &&
                    this.Largura.Equals(input.Largura))
                ) && 
                (
                    this.Comprimento == input.Comprimento ||
                    (this.Comprimento != null &&
                    this.Comprimento.Equals(input.Comprimento))
                ) && 
                (
                    this.Altura == input.Altura ||
                    (this.Altura != null &&
                    this.Altura.Equals(input.Altura))
                ) && 
                (
                    this.ValorServico == input.ValorServico ||
                    (this.ValorServico != null &&
                    this.ValorServico.Equals(input.ValorServico))
                ) && 
                (
                    this.ValorAcrescimo == input.ValorAcrescimo ||
                    (this.ValorAcrescimo != null &&
                    this.ValorAcrescimo.Equals(input.ValorAcrescimo))
                ) && 
                (
                    this.ValorUnitarioFiscal == input.ValorUnitarioFiscal ||
                    (this.ValorUnitarioFiscal != null &&
                    this.ValorUnitarioFiscal.Equals(input.ValorUnitarioFiscal))
                ) && 
                (
                    this.Quantidadeorigem == input.Quantidadeorigem ||
                    (this.Quantidadeorigem != null &&
                    this.Quantidadeorigem.Equals(input.Quantidadeorigem))
                ) && 
                (
                    this.InformacaoAdicional1 == input.InformacaoAdicional1 ||
                    (this.InformacaoAdicional1 != null &&
                    this.InformacaoAdicional1.Equals(input.InformacaoAdicional1))
                ) && 
                (
                    this.InformacaoAdicional2 == input.InformacaoAdicional2 ||
                    (this.InformacaoAdicional2 != null &&
                    this.InformacaoAdicional2.Equals(input.InformacaoAdicional2))
                ) && 
                (
                    this.InformacaoAdicional3 == input.InformacaoAdicional3 ||
                    (this.InformacaoAdicional3 != null &&
                    this.InformacaoAdicional3.Equals(input.InformacaoAdicional3))
                ) && 
                (
                    this.NumeroFci == input.NumeroFci ||
                    (this.NumeroFci != null &&
                    this.NumeroFci.Equals(input.NumeroFci))
                ) && 
                (
                    this.Observacao == input.Observacao ||
                    (this.Observacao != null &&
                    this.Observacao.Equals(input.Observacao))
                ) && 
                (
                    this.NumeroDocumento == input.NumeroDocumento ||
                    (this.NumeroDocumento != null &&
                    this.NumeroDocumento.Equals(input.NumeroDocumento))
                ) && 
                (
                    this.CodigoNcm == input.CodigoNcm ||
                    (this.CodigoNcm != null &&
                    this.CodigoNcm.Equals(input.CodigoNcm))
                ) && 
                (
                    this.ItemPedidoCompra == input.ItemPedidoCompra ||
                    (this.ItemPedidoCompra != null &&
                    this.ItemPedidoCompra.Equals(input.ItemPedidoCompra))
                ) && 
                (
                    this.Aliquotamva == input.Aliquotamva ||
                    (this.Aliquotamva != null &&
                    this.Aliquotamva.Equals(input.Aliquotamva))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TipoUc != null)
                    hashCode = hashCode * 59 + this.TipoUc.GetHashCode();
                if (this.ClasseProduto != null)
                    hashCode = hashCode * 59 + this.ClasseProduto.GetHashCode();
                if (this.Produto != null)
                    hashCode = hashCode * 59 + this.Produto.GetHashCode();
                if (this.SitTributariaOrigem != null)
                    hashCode = hashCode * 59 + this.SitTributariaOrigem.GetHashCode();
                if (this.SituacaoTributaria != null)
                    hashCode = hashCode * 59 + this.SituacaoTributaria.GetHashCode();
                if (this.Matriz != null)
                    hashCode = hashCode * 59 + this.Matriz.GetHashCode();
                if (this.PrevEntrada != null)
                    hashCode = hashCode * 59 + this.PrevEntrada.GetHashCode();
                if (this.SituacaoTributariaIpi != null)
                    hashCode = hashCode * 59 + this.SituacaoTributariaIpi.GetHashCode();
                if (this.CodigoEnquadramentoIpi != null)
                    hashCode = hashCode * 59 + this.CodigoEnquadramentoIpi.GetHashCode();
                if (this.CodigoEstabelecimento != null)
                    hashCode = hashCode * 59 + this.CodigoEstabelecimento.GetHashCode();
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.TipoDocumento != null)
                    hashCode = hashCode * 59 + this.TipoDocumento.GetHashCode();
                if (this.SerieDocumento != null)
                    hashCode = hashCode * 59 + this.SerieDocumento.GetHashCode();
                if (this.PrevisaoEntrada != null)
                    hashCode = hashCode * 59 + this.PrevisaoEntrada.GetHashCode();
                if (this.SequenciaPrevisaoEntrada != null)
                    hashCode = hashCode * 59 + this.SequenciaPrevisaoEntrada.GetHashCode();
                if (this.QuantidadeDocumento != null)
                    hashCode = hashCode * 59 + this.QuantidadeDocumento.GetHashCode();
                if (this.ValorUnitario != null)
                    hashCode = hashCode * 59 + this.ValorUnitario.GetHashCode();
                if (this.ValorTotalItem != null)
                    hashCode = hashCode * 59 + this.ValorTotalItem.GetHashCode();
                if (this.Cfop != null)
                    hashCode = hashCode * 59 + this.Cfop.GetHashCode();
                if (this.NaturezaOperacao != null)
                    hashCode = hashCode * 59 + this.NaturezaOperacao.GetHashCode();
                if (this.FatorTipoUC != null)
                    hashCode = hashCode * 59 + this.FatorTipoUC.GetHashCode();
                if (this.QuantidadeEntrada != null)
                    hashCode = hashCode * 59 + this.QuantidadeEntrada.GetHashCode();
                if (this.QuantidadeInicial != null)
                    hashCode = hashCode * 59 + this.QuantidadeInicial.GetHashCode();
                if (this.NfeInformacaoAdicional != null)
                    hashCode = hashCode * 59 + this.NfeInformacaoAdicional.GetHashCode();
                if (this.TipoLogistico != null)
                    hashCode = hashCode * 59 + this.TipoLogistico.GetHashCode();
                if (this.DadoLogistico != null)
                    hashCode = hashCode * 59 + this.DadoLogistico.GetHashCode();
                if (this.AliquotaIcms != null)
                    hashCode = hashCode * 59 + this.AliquotaIcms.GetHashCode();
                if (this.AliquotaIcmsReducao != null)
                    hashCode = hashCode * 59 + this.AliquotaIcmsReducao.GetHashCode();
                if (this.ValorBaseIcmsSt != null)
                    hashCode = hashCode * 59 + this.ValorBaseIcmsSt.GetHashCode();
                if (this.AliquotaIcmsSub != null)
                    hashCode = hashCode * 59 + this.AliquotaIcmsSub.GetHashCode();
                if (this.ValorIcmsSt != null)
                    hashCode = hashCode * 59 + this.ValorIcmsSt.GetHashCode();
                if (this.AliquotaIpi != null)
                    hashCode = hashCode * 59 + this.AliquotaIpi.GetHashCode();
                if (this.AliquotaIpiReducao != null)
                    hashCode = hashCode * 59 + this.AliquotaIpiReducao.GetHashCode();
                if (this.ValorDesconto != null)
                    hashCode = hashCode * 59 + this.ValorDesconto.GetHashCode();
                if (this.FatorBaseIcms != null)
                    hashCode = hashCode * 59 + this.FatorBaseIcms.GetHashCode();
                if (this.FatorBaseIcmsSt != null)
                    hashCode = hashCode * 59 + this.FatorBaseIcmsSt.GetHashCode();
                if (this.FatorBaseIpi != null)
                    hashCode = hashCode * 59 + this.FatorBaseIpi.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.DataHistorico != null)
                    hashCode = hashCode * 59 + this.DataHistorico.GetHashCode();
                if (this.CodigoProduto != null)
                    hashCode = hashCode * 59 + this.CodigoProduto.GetHashCode();
                if (this.DescricaoProduto != null)
                    hashCode = hashCode * 59 + this.DescricaoProduto.GetHashCode();
                if (this.QuantidadePrevista != null)
                    hashCode = hashCode * 59 + this.QuantidadePrevista.GetHashCode();
                if (this.PesoLiquido != null)
                    hashCode = hashCode * 59 + this.PesoLiquido.GetHashCode();
                if (this.PesoBruto != null)
                    hashCode = hashCode * 59 + this.PesoBruto.GetHashCode();
                if (this.Largura != null)
                    hashCode = hashCode * 59 + this.Largura.GetHashCode();
                if (this.Comprimento != null)
                    hashCode = hashCode * 59 + this.Comprimento.GetHashCode();
                if (this.Altura != null)
                    hashCode = hashCode * 59 + this.Altura.GetHashCode();
                if (this.ValorServico != null)
                    hashCode = hashCode * 59 + this.ValorServico.GetHashCode();
                if (this.ValorAcrescimo != null)
                    hashCode = hashCode * 59 + this.ValorAcrescimo.GetHashCode();
                if (this.ValorUnitarioFiscal != null)
                    hashCode = hashCode * 59 + this.ValorUnitarioFiscal.GetHashCode();
                if (this.Quantidadeorigem != null)
                    hashCode = hashCode * 59 + this.Quantidadeorigem.GetHashCode();
                if (this.InformacaoAdicional1 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional1.GetHashCode();
                if (this.InformacaoAdicional2 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional2.GetHashCode();
                if (this.InformacaoAdicional3 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional3.GetHashCode();
                if (this.NumeroFci != null)
                    hashCode = hashCode * 59 + this.NumeroFci.GetHashCode();
                if (this.Observacao != null)
                    hashCode = hashCode * 59 + this.Observacao.GetHashCode();
                if (this.NumeroDocumento != null)
                    hashCode = hashCode * 59 + this.NumeroDocumento.GetHashCode();
                if (this.CodigoNcm != null)
                    hashCode = hashCode * 59 + this.CodigoNcm.GetHashCode();
                if (this.ItemPedidoCompra != null)
                    hashCode = hashCode * 59 + this.ItemPedidoCompra.GetHashCode();
                if (this.Aliquotamva != null)
                    hashCode = hashCode * 59 + this.Aliquotamva.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // QuantidadeDocumento (decimal?) minimum
            if(this.QuantidadeDocumento < (decimal?)0.00010)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for QuantidadeDocumento, must be a value greater than or equal to 0.00010.", new [] { "QuantidadeDocumento" });
            }

            yield break;
        }
    }

}
