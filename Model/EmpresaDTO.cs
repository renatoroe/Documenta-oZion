/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EmpresaDTO
    /// </summary>
    [DataContract]
    public partial class EmpresaDTO :  IEquatable<EmpresaDTO>, IValidatableObject
    {
        /// <summary>
        /// Pessoa física ou jurídica
        /// </summary>
        /// <value>Pessoa física ou jurídica</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TipoPessoaEmpresaEnum
        {
            
            /// <summary>
            /// Enum F for value: F
            /// </summary>
            [EnumMember(Value = "F")]
            F = 1,
            
            /// <summary>
            /// Enum J for value: J
            /// </summary>
            [EnumMember(Value = "J")]
            J = 2
        }

        /// <summary>
        /// Pessoa física ou jurídica
        /// </summary>
        /// <value>Pessoa física ou jurídica</value>
        [DataMember(Name="tipoPessoaEmpresa", EmitDefaultValue=false)]
        public TipoPessoaEmpresaEnum TipoPessoaEmpresa { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="EmpresaDTO" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EmpresaDTO() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="EmpresaDTO" /> class.
        /// </summary>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="descricaoEmpresa">Descrição da empresa (required).</param>
        /// <param name="enderecoEmpresa">Informe o endereço (required).</param>
        /// <param name="bairroEmpresa">Informe o bairro (required).</param>
        /// <param name="cepEmpresa">cepEmpresa.</param>
        /// <param name="municipioEmpresa">municipioEmpresa.</param>
        /// <param name="numeroEndereco">numeroEndereco.</param>
        /// <param name="cgcCpfEmpresa">CNPJ ou CPF sem formatação (required).</param>
        /// <param name="foneEmpresa">foneEmpresa.</param>
        /// <param name="ufEmpresa">ufEmpresa.</param>
        /// <param name="emailEmpresa">emailEmpresa.</param>
        /// <param name="paisEmpresa">Informe o pais (required).</param>
        /// <param name="complementoEmpresa">Informe algum complemento (required).</param>
        /// <param name="observacaoEmpresa">Informe alguma observação (required).</param>
        /// <param name="tipoPessoaEmpresa">Pessoa física ou jurídica (required).</param>
        /// <param name="descricaoEmpresa2">Informe uma segunda descrição (required).</param>
        /// <param name="depositante">depositante.</param>
        /// <param name="transportadora">transportadora.</param>
        /// <param name="ativo">ativo.</param>
        /// <param name="inscricaoMunicipal">Informe a inscrição municipal (required).</param>
        /// <param name="cnaeFiscal">Informe null caso não utilize.</param>
        /// <param name="inscricaoSuframa">Informe a inscrição suframa (required).</param>
        /// <param name="indicadorIE">Informe null caso não utilize.</param>
        /// <param name="tipoEmpresa">Informe null caso não utilize.</param>
        /// <param name="uf">Informe null caso não utilize.</param>
        /// <param name="codigoIbge">Código IBGE do município (required).</param>
        /// <param name="ieRgEmpresa">ieRgEmpresa.</param>
        public EmpresaDTO(string codigoEmpresa = default(string), string descricaoEmpresa = default(string), string enderecoEmpresa = default(string), string bairroEmpresa = default(string), string cepEmpresa = default(string), string municipioEmpresa = default(string), string numeroEndereco = default(string), string cgcCpfEmpresa = default(string), string foneEmpresa = default(string), string ufEmpresa = default(string), string emailEmpresa = default(string), string paisEmpresa = default(string), string complementoEmpresa = default(string), string observacaoEmpresa = default(string), TipoPessoaEmpresaEnum tipoPessoaEmpresa = default(TipoPessoaEmpresaEnum), string descricaoEmpresa2 = default(string), int? depositante = default(int?), bool? transportadora = default(bool?), int? ativo = default(int?), string inscricaoMunicipal = default(string), CnaeFiscalDTO cnaeFiscal = default(CnaeFiscalDTO), string inscricaoSuframa = default(string), IndicadorIEDTO indicadorIE = default(IndicadorIEDTO), TipoEmpresaDTO tipoEmpresa = default(TipoEmpresaDTO), UnidadeFederativaDTO uf = default(UnidadeFederativaDTO), string codigoIbge = default(string), string ieRgEmpresa = default(string))
        {
            // to ensure "descricaoEmpresa" is required (not null)
            if (descricaoEmpresa == null)
            {
                throw new InvalidDataException("descricaoEmpresa is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.DescricaoEmpresa = descricaoEmpresa;
            }
            // to ensure "enderecoEmpresa" is required (not null)
            if (enderecoEmpresa == null)
            {
                throw new InvalidDataException("enderecoEmpresa is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.EnderecoEmpresa = enderecoEmpresa;
            }
            // to ensure "bairroEmpresa" is required (not null)
            if (bairroEmpresa == null)
            {
                throw new InvalidDataException("bairroEmpresa is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.BairroEmpresa = bairroEmpresa;
            }
            // to ensure "cgcCpfEmpresa" is required (not null)
            if (cgcCpfEmpresa == null)
            {
                throw new InvalidDataException("cgcCpfEmpresa is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.CgcCpfEmpresa = cgcCpfEmpresa;
            }
            // to ensure "paisEmpresa" is required (not null)
            if (paisEmpresa == null)
            {
                throw new InvalidDataException("paisEmpresa is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.PaisEmpresa = paisEmpresa;
            }
            // to ensure "complementoEmpresa" is required (not null)
            if (complementoEmpresa == null)
            {
                throw new InvalidDataException("complementoEmpresa is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.ComplementoEmpresa = complementoEmpresa;
            }
            // to ensure "observacaoEmpresa" is required (not null)
            if (observacaoEmpresa == null)
            {
                throw new InvalidDataException("observacaoEmpresa is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.ObservacaoEmpresa = observacaoEmpresa;
            }
            // to ensure "tipoPessoaEmpresa" is required (not null)
            if (tipoPessoaEmpresa == null)
            {
                throw new InvalidDataException("tipoPessoaEmpresa is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.TipoPessoaEmpresa = tipoPessoaEmpresa;
            }
            // to ensure "descricaoEmpresa2" is required (not null)
            if (descricaoEmpresa2 == null)
            {
                throw new InvalidDataException("descricaoEmpresa2 is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.DescricaoEmpresa2 = descricaoEmpresa2;
            }
            // to ensure "inscricaoMunicipal" is required (not null)
            if (inscricaoMunicipal == null)
            {
                throw new InvalidDataException("inscricaoMunicipal is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.InscricaoMunicipal = inscricaoMunicipal;
            }
            // to ensure "inscricaoSuframa" is required (not null)
            if (inscricaoSuframa == null)
            {
                throw new InvalidDataException("inscricaoSuframa is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.InscricaoSuframa = inscricaoSuframa;
            }
            // to ensure "codigoIbge" is required (not null)
            if (codigoIbge == null)
            {
                throw new InvalidDataException("codigoIbge is a required property for EmpresaDTO and cannot be null");
            }
            else
            {
                this.CodigoIbge = codigoIbge;
            }
            this.CodigoEmpresa = codigoEmpresa;
            this.CepEmpresa = cepEmpresa;
            this.MunicipioEmpresa = municipioEmpresa;
            this.NumeroEndereco = numeroEndereco;
            this.FoneEmpresa = foneEmpresa;
            this.UfEmpresa = ufEmpresa;
            this.EmailEmpresa = emailEmpresa;
            this.Depositante = depositante;
            this.Transportadora = transportadora;
            this.Ativo = ativo;
            this.CnaeFiscal = cnaeFiscal;
            this.IndicadorIE = indicadorIE;
            this.TipoEmpresa = tipoEmpresa;
            this.Uf = uf;
            this.IeRgEmpresa = ieRgEmpresa;
        }
        
        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Descrição da empresa
        /// </summary>
        /// <value>Descrição da empresa</value>
        [DataMember(Name="descricaoEmpresa", EmitDefaultValue=false)]
        public string DescricaoEmpresa { get; set; }

        /// <summary>
        /// Informe o endereço
        /// </summary>
        /// <value>Informe o endereço</value>
        [DataMember(Name="enderecoEmpresa", EmitDefaultValue=false)]
        public string EnderecoEmpresa { get; set; }

        /// <summary>
        /// Informe o bairro
        /// </summary>
        /// <value>Informe o bairro</value>
        [DataMember(Name="bairroEmpresa", EmitDefaultValue=false)]
        public string BairroEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets CepEmpresa
        /// </summary>
        [DataMember(Name="cepEmpresa", EmitDefaultValue=false)]
        public string CepEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets MunicipioEmpresa
        /// </summary>
        [DataMember(Name="municipioEmpresa", EmitDefaultValue=false)]
        public string MunicipioEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets NumeroEndereco
        /// </summary>
        [DataMember(Name="numeroEndereco", EmitDefaultValue=false)]
        public string NumeroEndereco { get; set; }

        /// <summary>
        /// CNPJ ou CPF sem formatação
        /// </summary>
        /// <value>CNPJ ou CPF sem formatação</value>
        [DataMember(Name="cgcCpfEmpresa", EmitDefaultValue=false)]
        public string CgcCpfEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets FoneEmpresa
        /// </summary>
        [DataMember(Name="foneEmpresa", EmitDefaultValue=false)]
        public string FoneEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets UfEmpresa
        /// </summary>
        [DataMember(Name="ufEmpresa", EmitDefaultValue=false)]
        public string UfEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets EmailEmpresa
        /// </summary>
        [DataMember(Name="emailEmpresa", EmitDefaultValue=false)]
        public string EmailEmpresa { get; set; }

        /// <summary>
        /// Informe o pais
        /// </summary>
        /// <value>Informe o pais</value>
        [DataMember(Name="paisEmpresa", EmitDefaultValue=false)]
        public string PaisEmpresa { get; set; }

        /// <summary>
        /// Informe algum complemento
        /// </summary>
        /// <value>Informe algum complemento</value>
        [DataMember(Name="complementoEmpresa", EmitDefaultValue=false)]
        public string ComplementoEmpresa { get; set; }

        /// <summary>
        /// Informe alguma observação
        /// </summary>
        /// <value>Informe alguma observação</value>
        [DataMember(Name="observacaoEmpresa", EmitDefaultValue=false)]
        public string ObservacaoEmpresa { get; set; }


        /// <summary>
        /// Informe uma segunda descrição
        /// </summary>
        /// <value>Informe uma segunda descrição</value>
        [DataMember(Name="descricaoEmpresa2", EmitDefaultValue=false)]
        public string DescricaoEmpresa2 { get; set; }

        /// <summary>
        /// Gets or Sets Depositante
        /// </summary>
        [DataMember(Name="depositante", EmitDefaultValue=false)]
        public int? Depositante { get; set; }

        /// <summary>
        /// Gets or Sets Transportadora
        /// </summary>
        [DataMember(Name="transportadora", EmitDefaultValue=false)]
        public bool? Transportadora { get; set; }

        /// <summary>
        /// Gets or Sets Ativo
        /// </summary>
        [DataMember(Name="ativo", EmitDefaultValue=false)]
        public int? Ativo { get; set; }

        /// <summary>
        /// Informe a inscrição municipal
        /// </summary>
        /// <value>Informe a inscrição municipal</value>
        [DataMember(Name="inscricaoMunicipal", EmitDefaultValue=false)]
        public string InscricaoMunicipal { get; set; }

        /// <summary>
        /// Informe null caso não utilize
        /// </summary>
        /// <value>Informe null caso não utilize</value>
        [DataMember(Name="cnaeFiscal", EmitDefaultValue=false)]
        public CnaeFiscalDTO CnaeFiscal { get; set; }

        /// <summary>
        /// Informe a inscrição suframa
        /// </summary>
        /// <value>Informe a inscrição suframa</value>
        [DataMember(Name="inscricaoSuframa", EmitDefaultValue=false)]
        public string InscricaoSuframa { get; set; }

        /// <summary>
        /// Informe null caso não utilize
        /// </summary>
        /// <value>Informe null caso não utilize</value>
        [DataMember(Name="indicadorIE", EmitDefaultValue=false)]
        public IndicadorIEDTO IndicadorIE { get; set; }

        /// <summary>
        /// Informe null caso não utilize
        /// </summary>
        /// <value>Informe null caso não utilize</value>
        [DataMember(Name="tipoEmpresa", EmitDefaultValue=false)]
        public TipoEmpresaDTO TipoEmpresa { get; set; }

        /// <summary>
        /// Informe null caso não utilize
        /// </summary>
        /// <value>Informe null caso não utilize</value>
        [DataMember(Name="uf", EmitDefaultValue=false)]
        public UnidadeFederativaDTO Uf { get; set; }

        /// <summary>
        /// Código IBGE do município
        /// </summary>
        /// <value>Código IBGE do município</value>
        [DataMember(Name="codigoIbge", EmitDefaultValue=false)]
        public string CodigoIbge { get; set; }

        /// <summary>
        /// Gets or Sets IeRgEmpresa
        /// </summary>
        [DataMember(Name="ieRgEmpresa", EmitDefaultValue=false)]
        public string IeRgEmpresa { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmpresaDTO {\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  DescricaoEmpresa: ").Append(DescricaoEmpresa).Append("\n");
            sb.Append("  EnderecoEmpresa: ").Append(EnderecoEmpresa).Append("\n");
            sb.Append("  BairroEmpresa: ").Append(BairroEmpresa).Append("\n");
            sb.Append("  CepEmpresa: ").Append(CepEmpresa).Append("\n");
            sb.Append("  MunicipioEmpresa: ").Append(MunicipioEmpresa).Append("\n");
            sb.Append("  NumeroEndereco: ").Append(NumeroEndereco).Append("\n");
            sb.Append("  CgcCpfEmpresa: ").Append(CgcCpfEmpresa).Append("\n");
            sb.Append("  FoneEmpresa: ").Append(FoneEmpresa).Append("\n");
            sb.Append("  UfEmpresa: ").Append(UfEmpresa).Append("\n");
            sb.Append("  EmailEmpresa: ").Append(EmailEmpresa).Append("\n");
            sb.Append("  PaisEmpresa: ").Append(PaisEmpresa).Append("\n");
            sb.Append("  ComplementoEmpresa: ").Append(ComplementoEmpresa).Append("\n");
            sb.Append("  ObservacaoEmpresa: ").Append(ObservacaoEmpresa).Append("\n");
            sb.Append("  TipoPessoaEmpresa: ").Append(TipoPessoaEmpresa).Append("\n");
            sb.Append("  DescricaoEmpresa2: ").Append(DescricaoEmpresa2).Append("\n");
            sb.Append("  Depositante: ").Append(Depositante).Append("\n");
            sb.Append("  Transportadora: ").Append(Transportadora).Append("\n");
            sb.Append("  Ativo: ").Append(Ativo).Append("\n");
            sb.Append("  InscricaoMunicipal: ").Append(InscricaoMunicipal).Append("\n");
            sb.Append("  CnaeFiscal: ").Append(CnaeFiscal).Append("\n");
            sb.Append("  InscricaoSuframa: ").Append(InscricaoSuframa).Append("\n");
            sb.Append("  IndicadorIE: ").Append(IndicadorIE).Append("\n");
            sb.Append("  TipoEmpresa: ").Append(TipoEmpresa).Append("\n");
            sb.Append("  Uf: ").Append(Uf).Append("\n");
            sb.Append("  CodigoIbge: ").Append(CodigoIbge).Append("\n");
            sb.Append("  IeRgEmpresa: ").Append(IeRgEmpresa).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EmpresaDTO);
        }

        /// <summary>
        /// Returns true if EmpresaDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of EmpresaDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmpresaDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.DescricaoEmpresa == input.DescricaoEmpresa ||
                    (this.DescricaoEmpresa != null &&
                    this.DescricaoEmpresa.Equals(input.DescricaoEmpresa))
                ) && 
                (
                    this.EnderecoEmpresa == input.EnderecoEmpresa ||
                    (this.EnderecoEmpresa != null &&
                    this.EnderecoEmpresa.Equals(input.EnderecoEmpresa))
                ) && 
                (
                    this.BairroEmpresa == input.BairroEmpresa ||
                    (this.BairroEmpresa != null &&
                    this.BairroEmpresa.Equals(input.BairroEmpresa))
                ) && 
                (
                    this.CepEmpresa == input.CepEmpresa ||
                    (this.CepEmpresa != null &&
                    this.CepEmpresa.Equals(input.CepEmpresa))
                ) && 
                (
                    this.MunicipioEmpresa == input.MunicipioEmpresa ||
                    (this.MunicipioEmpresa != null &&
                    this.MunicipioEmpresa.Equals(input.MunicipioEmpresa))
                ) && 
                (
                    this.NumeroEndereco == input.NumeroEndereco ||
                    (this.NumeroEndereco != null &&
                    this.NumeroEndereco.Equals(input.NumeroEndereco))
                ) && 
                (
                    this.CgcCpfEmpresa == input.CgcCpfEmpresa ||
                    (this.CgcCpfEmpresa != null &&
                    this.CgcCpfEmpresa.Equals(input.CgcCpfEmpresa))
                ) && 
                (
                    this.FoneEmpresa == input.FoneEmpresa ||
                    (this.FoneEmpresa != null &&
                    this.FoneEmpresa.Equals(input.FoneEmpresa))
                ) && 
                (
                    this.UfEmpresa == input.UfEmpresa ||
                    (this.UfEmpresa != null &&
                    this.UfEmpresa.Equals(input.UfEmpresa))
                ) && 
                (
                    this.EmailEmpresa == input.EmailEmpresa ||
                    (this.EmailEmpresa != null &&
                    this.EmailEmpresa.Equals(input.EmailEmpresa))
                ) && 
                (
                    this.PaisEmpresa == input.PaisEmpresa ||
                    (this.PaisEmpresa != null &&
                    this.PaisEmpresa.Equals(input.PaisEmpresa))
                ) && 
                (
                    this.ComplementoEmpresa == input.ComplementoEmpresa ||
                    (this.ComplementoEmpresa != null &&
                    this.ComplementoEmpresa.Equals(input.ComplementoEmpresa))
                ) && 
                (
                    this.ObservacaoEmpresa == input.ObservacaoEmpresa ||
                    (this.ObservacaoEmpresa != null &&
                    this.ObservacaoEmpresa.Equals(input.ObservacaoEmpresa))
                ) && 
                (
                    this.TipoPessoaEmpresa == input.TipoPessoaEmpresa ||
                    (this.TipoPessoaEmpresa != null &&
                    this.TipoPessoaEmpresa.Equals(input.TipoPessoaEmpresa))
                ) && 
                (
                    this.DescricaoEmpresa2 == input.DescricaoEmpresa2 ||
                    (this.DescricaoEmpresa2 != null &&
                    this.DescricaoEmpresa2.Equals(input.DescricaoEmpresa2))
                ) && 
                (
                    this.Depositante == input.Depositante ||
                    (this.Depositante != null &&
                    this.Depositante.Equals(input.Depositante))
                ) && 
                (
                    this.Transportadora == input.Transportadora ||
                    (this.Transportadora != null &&
                    this.Transportadora.Equals(input.Transportadora))
                ) && 
                (
                    this.Ativo == input.Ativo ||
                    (this.Ativo != null &&
                    this.Ativo.Equals(input.Ativo))
                ) && 
                (
                    this.InscricaoMunicipal == input.InscricaoMunicipal ||
                    (this.InscricaoMunicipal != null &&
                    this.InscricaoMunicipal.Equals(input.InscricaoMunicipal))
                ) && 
                (
                    this.CnaeFiscal == input.CnaeFiscal ||
                    (this.CnaeFiscal != null &&
                    this.CnaeFiscal.Equals(input.CnaeFiscal))
                ) && 
                (
                    this.InscricaoSuframa == input.InscricaoSuframa ||
                    (this.InscricaoSuframa != null &&
                    this.InscricaoSuframa.Equals(input.InscricaoSuframa))
                ) && 
                (
                    this.IndicadorIE == input.IndicadorIE ||
                    (this.IndicadorIE != null &&
                    this.IndicadorIE.Equals(input.IndicadorIE))
                ) && 
                (
                    this.TipoEmpresa == input.TipoEmpresa ||
                    (this.TipoEmpresa != null &&
                    this.TipoEmpresa.Equals(input.TipoEmpresa))
                ) && 
                (
                    this.Uf == input.Uf ||
                    (this.Uf != null &&
                    this.Uf.Equals(input.Uf))
                ) && 
                (
                    this.CodigoIbge == input.CodigoIbge ||
                    (this.CodigoIbge != null &&
                    this.CodigoIbge.Equals(input.CodigoIbge))
                ) && 
                (
                    this.IeRgEmpresa == input.IeRgEmpresa ||
                    (this.IeRgEmpresa != null &&
                    this.IeRgEmpresa.Equals(input.IeRgEmpresa))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.DescricaoEmpresa != null)
                    hashCode = hashCode * 59 + this.DescricaoEmpresa.GetHashCode();
                if (this.EnderecoEmpresa != null)
                    hashCode = hashCode * 59 + this.EnderecoEmpresa.GetHashCode();
                if (this.BairroEmpresa != null)
                    hashCode = hashCode * 59 + this.BairroEmpresa.GetHashCode();
                if (this.CepEmpresa != null)
                    hashCode = hashCode * 59 + this.CepEmpresa.GetHashCode();
                if (this.MunicipioEmpresa != null)
                    hashCode = hashCode * 59 + this.MunicipioEmpresa.GetHashCode();
                if (this.NumeroEndereco != null)
                    hashCode = hashCode * 59 + this.NumeroEndereco.GetHashCode();
                if (this.CgcCpfEmpresa != null)
                    hashCode = hashCode * 59 + this.CgcCpfEmpresa.GetHashCode();
                if (this.FoneEmpresa != null)
                    hashCode = hashCode * 59 + this.FoneEmpresa.GetHashCode();
                if (this.UfEmpresa != null)
                    hashCode = hashCode * 59 + this.UfEmpresa.GetHashCode();
                if (this.EmailEmpresa != null)
                    hashCode = hashCode * 59 + this.EmailEmpresa.GetHashCode();
                if (this.PaisEmpresa != null)
                    hashCode = hashCode * 59 + this.PaisEmpresa.GetHashCode();
                if (this.ComplementoEmpresa != null)
                    hashCode = hashCode * 59 + this.ComplementoEmpresa.GetHashCode();
                if (this.ObservacaoEmpresa != null)
                    hashCode = hashCode * 59 + this.ObservacaoEmpresa.GetHashCode();
                if (this.TipoPessoaEmpresa != null)
                    hashCode = hashCode * 59 + this.TipoPessoaEmpresa.GetHashCode();
                if (this.DescricaoEmpresa2 != null)
                    hashCode = hashCode * 59 + this.DescricaoEmpresa2.GetHashCode();
                if (this.Depositante != null)
                    hashCode = hashCode * 59 + this.Depositante.GetHashCode();
                if (this.Transportadora != null)
                    hashCode = hashCode * 59 + this.Transportadora.GetHashCode();
                if (this.Ativo != null)
                    hashCode = hashCode * 59 + this.Ativo.GetHashCode();
                if (this.InscricaoMunicipal != null)
                    hashCode = hashCode * 59 + this.InscricaoMunicipal.GetHashCode();
                if (this.CnaeFiscal != null)
                    hashCode = hashCode * 59 + this.CnaeFiscal.GetHashCode();
                if (this.InscricaoSuframa != null)
                    hashCode = hashCode * 59 + this.InscricaoSuframa.GetHashCode();
                if (this.IndicadorIE != null)
                    hashCode = hashCode * 59 + this.IndicadorIE.GetHashCode();
                if (this.TipoEmpresa != null)
                    hashCode = hashCode * 59 + this.TipoEmpresa.GetHashCode();
                if (this.Uf != null)
                    hashCode = hashCode * 59 + this.Uf.GetHashCode();
                if (this.CodigoIbge != null)
                    hashCode = hashCode * 59 + this.CodigoIbge.GetHashCode();
                if (this.IeRgEmpresa != null)
                    hashCode = hashCode * 59 + this.IeRgEmpresa.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
