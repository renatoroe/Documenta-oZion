/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TipoUc
    /// </summary>
    [DataContract]
    public partial class TipoUc :  IEquatable<TipoUc>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TipoUc" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected TipoUc() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TipoUc" /> class.
        /// </summary>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="codigoProduto">codigoProduto.</param>
        /// <param name="produto">produto.</param>
        /// <param name="tipoUc">tipoUc.</param>
        /// <param name="descricaoTipoUc">descricaoTipoUc.</param>
        /// <param name="fatorTipoUc">fatorTipoUc (required).</param>
        /// <param name="padrao">padrao.</param>
        /// <param name="ativo">ativo.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="dataAtualizacao">dataAtualizacao.</param>
        /// <param name="produtoRelacionado">produtoRelacionado.</param>
        /// <param name="pesoProduto">pesoProduto.</param>
        /// <param name="pesoBruto">pesoBruto.</param>
        /// <param name="idTipoUc">idTipoUc.</param>
        /// <param name="informacaoAdicional1">informacaoAdicional1.</param>
        public TipoUc(string codigoEmpresa = default(string), string codigoProduto = default(string), Produto produto = default(Produto), string tipoUc = default(string), string descricaoTipoUc = default(string), decimal? fatorTipoUc = default(decimal?), bool? padrao = default(bool?), bool? ativo = default(bool?), string usuario = default(string), DateTime? dataAtualizacao = default(DateTime?), List<ProdutoRelacionado> produtoRelacionado = default(List<ProdutoRelacionado>), decimal? pesoProduto = default(decimal?), decimal? pesoBruto = default(decimal?), string idTipoUc = default(string), string informacaoAdicional1 = default(string))
        {
            // to ensure "fatorTipoUc" is required (not null)
            if (fatorTipoUc == null)
            {
                throw new InvalidDataException("fatorTipoUc is a required property for TipoUc and cannot be null");
            }
            else
            {
                this.FatorTipoUc = fatorTipoUc;
            }
            this.CodigoEmpresa = codigoEmpresa;
            this.CodigoProduto = codigoProduto;
            this.Produto = produto;
            this._TipoUc = tipoUc;
            this.DescricaoTipoUc = descricaoTipoUc;
            this.Padrao = padrao;
            this.Ativo = ativo;
            this.Usuario = usuario;
            this.DataAtualizacao = dataAtualizacao;
            this.ProdutoRelacionado = produtoRelacionado;
            this.PesoProduto = pesoProduto;
            this.PesoBruto = pesoBruto;
            this.IdTipoUc = idTipoUc;
            this.InformacaoAdicional1 = informacaoAdicional1;
        }
        
        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets CodigoProduto
        /// </summary>
        [DataMember(Name="codigoProduto", EmitDefaultValue=false)]
        public string CodigoProduto { get; set; }

        /// <summary>
        /// Gets or Sets Produto
        /// </summary>
        [DataMember(Name="produto", EmitDefaultValue=false)]
        public Produto Produto { get; set; }

        /// <summary>
        /// Gets or Sets _TipoUc
        /// </summary>
        [DataMember(Name="tipoUc", EmitDefaultValue=false)]
        public string _TipoUc { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoTipoUc
        /// </summary>
        [DataMember(Name="descricaoTipoUc", EmitDefaultValue=false)]
        public string DescricaoTipoUc { get; set; }

        /// <summary>
        /// Gets or Sets FatorTipoUc
        /// </summary>
        [DataMember(Name="fatorTipoUc", EmitDefaultValue=false)]
        public decimal? FatorTipoUc { get; set; }

        /// <summary>
        /// Gets or Sets Padrao
        /// </summary>
        [DataMember(Name="padrao", EmitDefaultValue=false)]
        public bool? Padrao { get; set; }

        /// <summary>
        /// Gets or Sets Ativo
        /// </summary>
        [DataMember(Name="ativo", EmitDefaultValue=false)]
        public bool? Ativo { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets DataAtualizacao
        /// </summary>
        [DataMember(Name="dataAtualizacao", EmitDefaultValue=false)]
        public DateTime? DataAtualizacao { get; set; }

        /// <summary>
        /// Gets or Sets ProdutoRelacionado
        /// </summary>
        [DataMember(Name="produtoRelacionado", EmitDefaultValue=false)]
        public List<ProdutoRelacionado> ProdutoRelacionado { get; set; }

        /// <summary>
        /// Gets or Sets PesoProduto
        /// </summary>
        [DataMember(Name="pesoProduto", EmitDefaultValue=false)]
        public decimal? PesoProduto { get; set; }

        /// <summary>
        /// Gets or Sets PesoBruto
        /// </summary>
        [DataMember(Name="pesoBruto", EmitDefaultValue=false)]
        public decimal? PesoBruto { get; set; }

        /// <summary>
        /// Gets or Sets IdTipoUc
        /// </summary>
        [DataMember(Name="idTipoUc", EmitDefaultValue=false)]
        public string IdTipoUc { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional1
        /// </summary>
        [DataMember(Name="informacaoAdicional1", EmitDefaultValue=false)]
        public string InformacaoAdicional1 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TipoUc {\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  CodigoProduto: ").Append(CodigoProduto).Append("\n");
            sb.Append("  Produto: ").Append(Produto).Append("\n");
            sb.Append("  _TipoUc: ").Append(_TipoUc).Append("\n");
            sb.Append("  DescricaoTipoUc: ").Append(DescricaoTipoUc).Append("\n");
            sb.Append("  FatorTipoUc: ").Append(FatorTipoUc).Append("\n");
            sb.Append("  Padrao: ").Append(Padrao).Append("\n");
            sb.Append("  Ativo: ").Append(Ativo).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  DataAtualizacao: ").Append(DataAtualizacao).Append("\n");
            sb.Append("  ProdutoRelacionado: ").Append(ProdutoRelacionado).Append("\n");
            sb.Append("  PesoProduto: ").Append(PesoProduto).Append("\n");
            sb.Append("  PesoBruto: ").Append(PesoBruto).Append("\n");
            sb.Append("  IdTipoUc: ").Append(IdTipoUc).Append("\n");
            sb.Append("  InformacaoAdicional1: ").Append(InformacaoAdicional1).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TipoUc);
        }

        /// <summary>
        /// Returns true if TipoUc instances are equal
        /// </summary>
        /// <param name="input">Instance of TipoUc to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TipoUc input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.CodigoProduto == input.CodigoProduto ||
                    (this.CodigoProduto != null &&
                    this.CodigoProduto.Equals(input.CodigoProduto))
                ) && 
                (
                    this.Produto == input.Produto ||
                    (this.Produto != null &&
                    this.Produto.Equals(input.Produto))
                ) && 
                (
                    this._TipoUc == input._TipoUc ||
                    (this._TipoUc != null &&
                    this._TipoUc.Equals(input._TipoUc))
                ) && 
                (
                    this.DescricaoTipoUc == input.DescricaoTipoUc ||
                    (this.DescricaoTipoUc != null &&
                    this.DescricaoTipoUc.Equals(input.DescricaoTipoUc))
                ) && 
                (
                    this.FatorTipoUc == input.FatorTipoUc ||
                    (this.FatorTipoUc != null &&
                    this.FatorTipoUc.Equals(input.FatorTipoUc))
                ) && 
                (
                    this.Padrao == input.Padrao ||
                    (this.Padrao != null &&
                    this.Padrao.Equals(input.Padrao))
                ) && 
                (
                    this.Ativo == input.Ativo ||
                    (this.Ativo != null &&
                    this.Ativo.Equals(input.Ativo))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.DataAtualizacao == input.DataAtualizacao ||
                    (this.DataAtualizacao != null &&
                    this.DataAtualizacao.Equals(input.DataAtualizacao))
                ) && 
                (
                    this.ProdutoRelacionado == input.ProdutoRelacionado ||
                    this.ProdutoRelacionado != null &&
                    this.ProdutoRelacionado.SequenceEqual(input.ProdutoRelacionado)
                ) && 
                (
                    this.PesoProduto == input.PesoProduto ||
                    (this.PesoProduto != null &&
                    this.PesoProduto.Equals(input.PesoProduto))
                ) && 
                (
                    this.PesoBruto == input.PesoBruto ||
                    (this.PesoBruto != null &&
                    this.PesoBruto.Equals(input.PesoBruto))
                ) && 
                (
                    this.IdTipoUc == input.IdTipoUc ||
                    (this.IdTipoUc != null &&
                    this.IdTipoUc.Equals(input.IdTipoUc))
                ) && 
                (
                    this.InformacaoAdicional1 == input.InformacaoAdicional1 ||
                    (this.InformacaoAdicional1 != null &&
                    this.InformacaoAdicional1.Equals(input.InformacaoAdicional1))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.CodigoProduto != null)
                    hashCode = hashCode * 59 + this.CodigoProduto.GetHashCode();
                if (this.Produto != null)
                    hashCode = hashCode * 59 + this.Produto.GetHashCode();
                if (this._TipoUc != null)
                    hashCode = hashCode * 59 + this._TipoUc.GetHashCode();
                if (this.DescricaoTipoUc != null)
                    hashCode = hashCode * 59 + this.DescricaoTipoUc.GetHashCode();
                if (this.FatorTipoUc != null)
                    hashCode = hashCode * 59 + this.FatorTipoUc.GetHashCode();
                if (this.Padrao != null)
                    hashCode = hashCode * 59 + this.Padrao.GetHashCode();
                if (this.Ativo != null)
                    hashCode = hashCode * 59 + this.Ativo.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.DataAtualizacao != null)
                    hashCode = hashCode * 59 + this.DataAtualizacao.GetHashCode();
                if (this.ProdutoRelacionado != null)
                    hashCode = hashCode * 59 + this.ProdutoRelacionado.GetHashCode();
                if (this.PesoProduto != null)
                    hashCode = hashCode * 59 + this.PesoProduto.GetHashCode();
                if (this.PesoBruto != null)
                    hashCode = hashCode * 59 + this.PesoBruto.GetHashCode();
                if (this.IdTipoUc != null)
                    hashCode = hashCode * 59 + this.IdTipoUc.GetHashCode();
                if (this.InformacaoAdicional1 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional1.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
