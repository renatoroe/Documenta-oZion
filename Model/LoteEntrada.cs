/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// LoteEntrada
    /// </summary>
    [DataContract]
    public partial class LoteEntrada :  IEquatable<LoteEntrada>, IValidatableObject
    {
        /// <summary>
        /// Defines EstadoLote
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum EstadoLoteEnum
        {
            
            /// <summary>
            /// Enum PENDENTE for value: PENDENTE
            /// </summary>
            [EnumMember(Value = "PENDENTE")]
            PENDENTE = 1,
            
            /// <summary>
            /// Enum CONFERIDO for value: CONFERIDO
            /// </summary>
            [EnumMember(Value = "CONFERIDO")]
            CONFERIDO = 2,
            
            /// <summary>
            /// Enum CANCELADO for value: CANCELADO
            /// </summary>
            [EnumMember(Value = "CANCELADO")]
            CANCELADO = 3
        }

        /// <summary>
        /// Gets or Sets EstadoLote
        /// </summary>
        [DataMember(Name="estadoLote", EmitDefaultValue=false)]
        public EstadoLoteEnum? EstadoLote { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="LoteEntrada" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected LoteEntrada() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="LoteEntrada" /> class.
        /// </summary>
        /// <param name="codigoEstabelecimento">codigoEstabelecimento.</param>
        /// <param name="loteEntrada">loteEntrada.</param>
        /// <param name="estabelecimento">estabelecimento.</param>
        /// <param name="empresa">empresa.</param>
        /// <param name="codigoMatriz">codigoMatriz.</param>
        /// <param name="matriz">matriz.</param>
        /// <param name="codigoProduto">codigoProduto.</param>
        /// <param name="descricaoProduto">descricaoProduto.</param>
        /// <param name="produto">produto.</param>
        /// <param name="tipoUc">tipoUc.</param>
        /// <param name="tipoUcCampo">tipoUcCampo.</param>
        /// <param name="documentoEntrada">documentoEntrada (required).</param>
        /// <param name="codigoDocumento">codigoDocumento.</param>
        /// <param name="quantidadeAtual">quantidadeAtual.</param>
        /// <param name="quantidadeBloqueado">quantidadeBloqueado.</param>
        /// <param name="quantidadeDocumento">quantidadeDocumento.</param>
        /// <param name="quantidadeEmpenhado">quantidadeEmpenhado.</param>
        /// <param name="quantidadeInicial">quantidadeInicial.</param>
        /// <param name="quantidadeEntrada">quantidadeEntrada.</param>
        /// <param name="fatorTipoUC">fatorTipoUC.</param>
        /// <param name="valorUnitario">valorUnitario.</param>
        /// <param name="cfop">cfop.</param>
        /// <param name="naturezaOperacao">naturezaOperacao.</param>
        /// <param name="classeProduto">classeProduto.</param>
        /// <param name="nfeInformacaoAdicional">nfeInformacaoAdicional.</param>
        /// <param name="tipoLogistico">tipoLogistico.</param>
        /// <param name="dadoLogistico">dadoLogistico.</param>
        /// <param name="sitTributariaOrigem">sitTributariaOrigem.</param>
        /// <param name="situacaoTributaria">situacaoTributaria.</param>
        /// <param name="aliquotaIcms">aliquotaIcms.</param>
        /// <param name="aliquotaIcmsReducao">aliquotaIcmsReducao.</param>
        /// <param name="valorBaseIcmsSt">valorBaseIcmsSt.</param>
        /// <param name="valorBaseIcms">valorBaseIcms.</param>
        /// <param name="aliquotaIcmsSub">aliquotaIcmsSub.</param>
        /// <param name="valorIcmsSt">valorIcmsSt.</param>
        /// <param name="valorBaseIcmsDestino">valorBaseIcmsDestino.</param>
        /// <param name="aliquotaIcmsUfDestino">aliquotaIcmsUfDestino.</param>
        /// <param name="aliquotaIcmsInter">aliquotaIcmsInter.</param>
        /// <param name="percentualIcmsPartilha">percentualIcmsPartilha.</param>
        /// <param name="valorIcmsUfOrigem">valorIcmsUfOrigem.</param>
        /// <param name="valorIcmsUfDestino">valorIcmsUfDestino.</param>
        /// <param name="valorBaseFecp">valorBaseFecp.</param>
        /// <param name="situacaoTributariaIpi">situacaoTributariaIpi.</param>
        /// <param name="codigoEnquadramentoIpi">codigoEnquadramentoIpi.</param>
        /// <param name="aliquotaIpi">aliquotaIpi.</param>
        /// <param name="aliquotaIpiReducao">aliquotaIpiReducao.</param>
        /// <param name="valorDesconto">valorDesconto.</param>
        /// <param name="valorFrete">valorFrete.</param>
        /// <param name="valorSeguro">valorSeguro.</param>
        /// <param name="fatorBaseIcms">fatorBaseIcms.</param>
        /// <param name="fatorBaseIcmsSt">fatorBaseIcmsSt.</param>
        /// <param name="fatorBaseIpi">fatorBaseIpi.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="dataHistorico">dataHistorico.</param>
        /// <param name="pesoLiquido">pesoLiquido.</param>
        /// <param name="pesoBruto">pesoBruto.</param>
        /// <param name="largura">largura.</param>
        /// <param name="comprimento">comprimento.</param>
        /// <param name="altura">altura.</param>
        /// <param name="valorServico">valorServico.</param>
        /// <param name="valorAcrescimo">valorAcrescimo.</param>
        /// <param name="valorUnitarioFiscal">valorUnitarioFiscal.</param>
        /// <param name="quantidadeorigem">quantidadeorigem.</param>
        /// <param name="informacaoAdicional1">informacaoAdicional1.</param>
        /// <param name="informacaoAdicional2">informacaoAdicional2.</param>
        /// <param name="informacaoAdicional3">informacaoAdicional3.</param>
        /// <param name="estadoLote">estadoLote.</param>
        /// <param name="numeroFci">numeroFci.</param>
        /// <param name="observacao">observacao.</param>
        /// <param name="codigoNcm">codigoNcm.</param>
        /// <param name="aliquotaFecp">aliquotaFecp.</param>
        /// <param name="valorFecp">valorFecp.</param>
        /// <param name="itemPedidoCompra">itemPedidoCompra.</param>
        /// <param name="codigoModBcSt">codigoModBcSt.</param>
        /// <param name="aliquotamva">aliquotamva.</param>
        public LoteEntrada(long? codigoEstabelecimento = default(long?), long? loteEntrada = default(long?), Estabelecimento estabelecimento = default(Estabelecimento), Empresa empresa = default(Empresa), string codigoMatriz = default(string), Empresa matriz = default(Empresa), string codigoProduto = default(string), string descricaoProduto = default(string), Produto produto = default(Produto), TipoUc tipoUc = default(TipoUc), string tipoUcCampo = default(string), DocumentoEntrada documentoEntrada = default(DocumentoEntrada), long? codigoDocumento = default(long?), decimal? quantidadeAtual = default(decimal?), decimal? quantidadeBloqueado = default(decimal?), decimal? quantidadeDocumento = default(decimal?), decimal? quantidadeEmpenhado = default(decimal?), decimal? quantidadeInicial = default(decimal?), decimal? quantidadeEntrada = default(decimal?), decimal? fatorTipoUC = default(decimal?), decimal? valorUnitario = default(decimal?), string cfop = default(string), string naturezaOperacao = default(string), string classeProduto = default(string), string nfeInformacaoAdicional = default(string), long? tipoLogistico = default(long?), string dadoLogistico = default(string), SitTributariaOrigem sitTributariaOrigem = default(SitTributariaOrigem), SitTributariaIcms situacaoTributaria = default(SitTributariaIcms), decimal? aliquotaIcms = default(decimal?), decimal? aliquotaIcmsReducao = default(decimal?), decimal? valorBaseIcmsSt = default(decimal?), decimal? valorBaseIcms = default(decimal?), decimal? aliquotaIcmsSub = default(decimal?), decimal? valorIcmsSt = default(decimal?), decimal? valorBaseIcmsDestino = default(decimal?), decimal? aliquotaIcmsUfDestino = default(decimal?), decimal? aliquotaIcmsInter = default(decimal?), decimal? percentualIcmsPartilha = default(decimal?), decimal? valorIcmsUfOrigem = default(decimal?), decimal? valorIcmsUfDestino = default(decimal?), decimal? valorBaseFecp = default(decimal?), SituacaoTributariaIpi situacaoTributariaIpi = default(SituacaoTributariaIpi), CodigoEnquadramentoIpi codigoEnquadramentoIpi = default(CodigoEnquadramentoIpi), decimal? aliquotaIpi = default(decimal?), decimal? aliquotaIpiReducao = default(decimal?), decimal? valorDesconto = default(decimal?), decimal? valorFrete = default(decimal?), decimal? valorSeguro = default(decimal?), decimal? fatorBaseIcms = default(decimal?), decimal? fatorBaseIcmsSt = default(decimal?), decimal? fatorBaseIpi = default(decimal?), string usuario = default(string), DateTime? dataHistorico = default(DateTime?), decimal? pesoLiquido = default(decimal?), decimal? pesoBruto = default(decimal?), decimal? largura = default(decimal?), decimal? comprimento = default(decimal?), decimal? altura = default(decimal?), decimal? valorServico = default(decimal?), decimal? valorAcrescimo = default(decimal?), decimal? valorUnitarioFiscal = default(decimal?), decimal? quantidadeorigem = default(decimal?), string informacaoAdicional1 = default(string), string informacaoAdicional2 = default(string), string informacaoAdicional3 = default(string), EstadoLoteEnum? estadoLote = default(EstadoLoteEnum?), string numeroFci = default(string), string observacao = default(string), string codigoNcm = default(string), decimal? aliquotaFecp = default(decimal?), decimal? valorFecp = default(decimal?), long? itemPedidoCompra = default(long?), long? codigoModBcSt = default(long?), decimal? aliquotamva = default(decimal?))
        {
            // to ensure "documentoEntrada" is required (not null)
            if (documentoEntrada == null)
            {
                throw new InvalidDataException("documentoEntrada is a required property for LoteEntrada and cannot be null");
            }
            else
            {
                this.DocumentoEntrada = documentoEntrada;
            }
            this.CodigoEstabelecimento = codigoEstabelecimento;
            this._LoteEntrada = loteEntrada;
            this.Estabelecimento = estabelecimento;
            this.Empresa = empresa;
            this.CodigoMatriz = codigoMatriz;
            this.Matriz = matriz;
            this.CodigoProduto = codigoProduto;
            this.DescricaoProduto = descricaoProduto;
            this.Produto = produto;
            this.TipoUc = tipoUc;
            this.TipoUcCampo = tipoUcCampo;
            this.CodigoDocumento = codigoDocumento;
            this.QuantidadeAtual = quantidadeAtual;
            this.QuantidadeBloqueado = quantidadeBloqueado;
            this.QuantidadeDocumento = quantidadeDocumento;
            this.QuantidadeEmpenhado = quantidadeEmpenhado;
            this.QuantidadeInicial = quantidadeInicial;
            this.QuantidadeEntrada = quantidadeEntrada;
            this.FatorTipoUC = fatorTipoUC;
            this.ValorUnitario = valorUnitario;
            this.Cfop = cfop;
            this.NaturezaOperacao = naturezaOperacao;
            this.ClasseProduto = classeProduto;
            this.NfeInformacaoAdicional = nfeInformacaoAdicional;
            this.TipoLogistico = tipoLogistico;
            this.DadoLogistico = dadoLogistico;
            this.SitTributariaOrigem = sitTributariaOrigem;
            this.SituacaoTributaria = situacaoTributaria;
            this.AliquotaIcms = aliquotaIcms;
            this.AliquotaIcmsReducao = aliquotaIcmsReducao;
            this.ValorBaseIcmsSt = valorBaseIcmsSt;
            this.ValorBaseIcms = valorBaseIcms;
            this.AliquotaIcmsSub = aliquotaIcmsSub;
            this.ValorIcmsSt = valorIcmsSt;
            this.ValorBaseIcmsDestino = valorBaseIcmsDestino;
            this.AliquotaIcmsUfDestino = aliquotaIcmsUfDestino;
            this.AliquotaIcmsInter = aliquotaIcmsInter;
            this.PercentualIcmsPartilha = percentualIcmsPartilha;
            this.ValorIcmsUfOrigem = valorIcmsUfOrigem;
            this.ValorIcmsUfDestino = valorIcmsUfDestino;
            this.ValorBaseFecp = valorBaseFecp;
            this.SituacaoTributariaIpi = situacaoTributariaIpi;
            this.CodigoEnquadramentoIpi = codigoEnquadramentoIpi;
            this.AliquotaIpi = aliquotaIpi;
            this.AliquotaIpiReducao = aliquotaIpiReducao;
            this.ValorDesconto = valorDesconto;
            this.ValorFrete = valorFrete;
            this.ValorSeguro = valorSeguro;
            this.FatorBaseIcms = fatorBaseIcms;
            this.FatorBaseIcmsSt = fatorBaseIcmsSt;
            this.FatorBaseIpi = fatorBaseIpi;
            this.Usuario = usuario;
            this.DataHistorico = dataHistorico;
            this.PesoLiquido = pesoLiquido;
            this.PesoBruto = pesoBruto;
            this.Largura = largura;
            this.Comprimento = comprimento;
            this.Altura = altura;
            this.ValorServico = valorServico;
            this.ValorAcrescimo = valorAcrescimo;
            this.ValorUnitarioFiscal = valorUnitarioFiscal;
            this.Quantidadeorigem = quantidadeorigem;
            this.InformacaoAdicional1 = informacaoAdicional1;
            this.InformacaoAdicional2 = informacaoAdicional2;
            this.InformacaoAdicional3 = informacaoAdicional3;
            this.EstadoLote = estadoLote;
            this.NumeroFci = numeroFci;
            this.Observacao = observacao;
            this.CodigoNcm = codigoNcm;
            this.AliquotaFecp = aliquotaFecp;
            this.ValorFecp = valorFecp;
            this.ItemPedidoCompra = itemPedidoCompra;
            this.CodigoModBcSt = codigoModBcSt;
            this.Aliquotamva = aliquotamva;
        }
        
        /// <summary>
        /// Gets or Sets CodigoEstabelecimento
        /// </summary>
        [DataMember(Name="codigoEstabelecimento", EmitDefaultValue=false)]
        public long? CodigoEstabelecimento { get; set; }

        /// <summary>
        /// Gets or Sets _LoteEntrada
        /// </summary>
        [DataMember(Name="loteEntrada", EmitDefaultValue=false)]
        public long? _LoteEntrada { get; set; }

        /// <summary>
        /// Gets or Sets Estabelecimento
        /// </summary>
        [DataMember(Name="estabelecimento", EmitDefaultValue=false)]
        public Estabelecimento Estabelecimento { get; set; }

        /// <summary>
        /// Gets or Sets Empresa
        /// </summary>
        [DataMember(Name="empresa", EmitDefaultValue=false)]
        public Empresa Empresa { get; set; }

        /// <summary>
        /// Gets or Sets CodigoMatriz
        /// </summary>
        [DataMember(Name="codigoMatriz", EmitDefaultValue=false)]
        public string CodigoMatriz { get; set; }

        /// <summary>
        /// Gets or Sets Matriz
        /// </summary>
        [DataMember(Name="matriz", EmitDefaultValue=false)]
        public Empresa Matriz { get; set; }

        /// <summary>
        /// Gets or Sets CodigoProduto
        /// </summary>
        [DataMember(Name="codigoProduto", EmitDefaultValue=false)]
        public string CodigoProduto { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoProduto
        /// </summary>
        [DataMember(Name="descricaoProduto", EmitDefaultValue=false)]
        public string DescricaoProduto { get; set; }

        /// <summary>
        /// Gets or Sets Produto
        /// </summary>
        [DataMember(Name="produto", EmitDefaultValue=false)]
        public Produto Produto { get; set; }

        /// <summary>
        /// Gets or Sets TipoUc
        /// </summary>
        [DataMember(Name="tipoUc", EmitDefaultValue=false)]
        public TipoUc TipoUc { get; set; }

        /// <summary>
        /// Gets or Sets TipoUcCampo
        /// </summary>
        [DataMember(Name="tipoUcCampo", EmitDefaultValue=false)]
        public string TipoUcCampo { get; set; }

        /// <summary>
        /// Gets or Sets DocumentoEntrada
        /// </summary>
        [DataMember(Name="documentoEntrada", EmitDefaultValue=false)]
        public DocumentoEntrada DocumentoEntrada { get; set; }

        /// <summary>
        /// Gets or Sets CodigoDocumento
        /// </summary>
        [DataMember(Name="codigoDocumento", EmitDefaultValue=false)]
        public long? CodigoDocumento { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeAtual
        /// </summary>
        [DataMember(Name="quantidadeAtual", EmitDefaultValue=false)]
        public decimal? QuantidadeAtual { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeBloqueado
        /// </summary>
        [DataMember(Name="quantidadeBloqueado", EmitDefaultValue=false)]
        public decimal? QuantidadeBloqueado { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeDocumento
        /// </summary>
        [DataMember(Name="quantidadeDocumento", EmitDefaultValue=false)]
        public decimal? QuantidadeDocumento { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeEmpenhado
        /// </summary>
        [DataMember(Name="quantidadeEmpenhado", EmitDefaultValue=false)]
        public decimal? QuantidadeEmpenhado { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeInicial
        /// </summary>
        [DataMember(Name="quantidadeInicial", EmitDefaultValue=false)]
        public decimal? QuantidadeInicial { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeEntrada
        /// </summary>
        [DataMember(Name="quantidadeEntrada", EmitDefaultValue=false)]
        public decimal? QuantidadeEntrada { get; set; }

        /// <summary>
        /// Gets or Sets FatorTipoUC
        /// </summary>
        [DataMember(Name="fatorTipoUC", EmitDefaultValue=false)]
        public decimal? FatorTipoUC { get; set; }

        /// <summary>
        /// Gets or Sets ValorUnitario
        /// </summary>
        [DataMember(Name="valorUnitario", EmitDefaultValue=false)]
        public decimal? ValorUnitario { get; set; }

        /// <summary>
        /// Gets or Sets Cfop
        /// </summary>
        [DataMember(Name="cfop", EmitDefaultValue=false)]
        public string Cfop { get; set; }

        /// <summary>
        /// Gets or Sets NaturezaOperacao
        /// </summary>
        [DataMember(Name="naturezaOperacao", EmitDefaultValue=false)]
        public string NaturezaOperacao { get; set; }

        /// <summary>
        /// Gets or Sets ClasseProduto
        /// </summary>
        [DataMember(Name="classeProduto", EmitDefaultValue=false)]
        public string ClasseProduto { get; set; }

        /// <summary>
        /// Gets or Sets NfeInformacaoAdicional
        /// </summary>
        [DataMember(Name="nfeInformacaoAdicional", EmitDefaultValue=false)]
        public string NfeInformacaoAdicional { get; set; }

        /// <summary>
        /// Gets or Sets TipoLogistico
        /// </summary>
        [DataMember(Name="tipoLogistico", EmitDefaultValue=false)]
        public long? TipoLogistico { get; set; }

        /// <summary>
        /// Gets or Sets DadoLogistico
        /// </summary>
        [DataMember(Name="dadoLogistico", EmitDefaultValue=false)]
        public string DadoLogistico { get; set; }

        /// <summary>
        /// Gets or Sets SitTributariaOrigem
        /// </summary>
        [DataMember(Name="sitTributariaOrigem", EmitDefaultValue=false)]
        public SitTributariaOrigem SitTributariaOrigem { get; set; }

        /// <summary>
        /// Gets or Sets SituacaoTributaria
        /// </summary>
        [DataMember(Name="situacaoTributaria", EmitDefaultValue=false)]
        public SitTributariaIcms SituacaoTributaria { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcms
        /// </summary>
        [DataMember(Name="aliquotaIcms", EmitDefaultValue=false)]
        public decimal? AliquotaIcms { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcmsReducao
        /// </summary>
        [DataMember(Name="aliquotaIcmsReducao", EmitDefaultValue=false)]
        public decimal? AliquotaIcmsReducao { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIcmsSt
        /// </summary>
        [DataMember(Name="valorBaseIcmsSt", EmitDefaultValue=false)]
        public decimal? ValorBaseIcmsSt { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIcms
        /// </summary>
        [DataMember(Name="valorBaseIcms", EmitDefaultValue=false)]
        public decimal? ValorBaseIcms { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcmsSub
        /// </summary>
        [DataMember(Name="aliquotaIcmsSub", EmitDefaultValue=false)]
        public decimal? AliquotaIcmsSub { get; set; }

        /// <summary>
        /// Gets or Sets ValorIcmsSt
        /// </summary>
        [DataMember(Name="valorIcmsSt", EmitDefaultValue=false)]
        public decimal? ValorIcmsSt { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIcmsDestino
        /// </summary>
        [DataMember(Name="valorBaseIcmsDestino", EmitDefaultValue=false)]
        public decimal? ValorBaseIcmsDestino { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcmsUfDestino
        /// </summary>
        [DataMember(Name="aliquotaIcmsUfDestino", EmitDefaultValue=false)]
        public decimal? AliquotaIcmsUfDestino { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIcmsInter
        /// </summary>
        [DataMember(Name="aliquotaIcmsInter", EmitDefaultValue=false)]
        public decimal? AliquotaIcmsInter { get; set; }

        /// <summary>
        /// Gets or Sets PercentualIcmsPartilha
        /// </summary>
        [DataMember(Name="percentualIcmsPartilha", EmitDefaultValue=false)]
        public decimal? PercentualIcmsPartilha { get; set; }

        /// <summary>
        /// Gets or Sets ValorIcmsUfOrigem
        /// </summary>
        [DataMember(Name="valorIcmsUfOrigem", EmitDefaultValue=false)]
        public decimal? ValorIcmsUfOrigem { get; set; }

        /// <summary>
        /// Gets or Sets ValorIcmsUfDestino
        /// </summary>
        [DataMember(Name="valorIcmsUfDestino", EmitDefaultValue=false)]
        public decimal? ValorIcmsUfDestino { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseFecp
        /// </summary>
        [DataMember(Name="valorBaseFecp", EmitDefaultValue=false)]
        public decimal? ValorBaseFecp { get; set; }

        /// <summary>
        /// Gets or Sets SituacaoTributariaIpi
        /// </summary>
        [DataMember(Name="situacaoTributariaIpi", EmitDefaultValue=false)]
        public SituacaoTributariaIpi SituacaoTributariaIpi { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEnquadramentoIpi
        /// </summary>
        [DataMember(Name="codigoEnquadramentoIpi", EmitDefaultValue=false)]
        public CodigoEnquadramentoIpi CodigoEnquadramentoIpi { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIpi
        /// </summary>
        [DataMember(Name="aliquotaIpi", EmitDefaultValue=false)]
        public decimal? AliquotaIpi { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaIpiReducao
        /// </summary>
        [DataMember(Name="aliquotaIpiReducao", EmitDefaultValue=false)]
        public decimal? AliquotaIpiReducao { get; set; }

        /// <summary>
        /// Gets or Sets ValorDesconto
        /// </summary>
        [DataMember(Name="valorDesconto", EmitDefaultValue=false)]
        public decimal? ValorDesconto { get; set; }

        /// <summary>
        /// Gets or Sets ValorFrete
        /// </summary>
        [DataMember(Name="valorFrete", EmitDefaultValue=false)]
        public decimal? ValorFrete { get; set; }

        /// <summary>
        /// Gets or Sets ValorSeguro
        /// </summary>
        [DataMember(Name="valorSeguro", EmitDefaultValue=false)]
        public decimal? ValorSeguro { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIcms
        /// </summary>
        [DataMember(Name="fatorBaseIcms", EmitDefaultValue=false)]
        public decimal? FatorBaseIcms { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIcmsSt
        /// </summary>
        [DataMember(Name="fatorBaseIcmsSt", EmitDefaultValue=false)]
        public decimal? FatorBaseIcmsSt { get; set; }

        /// <summary>
        /// Gets or Sets FatorBaseIpi
        /// </summary>
        [DataMember(Name="fatorBaseIpi", EmitDefaultValue=false)]
        public decimal? FatorBaseIpi { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets DataHistorico
        /// </summary>
        [DataMember(Name="dataHistorico", EmitDefaultValue=false)]
        public DateTime? DataHistorico { get; set; }

        /// <summary>
        /// Gets or Sets PesoLiquido
        /// </summary>
        [DataMember(Name="pesoLiquido", EmitDefaultValue=false)]
        public decimal? PesoLiquido { get; set; }

        /// <summary>
        /// Gets or Sets PesoBruto
        /// </summary>
        [DataMember(Name="pesoBruto", EmitDefaultValue=false)]
        public decimal? PesoBruto { get; set; }

        /// <summary>
        /// Gets or Sets Largura
        /// </summary>
        [DataMember(Name="largura", EmitDefaultValue=false)]
        public decimal? Largura { get; set; }

        /// <summary>
        /// Gets or Sets Comprimento
        /// </summary>
        [DataMember(Name="comprimento", EmitDefaultValue=false)]
        public decimal? Comprimento { get; set; }

        /// <summary>
        /// Gets or Sets Altura
        /// </summary>
        [DataMember(Name="altura", EmitDefaultValue=false)]
        public decimal? Altura { get; set; }

        /// <summary>
        /// Gets or Sets ValorServico
        /// </summary>
        [DataMember(Name="valorServico", EmitDefaultValue=false)]
        public decimal? ValorServico { get; set; }

        /// <summary>
        /// Gets or Sets ValorAcrescimo
        /// </summary>
        [DataMember(Name="valorAcrescimo", EmitDefaultValue=false)]
        public decimal? ValorAcrescimo { get; set; }

        /// <summary>
        /// Gets or Sets ValorUnitarioFiscal
        /// </summary>
        [DataMember(Name="valorUnitarioFiscal", EmitDefaultValue=false)]
        public decimal? ValorUnitarioFiscal { get; set; }

        /// <summary>
        /// Gets or Sets Quantidadeorigem
        /// </summary>
        [DataMember(Name="quantidadeorigem", EmitDefaultValue=false)]
        public decimal? Quantidadeorigem { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional1
        /// </summary>
        [DataMember(Name="informacaoAdicional1", EmitDefaultValue=false)]
        public string InformacaoAdicional1 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional2
        /// </summary>
        [DataMember(Name="informacaoAdicional2", EmitDefaultValue=false)]
        public string InformacaoAdicional2 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional3
        /// </summary>
        [DataMember(Name="informacaoAdicional3", EmitDefaultValue=false)]
        public string InformacaoAdicional3 { get; set; }


        /// <summary>
        /// Gets or Sets NumeroFci
        /// </summary>
        [DataMember(Name="numeroFci", EmitDefaultValue=false)]
        public string NumeroFci { get; set; }

        /// <summary>
        /// Gets or Sets Observacao
        /// </summary>
        [DataMember(Name="observacao", EmitDefaultValue=false)]
        public string Observacao { get; set; }

        /// <summary>
        /// Gets or Sets CodigoNcm
        /// </summary>
        [DataMember(Name="codigoNcm", EmitDefaultValue=false)]
        public string CodigoNcm { get; set; }

        /// <summary>
        /// Gets or Sets AliquotaFecp
        /// </summary>
        [DataMember(Name="aliquotaFecp", EmitDefaultValue=false)]
        public decimal? AliquotaFecp { get; set; }

        /// <summary>
        /// Gets or Sets ValorFecp
        /// </summary>
        [DataMember(Name="valorFecp", EmitDefaultValue=false)]
        public decimal? ValorFecp { get; set; }

        /// <summary>
        /// Gets or Sets ItemPedidoCompra
        /// </summary>
        [DataMember(Name="itemPedidoCompra", EmitDefaultValue=false)]
        public long? ItemPedidoCompra { get; set; }

        /// <summary>
        /// Gets or Sets CodigoModBcSt
        /// </summary>
        [DataMember(Name="codigoModBcSt", EmitDefaultValue=false)]
        public long? CodigoModBcSt { get; set; }

        /// <summary>
        /// Gets or Sets Aliquotamva
        /// </summary>
        [DataMember(Name="aliquotamva", EmitDefaultValue=false)]
        public decimal? Aliquotamva { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoteEntrada {\n");
            sb.Append("  CodigoEstabelecimento: ").Append(CodigoEstabelecimento).Append("\n");
            sb.Append("  _LoteEntrada: ").Append(_LoteEntrada).Append("\n");
            sb.Append("  Estabelecimento: ").Append(Estabelecimento).Append("\n");
            sb.Append("  Empresa: ").Append(Empresa).Append("\n");
            sb.Append("  CodigoMatriz: ").Append(CodigoMatriz).Append("\n");
            sb.Append("  Matriz: ").Append(Matriz).Append("\n");
            sb.Append("  CodigoProduto: ").Append(CodigoProduto).Append("\n");
            sb.Append("  DescricaoProduto: ").Append(DescricaoProduto).Append("\n");
            sb.Append("  Produto: ").Append(Produto).Append("\n");
            sb.Append("  TipoUc: ").Append(TipoUc).Append("\n");
            sb.Append("  TipoUcCampo: ").Append(TipoUcCampo).Append("\n");
            sb.Append("  DocumentoEntrada: ").Append(DocumentoEntrada).Append("\n");
            sb.Append("  CodigoDocumento: ").Append(CodigoDocumento).Append("\n");
            sb.Append("  QuantidadeAtual: ").Append(QuantidadeAtual).Append("\n");
            sb.Append("  QuantidadeBloqueado: ").Append(QuantidadeBloqueado).Append("\n");
            sb.Append("  QuantidadeDocumento: ").Append(QuantidadeDocumento).Append("\n");
            sb.Append("  QuantidadeEmpenhado: ").Append(QuantidadeEmpenhado).Append("\n");
            sb.Append("  QuantidadeInicial: ").Append(QuantidadeInicial).Append("\n");
            sb.Append("  QuantidadeEntrada: ").Append(QuantidadeEntrada).Append("\n");
            sb.Append("  FatorTipoUC: ").Append(FatorTipoUC).Append("\n");
            sb.Append("  ValorUnitario: ").Append(ValorUnitario).Append("\n");
            sb.Append("  Cfop: ").Append(Cfop).Append("\n");
            sb.Append("  NaturezaOperacao: ").Append(NaturezaOperacao).Append("\n");
            sb.Append("  ClasseProduto: ").Append(ClasseProduto).Append("\n");
            sb.Append("  NfeInformacaoAdicional: ").Append(NfeInformacaoAdicional).Append("\n");
            sb.Append("  TipoLogistico: ").Append(TipoLogistico).Append("\n");
            sb.Append("  DadoLogistico: ").Append(DadoLogistico).Append("\n");
            sb.Append("  SitTributariaOrigem: ").Append(SitTributariaOrigem).Append("\n");
            sb.Append("  SituacaoTributaria: ").Append(SituacaoTributaria).Append("\n");
            sb.Append("  AliquotaIcms: ").Append(AliquotaIcms).Append("\n");
            sb.Append("  AliquotaIcmsReducao: ").Append(AliquotaIcmsReducao).Append("\n");
            sb.Append("  ValorBaseIcmsSt: ").Append(ValorBaseIcmsSt).Append("\n");
            sb.Append("  ValorBaseIcms: ").Append(ValorBaseIcms).Append("\n");
            sb.Append("  AliquotaIcmsSub: ").Append(AliquotaIcmsSub).Append("\n");
            sb.Append("  ValorIcmsSt: ").Append(ValorIcmsSt).Append("\n");
            sb.Append("  ValorBaseIcmsDestino: ").Append(ValorBaseIcmsDestino).Append("\n");
            sb.Append("  AliquotaIcmsUfDestino: ").Append(AliquotaIcmsUfDestino).Append("\n");
            sb.Append("  AliquotaIcmsInter: ").Append(AliquotaIcmsInter).Append("\n");
            sb.Append("  PercentualIcmsPartilha: ").Append(PercentualIcmsPartilha).Append("\n");
            sb.Append("  ValorIcmsUfOrigem: ").Append(ValorIcmsUfOrigem).Append("\n");
            sb.Append("  ValorIcmsUfDestino: ").Append(ValorIcmsUfDestino).Append("\n");
            sb.Append("  ValorBaseFecp: ").Append(ValorBaseFecp).Append("\n");
            sb.Append("  SituacaoTributariaIpi: ").Append(SituacaoTributariaIpi).Append("\n");
            sb.Append("  CodigoEnquadramentoIpi: ").Append(CodigoEnquadramentoIpi).Append("\n");
            sb.Append("  AliquotaIpi: ").Append(AliquotaIpi).Append("\n");
            sb.Append("  AliquotaIpiReducao: ").Append(AliquotaIpiReducao).Append("\n");
            sb.Append("  ValorDesconto: ").Append(ValorDesconto).Append("\n");
            sb.Append("  ValorFrete: ").Append(ValorFrete).Append("\n");
            sb.Append("  ValorSeguro: ").Append(ValorSeguro).Append("\n");
            sb.Append("  FatorBaseIcms: ").Append(FatorBaseIcms).Append("\n");
            sb.Append("  FatorBaseIcmsSt: ").Append(FatorBaseIcmsSt).Append("\n");
            sb.Append("  FatorBaseIpi: ").Append(FatorBaseIpi).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  DataHistorico: ").Append(DataHistorico).Append("\n");
            sb.Append("  PesoLiquido: ").Append(PesoLiquido).Append("\n");
            sb.Append("  PesoBruto: ").Append(PesoBruto).Append("\n");
            sb.Append("  Largura: ").Append(Largura).Append("\n");
            sb.Append("  Comprimento: ").Append(Comprimento).Append("\n");
            sb.Append("  Altura: ").Append(Altura).Append("\n");
            sb.Append("  ValorServico: ").Append(ValorServico).Append("\n");
            sb.Append("  ValorAcrescimo: ").Append(ValorAcrescimo).Append("\n");
            sb.Append("  ValorUnitarioFiscal: ").Append(ValorUnitarioFiscal).Append("\n");
            sb.Append("  Quantidadeorigem: ").Append(Quantidadeorigem).Append("\n");
            sb.Append("  InformacaoAdicional1: ").Append(InformacaoAdicional1).Append("\n");
            sb.Append("  InformacaoAdicional2: ").Append(InformacaoAdicional2).Append("\n");
            sb.Append("  InformacaoAdicional3: ").Append(InformacaoAdicional3).Append("\n");
            sb.Append("  EstadoLote: ").Append(EstadoLote).Append("\n");
            sb.Append("  NumeroFci: ").Append(NumeroFci).Append("\n");
            sb.Append("  Observacao: ").Append(Observacao).Append("\n");
            sb.Append("  CodigoNcm: ").Append(CodigoNcm).Append("\n");
            sb.Append("  AliquotaFecp: ").Append(AliquotaFecp).Append("\n");
            sb.Append("  ValorFecp: ").Append(ValorFecp).Append("\n");
            sb.Append("  ItemPedidoCompra: ").Append(ItemPedidoCompra).Append("\n");
            sb.Append("  CodigoModBcSt: ").Append(CodigoModBcSt).Append("\n");
            sb.Append("  Aliquotamva: ").Append(Aliquotamva).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoteEntrada);
        }

        /// <summary>
        /// Returns true if LoteEntrada instances are equal
        /// </summary>
        /// <param name="input">Instance of LoteEntrada to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoteEntrada input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoEstabelecimento == input.CodigoEstabelecimento ||
                    (this.CodigoEstabelecimento != null &&
                    this.CodigoEstabelecimento.Equals(input.CodigoEstabelecimento))
                ) && 
                (
                    this._LoteEntrada == input._LoteEntrada ||
                    (this._LoteEntrada != null &&
                    this._LoteEntrada.Equals(input._LoteEntrada))
                ) && 
                (
                    this.Estabelecimento == input.Estabelecimento ||
                    (this.Estabelecimento != null &&
                    this.Estabelecimento.Equals(input.Estabelecimento))
                ) && 
                (
                    this.Empresa == input.Empresa ||
                    (this.Empresa != null &&
                    this.Empresa.Equals(input.Empresa))
                ) && 
                (
                    this.CodigoMatriz == input.CodigoMatriz ||
                    (this.CodigoMatriz != null &&
                    this.CodigoMatriz.Equals(input.CodigoMatriz))
                ) && 
                (
                    this.Matriz == input.Matriz ||
                    (this.Matriz != null &&
                    this.Matriz.Equals(input.Matriz))
                ) && 
                (
                    this.CodigoProduto == input.CodigoProduto ||
                    (this.CodigoProduto != null &&
                    this.CodigoProduto.Equals(input.CodigoProduto))
                ) && 
                (
                    this.DescricaoProduto == input.DescricaoProduto ||
                    (this.DescricaoProduto != null &&
                    this.DescricaoProduto.Equals(input.DescricaoProduto))
                ) && 
                (
                    this.Produto == input.Produto ||
                    (this.Produto != null &&
                    this.Produto.Equals(input.Produto))
                ) && 
                (
                    this.TipoUc == input.TipoUc ||
                    (this.TipoUc != null &&
                    this.TipoUc.Equals(input.TipoUc))
                ) && 
                (
                    this.TipoUcCampo == input.TipoUcCampo ||
                    (this.TipoUcCampo != null &&
                    this.TipoUcCampo.Equals(input.TipoUcCampo))
                ) && 
                (
                    this.DocumentoEntrada == input.DocumentoEntrada ||
                    (this.DocumentoEntrada != null &&
                    this.DocumentoEntrada.Equals(input.DocumentoEntrada))
                ) && 
                (
                    this.CodigoDocumento == input.CodigoDocumento ||
                    (this.CodigoDocumento != null &&
                    this.CodigoDocumento.Equals(input.CodigoDocumento))
                ) && 
                (
                    this.QuantidadeAtual == input.QuantidadeAtual ||
                    (this.QuantidadeAtual != null &&
                    this.QuantidadeAtual.Equals(input.QuantidadeAtual))
                ) && 
                (
                    this.QuantidadeBloqueado == input.QuantidadeBloqueado ||
                    (this.QuantidadeBloqueado != null &&
                    this.QuantidadeBloqueado.Equals(input.QuantidadeBloqueado))
                ) && 
                (
                    this.QuantidadeDocumento == input.QuantidadeDocumento ||
                    (this.QuantidadeDocumento != null &&
                    this.QuantidadeDocumento.Equals(input.QuantidadeDocumento))
                ) && 
                (
                    this.QuantidadeEmpenhado == input.QuantidadeEmpenhado ||
                    (this.QuantidadeEmpenhado != null &&
                    this.QuantidadeEmpenhado.Equals(input.QuantidadeEmpenhado))
                ) && 
                (
                    this.QuantidadeInicial == input.QuantidadeInicial ||
                    (this.QuantidadeInicial != null &&
                    this.QuantidadeInicial.Equals(input.QuantidadeInicial))
                ) && 
                (
                    this.QuantidadeEntrada == input.QuantidadeEntrada ||
                    (this.QuantidadeEntrada != null &&
                    this.QuantidadeEntrada.Equals(input.QuantidadeEntrada))
                ) && 
                (
                    this.FatorTipoUC == input.FatorTipoUC ||
                    (this.FatorTipoUC != null &&
                    this.FatorTipoUC.Equals(input.FatorTipoUC))
                ) && 
                (
                    this.ValorUnitario == input.ValorUnitario ||
                    (this.ValorUnitario != null &&
                    this.ValorUnitario.Equals(input.ValorUnitario))
                ) && 
                (
                    this.Cfop == input.Cfop ||
                    (this.Cfop != null &&
                    this.Cfop.Equals(input.Cfop))
                ) && 
                (
                    this.NaturezaOperacao == input.NaturezaOperacao ||
                    (this.NaturezaOperacao != null &&
                    this.NaturezaOperacao.Equals(input.NaturezaOperacao))
                ) && 
                (
                    this.ClasseProduto == input.ClasseProduto ||
                    (this.ClasseProduto != null &&
                    this.ClasseProduto.Equals(input.ClasseProduto))
                ) && 
                (
                    this.NfeInformacaoAdicional == input.NfeInformacaoAdicional ||
                    (this.NfeInformacaoAdicional != null &&
                    this.NfeInformacaoAdicional.Equals(input.NfeInformacaoAdicional))
                ) && 
                (
                    this.TipoLogistico == input.TipoLogistico ||
                    (this.TipoLogistico != null &&
                    this.TipoLogistico.Equals(input.TipoLogistico))
                ) && 
                (
                    this.DadoLogistico == input.DadoLogistico ||
                    (this.DadoLogistico != null &&
                    this.DadoLogistico.Equals(input.DadoLogistico))
                ) && 
                (
                    this.SitTributariaOrigem == input.SitTributariaOrigem ||
                    (this.SitTributariaOrigem != null &&
                    this.SitTributariaOrigem.Equals(input.SitTributariaOrigem))
                ) && 
                (
                    this.SituacaoTributaria == input.SituacaoTributaria ||
                    (this.SituacaoTributaria != null &&
                    this.SituacaoTributaria.Equals(input.SituacaoTributaria))
                ) && 
                (
                    this.AliquotaIcms == input.AliquotaIcms ||
                    (this.AliquotaIcms != null &&
                    this.AliquotaIcms.Equals(input.AliquotaIcms))
                ) && 
                (
                    this.AliquotaIcmsReducao == input.AliquotaIcmsReducao ||
                    (this.AliquotaIcmsReducao != null &&
                    this.AliquotaIcmsReducao.Equals(input.AliquotaIcmsReducao))
                ) && 
                (
                    this.ValorBaseIcmsSt == input.ValorBaseIcmsSt ||
                    (this.ValorBaseIcmsSt != null &&
                    this.ValorBaseIcmsSt.Equals(input.ValorBaseIcmsSt))
                ) && 
                (
                    this.ValorBaseIcms == input.ValorBaseIcms ||
                    (this.ValorBaseIcms != null &&
                    this.ValorBaseIcms.Equals(input.ValorBaseIcms))
                ) && 
                (
                    this.AliquotaIcmsSub == input.AliquotaIcmsSub ||
                    (this.AliquotaIcmsSub != null &&
                    this.AliquotaIcmsSub.Equals(input.AliquotaIcmsSub))
                ) && 
                (
                    this.ValorIcmsSt == input.ValorIcmsSt ||
                    (this.ValorIcmsSt != null &&
                    this.ValorIcmsSt.Equals(input.ValorIcmsSt))
                ) && 
                (
                    this.ValorBaseIcmsDestino == input.ValorBaseIcmsDestino ||
                    (this.ValorBaseIcmsDestino != null &&
                    this.ValorBaseIcmsDestino.Equals(input.ValorBaseIcmsDestino))
                ) && 
                (
                    this.AliquotaIcmsUfDestino == input.AliquotaIcmsUfDestino ||
                    (this.AliquotaIcmsUfDestino != null &&
                    this.AliquotaIcmsUfDestino.Equals(input.AliquotaIcmsUfDestino))
                ) && 
                (
                    this.AliquotaIcmsInter == input.AliquotaIcmsInter ||
                    (this.AliquotaIcmsInter != null &&
                    this.AliquotaIcmsInter.Equals(input.AliquotaIcmsInter))
                ) && 
                (
                    this.PercentualIcmsPartilha == input.PercentualIcmsPartilha ||
                    (this.PercentualIcmsPartilha != null &&
                    this.PercentualIcmsPartilha.Equals(input.PercentualIcmsPartilha))
                ) && 
                (
                    this.ValorIcmsUfOrigem == input.ValorIcmsUfOrigem ||
                    (this.ValorIcmsUfOrigem != null &&
                    this.ValorIcmsUfOrigem.Equals(input.ValorIcmsUfOrigem))
                ) && 
                (
                    this.ValorIcmsUfDestino == input.ValorIcmsUfDestino ||
                    (this.ValorIcmsUfDestino != null &&
                    this.ValorIcmsUfDestino.Equals(input.ValorIcmsUfDestino))
                ) && 
                (
                    this.ValorBaseFecp == input.ValorBaseFecp ||
                    (this.ValorBaseFecp != null &&
                    this.ValorBaseFecp.Equals(input.ValorBaseFecp))
                ) && 
                (
                    this.SituacaoTributariaIpi == input.SituacaoTributariaIpi ||
                    (this.SituacaoTributariaIpi != null &&
                    this.SituacaoTributariaIpi.Equals(input.SituacaoTributariaIpi))
                ) && 
                (
                    this.CodigoEnquadramentoIpi == input.CodigoEnquadramentoIpi ||
                    (this.CodigoEnquadramentoIpi != null &&
                    this.CodigoEnquadramentoIpi.Equals(input.CodigoEnquadramentoIpi))
                ) && 
                (
                    this.AliquotaIpi == input.AliquotaIpi ||
                    (this.AliquotaIpi != null &&
                    this.AliquotaIpi.Equals(input.AliquotaIpi))
                ) && 
                (
                    this.AliquotaIpiReducao == input.AliquotaIpiReducao ||
                    (this.AliquotaIpiReducao != null &&
                    this.AliquotaIpiReducao.Equals(input.AliquotaIpiReducao))
                ) && 
                (
                    this.ValorDesconto == input.ValorDesconto ||
                    (this.ValorDesconto != null &&
                    this.ValorDesconto.Equals(input.ValorDesconto))
                ) && 
                (
                    this.ValorFrete == input.ValorFrete ||
                    (this.ValorFrete != null &&
                    this.ValorFrete.Equals(input.ValorFrete))
                ) && 
                (
                    this.ValorSeguro == input.ValorSeguro ||
                    (this.ValorSeguro != null &&
                    this.ValorSeguro.Equals(input.ValorSeguro))
                ) && 
                (
                    this.FatorBaseIcms == input.FatorBaseIcms ||
                    (this.FatorBaseIcms != null &&
                    this.FatorBaseIcms.Equals(input.FatorBaseIcms))
                ) && 
                (
                    this.FatorBaseIcmsSt == input.FatorBaseIcmsSt ||
                    (this.FatorBaseIcmsSt != null &&
                    this.FatorBaseIcmsSt.Equals(input.FatorBaseIcmsSt))
                ) && 
                (
                    this.FatorBaseIpi == input.FatorBaseIpi ||
                    (this.FatorBaseIpi != null &&
                    this.FatorBaseIpi.Equals(input.FatorBaseIpi))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.DataHistorico == input.DataHistorico ||
                    (this.DataHistorico != null &&
                    this.DataHistorico.Equals(input.DataHistorico))
                ) && 
                (
                    this.PesoLiquido == input.PesoLiquido ||
                    (this.PesoLiquido != null &&
                    this.PesoLiquido.Equals(input.PesoLiquido))
                ) && 
                (
                    this.PesoBruto == input.PesoBruto ||
                    (this.PesoBruto != null &&
                    this.PesoBruto.Equals(input.PesoBruto))
                ) && 
                (
                    this.Largura == input.Largura ||
                    (this.Largura != null &&
                    this.Largura.Equals(input.Largura))
                ) && 
                (
                    this.Comprimento == input.Comprimento ||
                    (this.Comprimento != null &&
                    this.Comprimento.Equals(input.Comprimento))
                ) && 
                (
                    this.Altura == input.Altura ||
                    (this.Altura != null &&
                    this.Altura.Equals(input.Altura))
                ) && 
                (
                    this.ValorServico == input.ValorServico ||
                    (this.ValorServico != null &&
                    this.ValorServico.Equals(input.ValorServico))
                ) && 
                (
                    this.ValorAcrescimo == input.ValorAcrescimo ||
                    (this.ValorAcrescimo != null &&
                    this.ValorAcrescimo.Equals(input.ValorAcrescimo))
                ) && 
                (
                    this.ValorUnitarioFiscal == input.ValorUnitarioFiscal ||
                    (this.ValorUnitarioFiscal != null &&
                    this.ValorUnitarioFiscal.Equals(input.ValorUnitarioFiscal))
                ) && 
                (
                    this.Quantidadeorigem == input.Quantidadeorigem ||
                    (this.Quantidadeorigem != null &&
                    this.Quantidadeorigem.Equals(input.Quantidadeorigem))
                ) && 
                (
                    this.InformacaoAdicional1 == input.InformacaoAdicional1 ||
                    (this.InformacaoAdicional1 != null &&
                    this.InformacaoAdicional1.Equals(input.InformacaoAdicional1))
                ) && 
                (
                    this.InformacaoAdicional2 == input.InformacaoAdicional2 ||
                    (this.InformacaoAdicional2 != null &&
                    this.InformacaoAdicional2.Equals(input.InformacaoAdicional2))
                ) && 
                (
                    this.InformacaoAdicional3 == input.InformacaoAdicional3 ||
                    (this.InformacaoAdicional3 != null &&
                    this.InformacaoAdicional3.Equals(input.InformacaoAdicional3))
                ) && 
                (
                    this.EstadoLote == input.EstadoLote ||
                    (this.EstadoLote != null &&
                    this.EstadoLote.Equals(input.EstadoLote))
                ) && 
                (
                    this.NumeroFci == input.NumeroFci ||
                    (this.NumeroFci != null &&
                    this.NumeroFci.Equals(input.NumeroFci))
                ) && 
                (
                    this.Observacao == input.Observacao ||
                    (this.Observacao != null &&
                    this.Observacao.Equals(input.Observacao))
                ) && 
                (
                    this.CodigoNcm == input.CodigoNcm ||
                    (this.CodigoNcm != null &&
                    this.CodigoNcm.Equals(input.CodigoNcm))
                ) && 
                (
                    this.AliquotaFecp == input.AliquotaFecp ||
                    (this.AliquotaFecp != null &&
                    this.AliquotaFecp.Equals(input.AliquotaFecp))
                ) && 
                (
                    this.ValorFecp == input.ValorFecp ||
                    (this.ValorFecp != null &&
                    this.ValorFecp.Equals(input.ValorFecp))
                ) && 
                (
                    this.ItemPedidoCompra == input.ItemPedidoCompra ||
                    (this.ItemPedidoCompra != null &&
                    this.ItemPedidoCompra.Equals(input.ItemPedidoCompra))
                ) && 
                (
                    this.CodigoModBcSt == input.CodigoModBcSt ||
                    (this.CodigoModBcSt != null &&
                    this.CodigoModBcSt.Equals(input.CodigoModBcSt))
                ) && 
                (
                    this.Aliquotamva == input.Aliquotamva ||
                    (this.Aliquotamva != null &&
                    this.Aliquotamva.Equals(input.Aliquotamva))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoEstabelecimento != null)
                    hashCode = hashCode * 59 + this.CodigoEstabelecimento.GetHashCode();
                if (this._LoteEntrada != null)
                    hashCode = hashCode * 59 + this._LoteEntrada.GetHashCode();
                if (this.Estabelecimento != null)
                    hashCode = hashCode * 59 + this.Estabelecimento.GetHashCode();
                if (this.Empresa != null)
                    hashCode = hashCode * 59 + this.Empresa.GetHashCode();
                if (this.CodigoMatriz != null)
                    hashCode = hashCode * 59 + this.CodigoMatriz.GetHashCode();
                if (this.Matriz != null)
                    hashCode = hashCode * 59 + this.Matriz.GetHashCode();
                if (this.CodigoProduto != null)
                    hashCode = hashCode * 59 + this.CodigoProduto.GetHashCode();
                if (this.DescricaoProduto != null)
                    hashCode = hashCode * 59 + this.DescricaoProduto.GetHashCode();
                if (this.Produto != null)
                    hashCode = hashCode * 59 + this.Produto.GetHashCode();
                if (this.TipoUc != null)
                    hashCode = hashCode * 59 + this.TipoUc.GetHashCode();
                if (this.TipoUcCampo != null)
                    hashCode = hashCode * 59 + this.TipoUcCampo.GetHashCode();
                if (this.DocumentoEntrada != null)
                    hashCode = hashCode * 59 + this.DocumentoEntrada.GetHashCode();
                if (this.CodigoDocumento != null)
                    hashCode = hashCode * 59 + this.CodigoDocumento.GetHashCode();
                if (this.QuantidadeAtual != null)
                    hashCode = hashCode * 59 + this.QuantidadeAtual.GetHashCode();
                if (this.QuantidadeBloqueado != null)
                    hashCode = hashCode * 59 + this.QuantidadeBloqueado.GetHashCode();
                if (this.QuantidadeDocumento != null)
                    hashCode = hashCode * 59 + this.QuantidadeDocumento.GetHashCode();
                if (this.QuantidadeEmpenhado != null)
                    hashCode = hashCode * 59 + this.QuantidadeEmpenhado.GetHashCode();
                if (this.QuantidadeInicial != null)
                    hashCode = hashCode * 59 + this.QuantidadeInicial.GetHashCode();
                if (this.QuantidadeEntrada != null)
                    hashCode = hashCode * 59 + this.QuantidadeEntrada.GetHashCode();
                if (this.FatorTipoUC != null)
                    hashCode = hashCode * 59 + this.FatorTipoUC.GetHashCode();
                if (this.ValorUnitario != null)
                    hashCode = hashCode * 59 + this.ValorUnitario.GetHashCode();
                if (this.Cfop != null)
                    hashCode = hashCode * 59 + this.Cfop.GetHashCode();
                if (this.NaturezaOperacao != null)
                    hashCode = hashCode * 59 + this.NaturezaOperacao.GetHashCode();
                if (this.ClasseProduto != null)
                    hashCode = hashCode * 59 + this.ClasseProduto.GetHashCode();
                if (this.NfeInformacaoAdicional != null)
                    hashCode = hashCode * 59 + this.NfeInformacaoAdicional.GetHashCode();
                if (this.TipoLogistico != null)
                    hashCode = hashCode * 59 + this.TipoLogistico.GetHashCode();
                if (this.DadoLogistico != null)
                    hashCode = hashCode * 59 + this.DadoLogistico.GetHashCode();
                if (this.SitTributariaOrigem != null)
                    hashCode = hashCode * 59 + this.SitTributariaOrigem.GetHashCode();
                if (this.SituacaoTributaria != null)
                    hashCode = hashCode * 59 + this.SituacaoTributaria.GetHashCode();
                if (this.AliquotaIcms != null)
                    hashCode = hashCode * 59 + this.AliquotaIcms.GetHashCode();
                if (this.AliquotaIcmsReducao != null)
                    hashCode = hashCode * 59 + this.AliquotaIcmsReducao.GetHashCode();
                if (this.ValorBaseIcmsSt != null)
                    hashCode = hashCode * 59 + this.ValorBaseIcmsSt.GetHashCode();
                if (this.ValorBaseIcms != null)
                    hashCode = hashCode * 59 + this.ValorBaseIcms.GetHashCode();
                if (this.AliquotaIcmsSub != null)
                    hashCode = hashCode * 59 + this.AliquotaIcmsSub.GetHashCode();
                if (this.ValorIcmsSt != null)
                    hashCode = hashCode * 59 + this.ValorIcmsSt.GetHashCode();
                if (this.ValorBaseIcmsDestino != null)
                    hashCode = hashCode * 59 + this.ValorBaseIcmsDestino.GetHashCode();
                if (this.AliquotaIcmsUfDestino != null)
                    hashCode = hashCode * 59 + this.AliquotaIcmsUfDestino.GetHashCode();
                if (this.AliquotaIcmsInter != null)
                    hashCode = hashCode * 59 + this.AliquotaIcmsInter.GetHashCode();
                if (this.PercentualIcmsPartilha != null)
                    hashCode = hashCode * 59 + this.PercentualIcmsPartilha.GetHashCode();
                if (this.ValorIcmsUfOrigem != null)
                    hashCode = hashCode * 59 + this.ValorIcmsUfOrigem.GetHashCode();
                if (this.ValorIcmsUfDestino != null)
                    hashCode = hashCode * 59 + this.ValorIcmsUfDestino.GetHashCode();
                if (this.ValorBaseFecp != null)
                    hashCode = hashCode * 59 + this.ValorBaseFecp.GetHashCode();
                if (this.SituacaoTributariaIpi != null)
                    hashCode = hashCode * 59 + this.SituacaoTributariaIpi.GetHashCode();
                if (this.CodigoEnquadramentoIpi != null)
                    hashCode = hashCode * 59 + this.CodigoEnquadramentoIpi.GetHashCode();
                if (this.AliquotaIpi != null)
                    hashCode = hashCode * 59 + this.AliquotaIpi.GetHashCode();
                if (this.AliquotaIpiReducao != null)
                    hashCode = hashCode * 59 + this.AliquotaIpiReducao.GetHashCode();
                if (this.ValorDesconto != null)
                    hashCode = hashCode * 59 + this.ValorDesconto.GetHashCode();
                if (this.ValorFrete != null)
                    hashCode = hashCode * 59 + this.ValorFrete.GetHashCode();
                if (this.ValorSeguro != null)
                    hashCode = hashCode * 59 + this.ValorSeguro.GetHashCode();
                if (this.FatorBaseIcms != null)
                    hashCode = hashCode * 59 + this.FatorBaseIcms.GetHashCode();
                if (this.FatorBaseIcmsSt != null)
                    hashCode = hashCode * 59 + this.FatorBaseIcmsSt.GetHashCode();
                if (this.FatorBaseIpi != null)
                    hashCode = hashCode * 59 + this.FatorBaseIpi.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.DataHistorico != null)
                    hashCode = hashCode * 59 + this.DataHistorico.GetHashCode();
                if (this.PesoLiquido != null)
                    hashCode = hashCode * 59 + this.PesoLiquido.GetHashCode();
                if (this.PesoBruto != null)
                    hashCode = hashCode * 59 + this.PesoBruto.GetHashCode();
                if (this.Largura != null)
                    hashCode = hashCode * 59 + this.Largura.GetHashCode();
                if (this.Comprimento != null)
                    hashCode = hashCode * 59 + this.Comprimento.GetHashCode();
                if (this.Altura != null)
                    hashCode = hashCode * 59 + this.Altura.GetHashCode();
                if (this.ValorServico != null)
                    hashCode = hashCode * 59 + this.ValorServico.GetHashCode();
                if (this.ValorAcrescimo != null)
                    hashCode = hashCode * 59 + this.ValorAcrescimo.GetHashCode();
                if (this.ValorUnitarioFiscal != null)
                    hashCode = hashCode * 59 + this.ValorUnitarioFiscal.GetHashCode();
                if (this.Quantidadeorigem != null)
                    hashCode = hashCode * 59 + this.Quantidadeorigem.GetHashCode();
                if (this.InformacaoAdicional1 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional1.GetHashCode();
                if (this.InformacaoAdicional2 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional2.GetHashCode();
                if (this.InformacaoAdicional3 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional3.GetHashCode();
                if (this.EstadoLote != null)
                    hashCode = hashCode * 59 + this.EstadoLote.GetHashCode();
                if (this.NumeroFci != null)
                    hashCode = hashCode * 59 + this.NumeroFci.GetHashCode();
                if (this.Observacao != null)
                    hashCode = hashCode * 59 + this.Observacao.GetHashCode();
                if (this.CodigoNcm != null)
                    hashCode = hashCode * 59 + this.CodigoNcm.GetHashCode();
                if (this.AliquotaFecp != null)
                    hashCode = hashCode * 59 + this.AliquotaFecp.GetHashCode();
                if (this.ValorFecp != null)
                    hashCode = hashCode * 59 + this.ValorFecp.GetHashCode();
                if (this.ItemPedidoCompra != null)
                    hashCode = hashCode * 59 + this.ItemPedidoCompra.GetHashCode();
                if (this.CodigoModBcSt != null)
                    hashCode = hashCode * 59 + this.CodigoModBcSt.GetHashCode();
                if (this.Aliquotamva != null)
                    hashCode = hashCode * 59 + this.Aliquotamva.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // QuantidadeAtual (decimal?) minimum
            if(this.QuantidadeAtual < (decimal?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for QuantidadeAtual, must be a value greater than or equal to 0.", new [] { "QuantidadeAtual" });
            }

            // QuantidadeBloqueado (decimal?) minimum
            if(this.QuantidadeBloqueado < (decimal?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for QuantidadeBloqueado, must be a value greater than or equal to 0.", new [] { "QuantidadeBloqueado" });
            }

            // QuantidadeDocumento (decimal?) minimum
            if(this.QuantidadeDocumento < (decimal?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for QuantidadeDocumento, must be a value greater than or equal to 0.", new [] { "QuantidadeDocumento" });
            }

            // QuantidadeEmpenhado (decimal?) minimum
            if(this.QuantidadeEmpenhado < (decimal?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for QuantidadeEmpenhado, must be a value greater than or equal to 0.", new [] { "QuantidadeEmpenhado" });
            }

            // QuantidadeInicial (decimal?) minimum
            if(this.QuantidadeInicial < (decimal?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for QuantidadeInicial, must be a value greater than or equal to 0.", new [] { "QuantidadeInicial" });
            }

            // QuantidadeEntrada (decimal?) minimum
            if(this.QuantidadeEntrada < (decimal?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for QuantidadeEntrada, must be a value greater than or equal to 0.", new [] { "QuantidadeEntrada" });
            }

            yield break;
        }
    }

}
