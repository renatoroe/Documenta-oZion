/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Grupo
    /// </summary>
    [DataContract]
    public partial class Grupo :  IEquatable<Grupo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Grupo" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Grupo() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Grupo" /> class.
        /// </summary>
        /// <param name="empresa">empresa (required).</param>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="codigoGrupo">codigoGrupo.</param>
        /// <param name="descricaoGrupo">descricaoGrupo.</param>
        public Grupo(Empresa empresa = default(Empresa), string codigoEmpresa = default(string), string codigoGrupo = default(string), string descricaoGrupo = default(string))
        {
            // to ensure "empresa" is required (not null)
            if (empresa == null)
            {
                throw new InvalidDataException("empresa is a required property for Grupo and cannot be null");
            }
            else
            {
                this.Empresa = empresa;
            }
            this.CodigoEmpresa = codigoEmpresa;
            this.CodigoGrupo = codigoGrupo;
            this.DescricaoGrupo = descricaoGrupo;
        }
        
        /// <summary>
        /// Gets or Sets Empresa
        /// </summary>
        [DataMember(Name="empresa", EmitDefaultValue=false)]
        public Empresa Empresa { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets CodigoGrupo
        /// </summary>
        [DataMember(Name="codigoGrupo", EmitDefaultValue=false)]
        public string CodigoGrupo { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoGrupo
        /// </summary>
        [DataMember(Name="descricaoGrupo", EmitDefaultValue=false)]
        public string DescricaoGrupo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Grupo {\n");
            sb.Append("  Empresa: ").Append(Empresa).Append("\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  CodigoGrupo: ").Append(CodigoGrupo).Append("\n");
            sb.Append("  DescricaoGrupo: ").Append(DescricaoGrupo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Grupo);
        }

        /// <summary>
        /// Returns true if Grupo instances are equal
        /// </summary>
        /// <param name="input">Instance of Grupo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Grupo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Empresa == input.Empresa ||
                    (this.Empresa != null &&
                    this.Empresa.Equals(input.Empresa))
                ) && 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.CodigoGrupo == input.CodigoGrupo ||
                    (this.CodigoGrupo != null &&
                    this.CodigoGrupo.Equals(input.CodigoGrupo))
                ) && 
                (
                    this.DescricaoGrupo == input.DescricaoGrupo ||
                    (this.DescricaoGrupo != null &&
                    this.DescricaoGrupo.Equals(input.DescricaoGrupo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Empresa != null)
                    hashCode = hashCode * 59 + this.Empresa.GetHashCode();
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.CodigoGrupo != null)
                    hashCode = hashCode * 59 + this.CodigoGrupo.GetHashCode();
                if (this.DescricaoGrupo != null)
                    hashCode = hashCode * 59 + this.DescricaoGrupo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
