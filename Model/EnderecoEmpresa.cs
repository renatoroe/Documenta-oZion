/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EnderecoEmpresa
    /// </summary>
    [DataContract]
    public partial class EnderecoEmpresa :  IEquatable<EnderecoEmpresa>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EnderecoEmpresa" /> class.
        /// </summary>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="idEnderecoEmpresa">idEnderecoEmpresa.</param>
        /// <param name="empresa">empresa.</param>
        /// <param name="enderecoEmpresa">enderecoEmpresa.</param>
        /// <param name="complementoEndereco">complementoEndereco.</param>
        /// <param name="bairroEmpresa">bairroEmpresa.</param>
        /// <param name="municipioEmpresa">municipioEmpresa.</param>
        /// <param name="cepEmpresa">cepEmpresa.</param>
        /// <param name="ufEmpresa">ufEmpresa.</param>
        /// <param name="paisEmpresa">paisEmpresa.</param>
        /// <param name="dataHistorico">dataHistorico.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="cgcCpfEmpresa">cgcCpfEmpresa.</param>
        /// <param name="ieRgEmpresa">ieRgEmpresa.</param>
        /// <param name="codigoLocalidade">codigoLocalidade.</param>
        /// <param name="localidade">localidade.</param>
        /// <param name="numeroEndereco">numeroEndereco.</param>
        public EnderecoEmpresa(string codigoEmpresa = default(string), long? idEnderecoEmpresa = default(long?), Empresa empresa = default(Empresa), string enderecoEmpresa = default(string), string complementoEndereco = default(string), string bairroEmpresa = default(string), string municipioEmpresa = default(string), string cepEmpresa = default(string), string ufEmpresa = default(string), string paisEmpresa = default(string), DateTime? dataHistorico = default(DateTime?), string usuario = default(string), string cgcCpfEmpresa = default(string), string ieRgEmpresa = default(string), string codigoLocalidade = default(string), Localidade localidade = default(Localidade), string numeroEndereco = default(string))
        {
            this.CodigoEmpresa = codigoEmpresa;
            this.IdEnderecoEmpresa = idEnderecoEmpresa;
            this.Empresa = empresa;
            this._EnderecoEmpresa = enderecoEmpresa;
            this.ComplementoEndereco = complementoEndereco;
            this.BairroEmpresa = bairroEmpresa;
            this.MunicipioEmpresa = municipioEmpresa;
            this.CepEmpresa = cepEmpresa;
            this.UfEmpresa = ufEmpresa;
            this.PaisEmpresa = paisEmpresa;
            this.DataHistorico = dataHistorico;
            this.Usuario = usuario;
            this.CgcCpfEmpresa = cgcCpfEmpresa;
            this.IeRgEmpresa = ieRgEmpresa;
            this.CodigoLocalidade = codigoLocalidade;
            this.Localidade = localidade;
            this.NumeroEndereco = numeroEndereco;
        }
        
        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets IdEnderecoEmpresa
        /// </summary>
        [DataMember(Name="idEnderecoEmpresa", EmitDefaultValue=false)]
        public long? IdEnderecoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets Empresa
        /// </summary>
        [DataMember(Name="empresa", EmitDefaultValue=false)]
        public Empresa Empresa { get; set; }

        /// <summary>
        /// Gets or Sets _EnderecoEmpresa
        /// </summary>
        [DataMember(Name="enderecoEmpresa", EmitDefaultValue=false)]
        public string _EnderecoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets ComplementoEndereco
        /// </summary>
        [DataMember(Name="complementoEndereco", EmitDefaultValue=false)]
        public string ComplementoEndereco { get; set; }

        /// <summary>
        /// Gets or Sets BairroEmpresa
        /// </summary>
        [DataMember(Name="bairroEmpresa", EmitDefaultValue=false)]
        public string BairroEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets MunicipioEmpresa
        /// </summary>
        [DataMember(Name="municipioEmpresa", EmitDefaultValue=false)]
        public string MunicipioEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets CepEmpresa
        /// </summary>
        [DataMember(Name="cepEmpresa", EmitDefaultValue=false)]
        public string CepEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets UfEmpresa
        /// </summary>
        [DataMember(Name="ufEmpresa", EmitDefaultValue=false)]
        public string UfEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets PaisEmpresa
        /// </summary>
        [DataMember(Name="paisEmpresa", EmitDefaultValue=false)]
        public string PaisEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets DataHistorico
        /// </summary>
        [DataMember(Name="dataHistorico", EmitDefaultValue=false)]
        public DateTime? DataHistorico { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets CgcCpfEmpresa
        /// </summary>
        [DataMember(Name="cgcCpfEmpresa", EmitDefaultValue=false)]
        public string CgcCpfEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets IeRgEmpresa
        /// </summary>
        [DataMember(Name="ieRgEmpresa", EmitDefaultValue=false)]
        public string IeRgEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets CodigoLocalidade
        /// </summary>
        [DataMember(Name="codigoLocalidade", EmitDefaultValue=false)]
        public string CodigoLocalidade { get; set; }

        /// <summary>
        /// Gets or Sets Localidade
        /// </summary>
        [DataMember(Name="localidade", EmitDefaultValue=false)]
        public Localidade Localidade { get; set; }

        /// <summary>
        /// Gets or Sets NumeroEndereco
        /// </summary>
        [DataMember(Name="numeroEndereco", EmitDefaultValue=false)]
        public string NumeroEndereco { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EnderecoEmpresa {\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  IdEnderecoEmpresa: ").Append(IdEnderecoEmpresa).Append("\n");
            sb.Append("  Empresa: ").Append(Empresa).Append("\n");
            sb.Append("  _EnderecoEmpresa: ").Append(_EnderecoEmpresa).Append("\n");
            sb.Append("  ComplementoEndereco: ").Append(ComplementoEndereco).Append("\n");
            sb.Append("  BairroEmpresa: ").Append(BairroEmpresa).Append("\n");
            sb.Append("  MunicipioEmpresa: ").Append(MunicipioEmpresa).Append("\n");
            sb.Append("  CepEmpresa: ").Append(CepEmpresa).Append("\n");
            sb.Append("  UfEmpresa: ").Append(UfEmpresa).Append("\n");
            sb.Append("  PaisEmpresa: ").Append(PaisEmpresa).Append("\n");
            sb.Append("  DataHistorico: ").Append(DataHistorico).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  CgcCpfEmpresa: ").Append(CgcCpfEmpresa).Append("\n");
            sb.Append("  IeRgEmpresa: ").Append(IeRgEmpresa).Append("\n");
            sb.Append("  CodigoLocalidade: ").Append(CodigoLocalidade).Append("\n");
            sb.Append("  Localidade: ").Append(Localidade).Append("\n");
            sb.Append("  NumeroEndereco: ").Append(NumeroEndereco).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EnderecoEmpresa);
        }

        /// <summary>
        /// Returns true if EnderecoEmpresa instances are equal
        /// </summary>
        /// <param name="input">Instance of EnderecoEmpresa to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EnderecoEmpresa input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.IdEnderecoEmpresa == input.IdEnderecoEmpresa ||
                    (this.IdEnderecoEmpresa != null &&
                    this.IdEnderecoEmpresa.Equals(input.IdEnderecoEmpresa))
                ) && 
                (
                    this.Empresa == input.Empresa ||
                    (this.Empresa != null &&
                    this.Empresa.Equals(input.Empresa))
                ) && 
                (
                    this._EnderecoEmpresa == input._EnderecoEmpresa ||
                    (this._EnderecoEmpresa != null &&
                    this._EnderecoEmpresa.Equals(input._EnderecoEmpresa))
                ) && 
                (
                    this.ComplementoEndereco == input.ComplementoEndereco ||
                    (this.ComplementoEndereco != null &&
                    this.ComplementoEndereco.Equals(input.ComplementoEndereco))
                ) && 
                (
                    this.BairroEmpresa == input.BairroEmpresa ||
                    (this.BairroEmpresa != null &&
                    this.BairroEmpresa.Equals(input.BairroEmpresa))
                ) && 
                (
                    this.MunicipioEmpresa == input.MunicipioEmpresa ||
                    (this.MunicipioEmpresa != null &&
                    this.MunicipioEmpresa.Equals(input.MunicipioEmpresa))
                ) && 
                (
                    this.CepEmpresa == input.CepEmpresa ||
                    (this.CepEmpresa != null &&
                    this.CepEmpresa.Equals(input.CepEmpresa))
                ) && 
                (
                    this.UfEmpresa == input.UfEmpresa ||
                    (this.UfEmpresa != null &&
                    this.UfEmpresa.Equals(input.UfEmpresa))
                ) && 
                (
                    this.PaisEmpresa == input.PaisEmpresa ||
                    (this.PaisEmpresa != null &&
                    this.PaisEmpresa.Equals(input.PaisEmpresa))
                ) && 
                (
                    this.DataHistorico == input.DataHistorico ||
                    (this.DataHistorico != null &&
                    this.DataHistorico.Equals(input.DataHistorico))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.CgcCpfEmpresa == input.CgcCpfEmpresa ||
                    (this.CgcCpfEmpresa != null &&
                    this.CgcCpfEmpresa.Equals(input.CgcCpfEmpresa))
                ) && 
                (
                    this.IeRgEmpresa == input.IeRgEmpresa ||
                    (this.IeRgEmpresa != null &&
                    this.IeRgEmpresa.Equals(input.IeRgEmpresa))
                ) && 
                (
                    this.CodigoLocalidade == input.CodigoLocalidade ||
                    (this.CodigoLocalidade != null &&
                    this.CodigoLocalidade.Equals(input.CodigoLocalidade))
                ) && 
                (
                    this.Localidade == input.Localidade ||
                    (this.Localidade != null &&
                    this.Localidade.Equals(input.Localidade))
                ) && 
                (
                    this.NumeroEndereco == input.NumeroEndereco ||
                    (this.NumeroEndereco != null &&
                    this.NumeroEndereco.Equals(input.NumeroEndereco))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.IdEnderecoEmpresa != null)
                    hashCode = hashCode * 59 + this.IdEnderecoEmpresa.GetHashCode();
                if (this.Empresa != null)
                    hashCode = hashCode * 59 + this.Empresa.GetHashCode();
                if (this._EnderecoEmpresa != null)
                    hashCode = hashCode * 59 + this._EnderecoEmpresa.GetHashCode();
                if (this.ComplementoEndereco != null)
                    hashCode = hashCode * 59 + this.ComplementoEndereco.GetHashCode();
                if (this.BairroEmpresa != null)
                    hashCode = hashCode * 59 + this.BairroEmpresa.GetHashCode();
                if (this.MunicipioEmpresa != null)
                    hashCode = hashCode * 59 + this.MunicipioEmpresa.GetHashCode();
                if (this.CepEmpresa != null)
                    hashCode = hashCode * 59 + this.CepEmpresa.GetHashCode();
                if (this.UfEmpresa != null)
                    hashCode = hashCode * 59 + this.UfEmpresa.GetHashCode();
                if (this.PaisEmpresa != null)
                    hashCode = hashCode * 59 + this.PaisEmpresa.GetHashCode();
                if (this.DataHistorico != null)
                    hashCode = hashCode * 59 + this.DataHistorico.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.CgcCpfEmpresa != null)
                    hashCode = hashCode * 59 + this.CgcCpfEmpresa.GetHashCode();
                if (this.IeRgEmpresa != null)
                    hashCode = hashCode * 59 + this.IeRgEmpresa.GetHashCode();
                if (this.CodigoLocalidade != null)
                    hashCode = hashCode * 59 + this.CodigoLocalidade.GetHashCode();
                if (this.Localidade != null)
                    hashCode = hashCode * 59 + this.Localidade.GetHashCode();
                if (this.NumeroEndereco != null)
                    hashCode = hashCode * 59 + this.NumeroEndereco.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
