/* 
 * Zion WMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// DocumentoOficialEntradaDTO
    /// </summary>
    [DataContract]
    public partial class DocumentoOficialEntradaDTO :  IEquatable<DocumentoOficialEntradaDTO>, IValidatableObject
    {
        /// <summary>
        /// Defines EstadoDocumentoOficial
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum EstadoDocumentoOficialEnum
        {
            
            /// <summary>
            /// Enum PENDENTE for value: PENDENTE
            /// </summary>
            [EnumMember(Value = "PENDENTE")]
            PENDENTE = 1,
            
            /// <summary>
            /// Enum CONFIRMADO for value: CONFIRMADO
            /// </summary>
            [EnumMember(Value = "CONFIRMADO")]
            CONFIRMADO = 2,
            
            /// <summary>
            /// Enum CONCLUIDO for value: CONCLUIDO
            /// </summary>
            [EnumMember(Value = "CONCLUIDO")]
            CONCLUIDO = 3,
            
            /// <summary>
            /// Enum ENCERRADO for value: ENCERRADO
            /// </summary>
            [EnumMember(Value = "ENCERRADO")]
            ENCERRADO = 4,
            
            /// <summary>
            /// Enum CANCELADO for value: CANCELADO
            /// </summary>
            [EnumMember(Value = "CANCELADO")]
            CANCELADO = 5
        }

        /// <summary>
        /// Gets or Sets EstadoDocumentoOficial
        /// </summary>
        [DataMember(Name="estadoDocumentoOficial", EmitDefaultValue=false)]
        public EstadoDocumentoOficialEnum? EstadoDocumentoOficial { get; set; }
        /// <summary>
        /// Defines EstadoDocumentoArquivoUpload
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum EstadoDocumentoArquivoUploadEnum
        {
            
            /// <summary>
            /// Enum CONFERIDA for value: CONFERIDA
            /// </summary>
            [EnumMember(Value = "CONFERIDA")]
            CONFERIDA = 1,
            
            /// <summary>
            /// Enum PENDENTE for value: PENDENTE
            /// </summary>
            [EnumMember(Value = "PENDENTE")]
            PENDENTE = 2,
            
            /// <summary>
            /// Enum FINALIZADA for value: FINALIZADA
            /// </summary>
            [EnumMember(Value = "FINALIZADA")]
            FINALIZADA = 3,
            
            /// <summary>
            /// Enum SEPARADA for value: SEPARADA
            /// </summary>
            [EnumMember(Value = "SEPARADA")]
            SEPARADA = 4,
            
            /// <summary>
            /// Enum CANCELADA for value: CANCELADA
            /// </summary>
            [EnumMember(Value = "CANCELADA")]
            CANCELADA = 5
        }

        /// <summary>
        /// Gets or Sets EstadoDocumentoArquivoUpload
        /// </summary>
        [DataMember(Name="estadoDocumentoArquivoUpload", EmitDefaultValue=false)]
        public EstadoDocumentoArquivoUploadEnum? EstadoDocumentoArquivoUpload { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="DocumentoOficialEntradaDTO" /> class.
        /// </summary>
        /// <param name="codigoEstabelecimento">codigoEstabelecimento.</param>
        /// <param name="codigoEmpresa">codigoEmpresa.</param>
        /// <param name="tipoDocumento">tipoDocumento.</param>
        /// <param name="serieDocumento">serieDocumento.</param>
        /// <param name="documentoOficialEntrada">documentoOficialEntrada.</param>
        /// <param name="codigoDocumento">codigoDocumento.</param>
        /// <param name="dataEmissao">dataEmissao.</param>
        /// <param name="dataMovimento">dataMovimento.</param>
        /// <param name="valorTotalDocumento">valorTotalDocumento.</param>
        /// <param name="valorTotalProduto">valorTotalProduto.</param>
        /// <param name="valorBaseIcms">valorBaseIcms.</param>
        /// <param name="valorIcms">valorIcms.</param>
        /// <param name="valorBaseIcmsSub">valorBaseIcmsSub.</param>
        /// <param name="valorIcmsSub">valorIcmsSub.</param>
        /// <param name="valorBaseIpi">valorBaseIpi.</param>
        /// <param name="valorIpi">valorIpi.</param>
        /// <param name="valorFrete">valorFrete.</param>
        /// <param name="valorSeguro">valorSeguro.</param>
        /// <param name="valorDesconto">valorDesconto.</param>
        /// <param name="valorAcrescimo">valorAcrescimo.</param>
        /// <param name="integracao">integracao.</param>
        /// <param name="especieDocumento">especieDocumento.</param>
        /// <param name="cfop">cfop.</param>
        /// <param name="naturezaOperacao">naturezaOperacao.</param>
        /// <param name="modeloDocumento">modeloDocumento.</param>
        /// <param name="documentoRelacionado">documentoRelacionado.</param>
        /// <param name="observacaoDocumento">observacaoDocumento.</param>
        /// <param name="especieVolume">especieVolume.</param>
        /// <param name="quantidadeVolume">quantidadeVolume.</param>
        /// <param name="marcaVolume">marcaVolume.</param>
        /// <param name="numeroVolume">numeroVolume.</param>
        /// <param name="placaVeiculo">placaVeiculo.</param>
        /// <param name="ufVeiculo">ufVeiculo.</param>
        /// <param name="nomeMotorista">nomeMotorista.</param>
        /// <param name="documentoMotorista">documentoMotorista.</param>
        /// <param name="pesoBruto">pesoBruto.</param>
        /// <param name="pesoLiquido">pesoLiquido.</param>
        /// <param name="dataPrevisaoMovimento">dataPrevisaoMovimento.</param>
        /// <param name="codigoDestino">codigoDestino.</param>
        /// <param name="volumeCubico">volumeCubico.</param>
        /// <param name="conhecimentoTransporte">conhecimentoTransporte.</param>
        /// <param name="valorServico">valorServico.</param>
        /// <param name="usuario">usuario.</param>
        /// <param name="dataHistorico">dataHistorico.</param>
        /// <param name="numeroSelo">numeroSelo.</param>
        /// <param name="idEnderecoEmpresa">idEnderecoEmpresa.</param>
        /// <param name="idEnderecoEntrega">idEnderecoEntrega.</param>
        /// <param name="transportadora">transportadora.</param>
        /// <param name="idEnderecoTransportadora">idEnderecoTransportadora.</param>
        /// <param name="documentoQualidade">documentoQualidade.</param>
        /// <param name="quantidadeItem">quantidadeItem.</param>
        /// <param name="sistemaModulo">sistemaModulo.</param>
        /// <param name="tipoFormulario">tipoFormulario.</param>
        /// <param name="valorAcrescimoItem">valorAcrescimoItem.</param>
        /// <param name="valorDescontoItem">valorDescontoItem.</param>
        /// <param name="mensagemFiscal">mensagemFiscal.</param>
        /// <param name="empresaEmitente">empresaEmitente.</param>
        /// <param name="empresaDestino">empresaDestino.</param>
        /// <param name="depositante">depositante.</param>
        /// <param name="codigoMatriz">codigoMatriz.</param>
        /// <param name="numeroDocumento">numeroDocumento.</param>
        /// <param name="cnpjCpfEmpresa">cnpjCpfEmpresa.</param>
        /// <param name="ieRgEmpresa">ieRgEmpresa.</param>
        /// <param name="centroCusto">centroCusto.</param>
        /// <param name="codigoVendedor">codigoVendedor.</param>
        /// <param name="informacaoAdicional1">informacaoAdicional1.</param>
        /// <param name="informacaoAdicional2">informacaoAdicional2.</param>
        /// <param name="informacaoAdicional3">informacaoAdicional3.</param>
        /// <param name="cnpjCpfEmitente">cnpjCpfEmitente.</param>
        /// <param name="ieRgEmitente">ieRgEmitente.</param>
        /// <param name="numeroDocumentoFiscal">numeroDocumentoFiscal.</param>
        /// <param name="valorMinimo">valorMinimo.</param>
        /// <param name="fatParcialOrdemSeparacao">fatParcialOrdemSeparacao.</param>
        /// <param name="dataVencimento">dataVencimento.</param>
        /// <param name="usuarioGeracao">usuarioGeracao.</param>
        /// <param name="dataGeracao">dataGeracao.</param>
        /// <param name="nfeChaveAcesso">nfeChaveAcesso.</param>
        /// <param name="nfeDigestValue">nfeDigestValue.</param>
        /// <param name="nfeDataRecebimento">nfeDataRecebimento.</param>
        /// <param name="nfeId">nfeId.</param>
        /// <param name="nfeAmbiente">nfeAmbiente.</param>
        /// <param name="nfeTipoEmissao">nfeTipoEmissao.</param>
        /// <param name="nfeTipoImpressao">nfeTipoImpressao.</param>
        /// <param name="finalidadeDocumento">finalidadeDocumento.</param>
        /// <param name="enderecoProducao">enderecoProducao.</param>
        /// <param name="descricaoDocumento">descricaoDocumento.</param>
        /// <param name="faturado">faturado.</param>
        /// <param name="descricaoMensagemContribuinte">descricaoMensagemContribuinte.</param>
        /// <param name="nfeProtocolo">nfeProtocolo.</param>
        /// <param name="stDocumentoAtualizacao">stDocumentoAtualizacao.</param>
        /// <param name="nfeUfEmbarque">nfeUfEmbarque.</param>
        /// <param name="nfeLocalEmbarque">nfeLocalEmbarque.</param>
        /// <param name="numeroRecopi">numeroRecopi.</param>
        /// <param name="nfeDataRegistroDpec">nfeDataRegistroDpec.</param>
        /// <param name="nfeRegistroDpec">nfeRegistroDpec.</param>
        /// <param name="nfeJustificativa">nfeJustificativa.</param>
        /// <param name="nfeVersao">nfeVersao.</param>
        /// <param name="nfeDataAutorizacao">nfeDataAutorizacao.</param>
        /// <param name="ieSubTributaria">ieSubTributaria.</param>
        /// <param name="dataHoraEmissao">dataHoraEmissao.</param>
        /// <param name="dataHoraMovimento">dataHoraMovimento.</param>
        /// <param name="nfeConsumidorFinal">nfeConsumidorFinal.</param>
        /// <param name="nfeIndicadorPresencial">nfeIndicadorPresencial.</param>
        /// <param name="nfeLocalDespacho">nfeLocalDespacho.</param>
        /// <param name="arquivoEvento">arquivoEvento.</param>
        /// <param name="nfeImprimir">nfeImprimir.</param>
        /// <param name="nfeChaveAcessoReferencia">nfeChaveAcessoReferencia.</param>
        /// <param name="codigoGuiaTrafego">codigoGuiaTrafego.</param>
        /// <param name="estadoDocumentoOficial">estadoDocumentoOficial.</param>
        /// <param name="documentoOficialEntradaItem">documentoOficialEntradaItem.</param>
        /// <param name="permitirBaixa">permitirBaixa.</param>
        /// <param name="possuiAvaria">possuiAvaria.</param>
        /// <param name="estadoDocumentoArquivoUpload">estadoDocumentoArquivoUpload.</param>
        public DocumentoOficialEntradaDTO(long? codigoEstabelecimento = default(long?), string codigoEmpresa = default(string), string tipoDocumento = default(string), string serieDocumento = default(string), string documentoOficialEntrada = default(string), long? codigoDocumento = default(long?), DateTime? dataEmissao = default(DateTime?), DateTime? dataMovimento = default(DateTime?), decimal? valorTotalDocumento = default(decimal?), decimal? valorTotalProduto = default(decimal?), decimal? valorBaseIcms = default(decimal?), decimal? valorIcms = default(decimal?), decimal? valorBaseIcmsSub = default(decimal?), decimal? valorIcmsSub = default(decimal?), decimal? valorBaseIpi = default(decimal?), decimal? valorIpi = default(decimal?), decimal? valorFrete = default(decimal?), decimal? valorSeguro = default(decimal?), decimal? valorDesconto = default(decimal?), decimal? valorAcrescimo = default(decimal?), long? integracao = default(long?), string especieDocumento = default(string), string cfop = default(string), NaturezaOperacaoDTO naturezaOperacao = default(NaturezaOperacaoDTO), string modeloDocumento = default(string), string documentoRelacionado = default(string), string observacaoDocumento = default(string), string especieVolume = default(string), decimal? quantidadeVolume = default(decimal?), string marcaVolume = default(string), string numeroVolume = default(string), string placaVeiculo = default(string), string ufVeiculo = default(string), string nomeMotorista = default(string), string documentoMotorista = default(string), decimal? pesoBruto = default(decimal?), decimal? pesoLiquido = default(decimal?), DateTime? dataPrevisaoMovimento = default(DateTime?), long? codigoDestino = default(long?), decimal? volumeCubico = default(decimal?), string conhecimentoTransporte = default(string), decimal? valorServico = default(decimal?), string usuario = default(string), DateTime? dataHistorico = default(DateTime?), string numeroSelo = default(string), long? idEnderecoEmpresa = default(long?), long? idEnderecoEntrega = default(long?), EmpresaDTO transportadora = default(EmpresaDTO), long? idEnderecoTransportadora = default(long?), string documentoQualidade = default(string), long? quantidadeItem = default(long?), long? sistemaModulo = default(long?), long? tipoFormulario = default(long?), decimal? valorAcrescimoItem = default(decimal?), decimal? valorDescontoItem = default(decimal?), long? mensagemFiscal = default(long?), EmpresaDTO empresaEmitente = default(EmpresaDTO), EmpresaDTO empresaDestino = default(EmpresaDTO), EmpresaDTO depositante = default(EmpresaDTO), string codigoMatriz = default(string), string numeroDocumento = default(string), string cnpjCpfEmpresa = default(string), string ieRgEmpresa = default(string), string centroCusto = default(string), string codigoVendedor = default(string), string informacaoAdicional1 = default(string), string informacaoAdicional2 = default(string), string informacaoAdicional3 = default(string), string cnpjCpfEmitente = default(string), string ieRgEmitente = default(string), string numeroDocumentoFiscal = default(string), decimal? valorMinimo = default(decimal?), int? fatParcialOrdemSeparacao = default(int?), DateTime? dataVencimento = default(DateTime?), string usuarioGeracao = default(string), DateTime? dataGeracao = default(DateTime?), string nfeChaveAcesso = default(string), string nfeDigestValue = default(string), DateTime? nfeDataRecebimento = default(DateTime?), string nfeId = default(string), NfeAmbienteDTO nfeAmbiente = default(NfeAmbienteDTO), NfeTipoEmissaoDTO nfeTipoEmissao = default(NfeTipoEmissaoDTO), NfeTipoImpressaoDTO nfeTipoImpressao = default(NfeTipoImpressaoDTO), FinalidadeDocumentoDTO finalidadeDocumento = default(FinalidadeDocumentoDTO), long? enderecoProducao = default(long?), string descricaoDocumento = default(string), int? faturado = default(int?), string descricaoMensagemContribuinte = default(string), string nfeProtocolo = default(string), string stDocumentoAtualizacao = default(string), string nfeUfEmbarque = default(string), string nfeLocalEmbarque = default(string), string numeroRecopi = default(string), DateTime? nfeDataRegistroDpec = default(DateTime?), string nfeRegistroDpec = default(string), string nfeJustificativa = default(string), string nfeVersao = default(string), DateTime? nfeDataAutorizacao = default(DateTime?), string ieSubTributaria = default(string), DateTime? dataHoraEmissao = default(DateTime?), DateTime? dataHoraMovimento = default(DateTime?), int? nfeConsumidorFinal = default(int?), int? nfeIndicadorPresencial = default(int?), string nfeLocalDespacho = default(string), string arquivoEvento = default(string), int? nfeImprimir = default(int?), string nfeChaveAcessoReferencia = default(string), long? codigoGuiaTrafego = default(long?), EstadoDocumentoOficialEnum? estadoDocumentoOficial = default(EstadoDocumentoOficialEnum?), List<DocumentoOficialEntradaItem> documentoOficialEntradaItem = default(List<DocumentoOficialEntradaItem>), bool? permitirBaixa = default(bool?), bool? possuiAvaria = default(bool?), EstadoDocumentoArquivoUploadEnum? estadoDocumentoArquivoUpload = default(EstadoDocumentoArquivoUploadEnum?))
        {
            this.CodigoEstabelecimento = codigoEstabelecimento;
            this.CodigoEmpresa = codigoEmpresa;
            this.TipoDocumento = tipoDocumento;
            this.SerieDocumento = serieDocumento;
            this.DocumentoOficialEntrada = documentoOficialEntrada;
            this.CodigoDocumento = codigoDocumento;
            this.DataEmissao = dataEmissao;
            this.DataMovimento = dataMovimento;
            this.ValorTotalDocumento = valorTotalDocumento;
            this.ValorTotalProduto = valorTotalProduto;
            this.ValorBaseIcms = valorBaseIcms;
            this.ValorIcms = valorIcms;
            this.ValorBaseIcmsSub = valorBaseIcmsSub;
            this.ValorIcmsSub = valorIcmsSub;
            this.ValorBaseIpi = valorBaseIpi;
            this.ValorIpi = valorIpi;
            this.ValorFrete = valorFrete;
            this.ValorSeguro = valorSeguro;
            this.ValorDesconto = valorDesconto;
            this.ValorAcrescimo = valorAcrescimo;
            this.Integracao = integracao;
            this.EspecieDocumento = especieDocumento;
            this.Cfop = cfop;
            this.NaturezaOperacao = naturezaOperacao;
            this.ModeloDocumento = modeloDocumento;
            this.DocumentoRelacionado = documentoRelacionado;
            this.ObservacaoDocumento = observacaoDocumento;
            this.EspecieVolume = especieVolume;
            this.QuantidadeVolume = quantidadeVolume;
            this.MarcaVolume = marcaVolume;
            this.NumeroVolume = numeroVolume;
            this.PlacaVeiculo = placaVeiculo;
            this.UfVeiculo = ufVeiculo;
            this.NomeMotorista = nomeMotorista;
            this.DocumentoMotorista = documentoMotorista;
            this.PesoBruto = pesoBruto;
            this.PesoLiquido = pesoLiquido;
            this.DataPrevisaoMovimento = dataPrevisaoMovimento;
            this.CodigoDestino = codigoDestino;
            this.VolumeCubico = volumeCubico;
            this.ConhecimentoTransporte = conhecimentoTransporte;
            this.ValorServico = valorServico;
            this.Usuario = usuario;
            this.DataHistorico = dataHistorico;
            this.NumeroSelo = numeroSelo;
            this.IdEnderecoEmpresa = idEnderecoEmpresa;
            this.IdEnderecoEntrega = idEnderecoEntrega;
            this.Transportadora = transportadora;
            this.IdEnderecoTransportadora = idEnderecoTransportadora;
            this.DocumentoQualidade = documentoQualidade;
            this.QuantidadeItem = quantidadeItem;
            this.SistemaModulo = sistemaModulo;
            this.TipoFormulario = tipoFormulario;
            this.ValorAcrescimoItem = valorAcrescimoItem;
            this.ValorDescontoItem = valorDescontoItem;
            this.MensagemFiscal = mensagemFiscal;
            this.EmpresaEmitente = empresaEmitente;
            this.EmpresaDestino = empresaDestino;
            this.Depositante = depositante;
            this.CodigoMatriz = codigoMatriz;
            this.NumeroDocumento = numeroDocumento;
            this.CnpjCpfEmpresa = cnpjCpfEmpresa;
            this.IeRgEmpresa = ieRgEmpresa;
            this.CentroCusto = centroCusto;
            this.CodigoVendedor = codigoVendedor;
            this.InformacaoAdicional1 = informacaoAdicional1;
            this.InformacaoAdicional2 = informacaoAdicional2;
            this.InformacaoAdicional3 = informacaoAdicional3;
            this.CnpjCpfEmitente = cnpjCpfEmitente;
            this.IeRgEmitente = ieRgEmitente;
            this.NumeroDocumentoFiscal = numeroDocumentoFiscal;
            this.ValorMinimo = valorMinimo;
            this.FatParcialOrdemSeparacao = fatParcialOrdemSeparacao;
            this.DataVencimento = dataVencimento;
            this.UsuarioGeracao = usuarioGeracao;
            this.DataGeracao = dataGeracao;
            this.NfeChaveAcesso = nfeChaveAcesso;
            this.NfeDigestValue = nfeDigestValue;
            this.NfeDataRecebimento = nfeDataRecebimento;
            this.NfeId = nfeId;
            this.NfeAmbiente = nfeAmbiente;
            this.NfeTipoEmissao = nfeTipoEmissao;
            this.NfeTipoImpressao = nfeTipoImpressao;
            this.FinalidadeDocumento = finalidadeDocumento;
            this.EnderecoProducao = enderecoProducao;
            this.DescricaoDocumento = descricaoDocumento;
            this.Faturado = faturado;
            this.DescricaoMensagemContribuinte = descricaoMensagemContribuinte;
            this.NfeProtocolo = nfeProtocolo;
            this.StDocumentoAtualizacao = stDocumentoAtualizacao;
            this.NfeUfEmbarque = nfeUfEmbarque;
            this.NfeLocalEmbarque = nfeLocalEmbarque;
            this.NumeroRecopi = numeroRecopi;
            this.NfeDataRegistroDpec = nfeDataRegistroDpec;
            this.NfeRegistroDpec = nfeRegistroDpec;
            this.NfeJustificativa = nfeJustificativa;
            this.NfeVersao = nfeVersao;
            this.NfeDataAutorizacao = nfeDataAutorizacao;
            this.IeSubTributaria = ieSubTributaria;
            this.DataHoraEmissao = dataHoraEmissao;
            this.DataHoraMovimento = dataHoraMovimento;
            this.NfeConsumidorFinal = nfeConsumidorFinal;
            this.NfeIndicadorPresencial = nfeIndicadorPresencial;
            this.NfeLocalDespacho = nfeLocalDespacho;
            this.ArquivoEvento = arquivoEvento;
            this.NfeImprimir = nfeImprimir;
            this.NfeChaveAcessoReferencia = nfeChaveAcessoReferencia;
            this.CodigoGuiaTrafego = codigoGuiaTrafego;
            this.EstadoDocumentoOficial = estadoDocumentoOficial;
            this.DocumentoOficialEntradaItem = documentoOficialEntradaItem;
            this.PermitirBaixa = permitirBaixa;
            this.PossuiAvaria = possuiAvaria;
            this.EstadoDocumentoArquivoUpload = estadoDocumentoArquivoUpload;
        }
        
        /// <summary>
        /// Gets or Sets CodigoEstabelecimento
        /// </summary>
        [DataMember(Name="codigoEstabelecimento", EmitDefaultValue=false)]
        public long? CodigoEstabelecimento { get; set; }

        /// <summary>
        /// Gets or Sets CodigoEmpresa
        /// </summary>
        [DataMember(Name="codigoEmpresa", EmitDefaultValue=false)]
        public string CodigoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets TipoDocumento
        /// </summary>
        [DataMember(Name="tipoDocumento", EmitDefaultValue=false)]
        public string TipoDocumento { get; set; }

        /// <summary>
        /// Gets or Sets SerieDocumento
        /// </summary>
        [DataMember(Name="serieDocumento", EmitDefaultValue=false)]
        public string SerieDocumento { get; set; }

        /// <summary>
        /// Gets or Sets DocumentoOficialEntrada
        /// </summary>
        [DataMember(Name="documentoOficialEntrada", EmitDefaultValue=false)]
        public string DocumentoOficialEntrada { get; set; }

        /// <summary>
        /// Gets or Sets CodigoDocumento
        /// </summary>
        [DataMember(Name="codigoDocumento", EmitDefaultValue=false)]
        public long? CodigoDocumento { get; set; }

        /// <summary>
        /// Gets or Sets DataEmissao
        /// </summary>
        [DataMember(Name="dataEmissao", EmitDefaultValue=false)]
        public DateTime? DataEmissao { get; set; }

        /// <summary>
        /// Gets or Sets DataMovimento
        /// </summary>
        [DataMember(Name="dataMovimento", EmitDefaultValue=false)]
        public DateTime? DataMovimento { get; set; }

        /// <summary>
        /// Gets or Sets ValorTotalDocumento
        /// </summary>
        [DataMember(Name="valorTotalDocumento", EmitDefaultValue=false)]
        public decimal? ValorTotalDocumento { get; set; }

        /// <summary>
        /// Gets or Sets ValorTotalProduto
        /// </summary>
        [DataMember(Name="valorTotalProduto", EmitDefaultValue=false)]
        public decimal? ValorTotalProduto { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIcms
        /// </summary>
        [DataMember(Name="valorBaseIcms", EmitDefaultValue=false)]
        public decimal? ValorBaseIcms { get; set; }

        /// <summary>
        /// Gets or Sets ValorIcms
        /// </summary>
        [DataMember(Name="valorIcms", EmitDefaultValue=false)]
        public decimal? ValorIcms { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIcmsSub
        /// </summary>
        [DataMember(Name="valorBaseIcmsSub", EmitDefaultValue=false)]
        public decimal? ValorBaseIcmsSub { get; set; }

        /// <summary>
        /// Gets or Sets ValorIcmsSub
        /// </summary>
        [DataMember(Name="valorIcmsSub", EmitDefaultValue=false)]
        public decimal? ValorIcmsSub { get; set; }

        /// <summary>
        /// Gets or Sets ValorBaseIpi
        /// </summary>
        [DataMember(Name="valorBaseIpi", EmitDefaultValue=false)]
        public decimal? ValorBaseIpi { get; set; }

        /// <summary>
        /// Gets or Sets ValorIpi
        /// </summary>
        [DataMember(Name="valorIpi", EmitDefaultValue=false)]
        public decimal? ValorIpi { get; set; }

        /// <summary>
        /// Gets or Sets ValorFrete
        /// </summary>
        [DataMember(Name="valorFrete", EmitDefaultValue=false)]
        public decimal? ValorFrete { get; set; }

        /// <summary>
        /// Gets or Sets ValorSeguro
        /// </summary>
        [DataMember(Name="valorSeguro", EmitDefaultValue=false)]
        public decimal? ValorSeguro { get; set; }

        /// <summary>
        /// Gets or Sets ValorDesconto
        /// </summary>
        [DataMember(Name="valorDesconto", EmitDefaultValue=false)]
        public decimal? ValorDesconto { get; set; }

        /// <summary>
        /// Gets or Sets ValorAcrescimo
        /// </summary>
        [DataMember(Name="valorAcrescimo", EmitDefaultValue=false)]
        public decimal? ValorAcrescimo { get; set; }

        /// <summary>
        /// Gets or Sets Integracao
        /// </summary>
        [DataMember(Name="integracao", EmitDefaultValue=false)]
        public long? Integracao { get; set; }

        /// <summary>
        /// Gets or Sets EspecieDocumento
        /// </summary>
        [DataMember(Name="especieDocumento", EmitDefaultValue=false)]
        public string EspecieDocumento { get; set; }

        /// <summary>
        /// Gets or Sets Cfop
        /// </summary>
        [DataMember(Name="cfop", EmitDefaultValue=false)]
        public string Cfop { get; set; }

        /// <summary>
        /// Gets or Sets NaturezaOperacao
        /// </summary>
        [DataMember(Name="naturezaOperacao", EmitDefaultValue=false)]
        public NaturezaOperacaoDTO NaturezaOperacao { get; set; }

        /// <summary>
        /// Gets or Sets ModeloDocumento
        /// </summary>
        [DataMember(Name="modeloDocumento", EmitDefaultValue=false)]
        public string ModeloDocumento { get; set; }

        /// <summary>
        /// Gets or Sets DocumentoRelacionado
        /// </summary>
        [DataMember(Name="documentoRelacionado", EmitDefaultValue=false)]
        public string DocumentoRelacionado { get; set; }

        /// <summary>
        /// Gets or Sets ObservacaoDocumento
        /// </summary>
        [DataMember(Name="observacaoDocumento", EmitDefaultValue=false)]
        public string ObservacaoDocumento { get; set; }

        /// <summary>
        /// Gets or Sets EspecieVolume
        /// </summary>
        [DataMember(Name="especieVolume", EmitDefaultValue=false)]
        public string EspecieVolume { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeVolume
        /// </summary>
        [DataMember(Name="quantidadeVolume", EmitDefaultValue=false)]
        public decimal? QuantidadeVolume { get; set; }

        /// <summary>
        /// Gets or Sets MarcaVolume
        /// </summary>
        [DataMember(Name="marcaVolume", EmitDefaultValue=false)]
        public string MarcaVolume { get; set; }

        /// <summary>
        /// Gets or Sets NumeroVolume
        /// </summary>
        [DataMember(Name="numeroVolume", EmitDefaultValue=false)]
        public string NumeroVolume { get; set; }

        /// <summary>
        /// Gets or Sets PlacaVeiculo
        /// </summary>
        [DataMember(Name="placaVeiculo", EmitDefaultValue=false)]
        public string PlacaVeiculo { get; set; }

        /// <summary>
        /// Gets or Sets UfVeiculo
        /// </summary>
        [DataMember(Name="ufVeiculo", EmitDefaultValue=false)]
        public string UfVeiculo { get; set; }

        /// <summary>
        /// Gets or Sets NomeMotorista
        /// </summary>
        [DataMember(Name="nomeMotorista", EmitDefaultValue=false)]
        public string NomeMotorista { get; set; }

        /// <summary>
        /// Gets or Sets DocumentoMotorista
        /// </summary>
        [DataMember(Name="documentoMotorista", EmitDefaultValue=false)]
        public string DocumentoMotorista { get; set; }

        /// <summary>
        /// Gets or Sets PesoBruto
        /// </summary>
        [DataMember(Name="pesoBruto", EmitDefaultValue=false)]
        public decimal? PesoBruto { get; set; }

        /// <summary>
        /// Gets or Sets PesoLiquido
        /// </summary>
        [DataMember(Name="pesoLiquido", EmitDefaultValue=false)]
        public decimal? PesoLiquido { get; set; }

        /// <summary>
        /// Gets or Sets DataPrevisaoMovimento
        /// </summary>
        [DataMember(Name="dataPrevisaoMovimento", EmitDefaultValue=false)]
        public DateTime? DataPrevisaoMovimento { get; set; }

        /// <summary>
        /// Gets or Sets CodigoDestino
        /// </summary>
        [DataMember(Name="codigoDestino", EmitDefaultValue=false)]
        public long? CodigoDestino { get; set; }

        /// <summary>
        /// Gets or Sets VolumeCubico
        /// </summary>
        [DataMember(Name="volumeCubico", EmitDefaultValue=false)]
        public decimal? VolumeCubico { get; set; }

        /// <summary>
        /// Gets or Sets ConhecimentoTransporte
        /// </summary>
        [DataMember(Name="conhecimentoTransporte", EmitDefaultValue=false)]
        public string ConhecimentoTransporte { get; set; }

        /// <summary>
        /// Gets or Sets ValorServico
        /// </summary>
        [DataMember(Name="valorServico", EmitDefaultValue=false)]
        public decimal? ValorServico { get; set; }

        /// <summary>
        /// Gets or Sets Usuario
        /// </summary>
        [DataMember(Name="usuario", EmitDefaultValue=false)]
        public string Usuario { get; set; }

        /// <summary>
        /// Gets or Sets DataHistorico
        /// </summary>
        [DataMember(Name="dataHistorico", EmitDefaultValue=false)]
        public DateTime? DataHistorico { get; set; }

        /// <summary>
        /// Gets or Sets NumeroSelo
        /// </summary>
        [DataMember(Name="numeroSelo", EmitDefaultValue=false)]
        public string NumeroSelo { get; set; }

        /// <summary>
        /// Gets or Sets IdEnderecoEmpresa
        /// </summary>
        [DataMember(Name="idEnderecoEmpresa", EmitDefaultValue=false)]
        public long? IdEnderecoEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets IdEnderecoEntrega
        /// </summary>
        [DataMember(Name="idEnderecoEntrega", EmitDefaultValue=false)]
        public long? IdEnderecoEntrega { get; set; }

        /// <summary>
        /// Gets or Sets Transportadora
        /// </summary>
        [DataMember(Name="transportadora", EmitDefaultValue=false)]
        public EmpresaDTO Transportadora { get; set; }

        /// <summary>
        /// Gets or Sets IdEnderecoTransportadora
        /// </summary>
        [DataMember(Name="idEnderecoTransportadora", EmitDefaultValue=false)]
        public long? IdEnderecoTransportadora { get; set; }

        /// <summary>
        /// Gets or Sets DocumentoQualidade
        /// </summary>
        [DataMember(Name="documentoQualidade", EmitDefaultValue=false)]
        public string DocumentoQualidade { get; set; }

        /// <summary>
        /// Gets or Sets QuantidadeItem
        /// </summary>
        [DataMember(Name="quantidadeItem", EmitDefaultValue=false)]
        public long? QuantidadeItem { get; set; }

        /// <summary>
        /// Gets or Sets SistemaModulo
        /// </summary>
        [DataMember(Name="sistemaModulo", EmitDefaultValue=false)]
        public long? SistemaModulo { get; set; }

        /// <summary>
        /// Gets or Sets TipoFormulario
        /// </summary>
        [DataMember(Name="tipoFormulario", EmitDefaultValue=false)]
        public long? TipoFormulario { get; set; }

        /// <summary>
        /// Gets or Sets ValorAcrescimoItem
        /// </summary>
        [DataMember(Name="valorAcrescimoItem", EmitDefaultValue=false)]
        public decimal? ValorAcrescimoItem { get; set; }

        /// <summary>
        /// Gets or Sets ValorDescontoItem
        /// </summary>
        [DataMember(Name="valorDescontoItem", EmitDefaultValue=false)]
        public decimal? ValorDescontoItem { get; set; }

        /// <summary>
        /// Gets or Sets MensagemFiscal
        /// </summary>
        [DataMember(Name="mensagemFiscal", EmitDefaultValue=false)]
        public long? MensagemFiscal { get; set; }

        /// <summary>
        /// Gets or Sets EmpresaEmitente
        /// </summary>
        [DataMember(Name="empresaEmitente", EmitDefaultValue=false)]
        public EmpresaDTO EmpresaEmitente { get; set; }

        /// <summary>
        /// Gets or Sets EmpresaDestino
        /// </summary>
        [DataMember(Name="empresaDestino", EmitDefaultValue=false)]
        public EmpresaDTO EmpresaDestino { get; set; }

        /// <summary>
        /// Gets or Sets Depositante
        /// </summary>
        [DataMember(Name="depositante", EmitDefaultValue=false)]
        public EmpresaDTO Depositante { get; set; }

        /// <summary>
        /// Gets or Sets CodigoMatriz
        /// </summary>
        [DataMember(Name="codigoMatriz", EmitDefaultValue=false)]
        public string CodigoMatriz { get; set; }

        /// <summary>
        /// Gets or Sets NumeroDocumento
        /// </summary>
        [DataMember(Name="numeroDocumento", EmitDefaultValue=false)]
        public string NumeroDocumento { get; set; }

        /// <summary>
        /// Gets or Sets CnpjCpfEmpresa
        /// </summary>
        [DataMember(Name="cnpjCpfEmpresa", EmitDefaultValue=false)]
        public string CnpjCpfEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets IeRgEmpresa
        /// </summary>
        [DataMember(Name="ieRgEmpresa", EmitDefaultValue=false)]
        public string IeRgEmpresa { get; set; }

        /// <summary>
        /// Gets or Sets CentroCusto
        /// </summary>
        [DataMember(Name="centroCusto", EmitDefaultValue=false)]
        public string CentroCusto { get; set; }

        /// <summary>
        /// Gets or Sets CodigoVendedor
        /// </summary>
        [DataMember(Name="codigoVendedor", EmitDefaultValue=false)]
        public string CodigoVendedor { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional1
        /// </summary>
        [DataMember(Name="informacaoAdicional1", EmitDefaultValue=false)]
        public string InformacaoAdicional1 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional2
        /// </summary>
        [DataMember(Name="informacaoAdicional2", EmitDefaultValue=false)]
        public string InformacaoAdicional2 { get; set; }

        /// <summary>
        /// Gets or Sets InformacaoAdicional3
        /// </summary>
        [DataMember(Name="informacaoAdicional3", EmitDefaultValue=false)]
        public string InformacaoAdicional3 { get; set; }

        /// <summary>
        /// Gets or Sets CnpjCpfEmitente
        /// </summary>
        [DataMember(Name="cnpjCpfEmitente", EmitDefaultValue=false)]
        public string CnpjCpfEmitente { get; set; }

        /// <summary>
        /// Gets or Sets IeRgEmitente
        /// </summary>
        [DataMember(Name="ieRgEmitente", EmitDefaultValue=false)]
        public string IeRgEmitente { get; set; }

        /// <summary>
        /// Gets or Sets NumeroDocumentoFiscal
        /// </summary>
        [DataMember(Name="numeroDocumentoFiscal", EmitDefaultValue=false)]
        public string NumeroDocumentoFiscal { get; set; }

        /// <summary>
        /// Gets or Sets ValorMinimo
        /// </summary>
        [DataMember(Name="valorMinimo", EmitDefaultValue=false)]
        public decimal? ValorMinimo { get; set; }

        /// <summary>
        /// Gets or Sets FatParcialOrdemSeparacao
        /// </summary>
        [DataMember(Name="fatParcialOrdemSeparacao", EmitDefaultValue=false)]
        public int? FatParcialOrdemSeparacao { get; set; }

        /// <summary>
        /// Gets or Sets DataVencimento
        /// </summary>
        [DataMember(Name="dataVencimento", EmitDefaultValue=false)]
        public DateTime? DataVencimento { get; set; }

        /// <summary>
        /// Gets or Sets UsuarioGeracao
        /// </summary>
        [DataMember(Name="usuarioGeracao", EmitDefaultValue=false)]
        public string UsuarioGeracao { get; set; }

        /// <summary>
        /// Gets or Sets DataGeracao
        /// </summary>
        [DataMember(Name="dataGeracao", EmitDefaultValue=false)]
        public DateTime? DataGeracao { get; set; }

        /// <summary>
        /// Gets or Sets NfeChaveAcesso
        /// </summary>
        [DataMember(Name="nfeChaveAcesso", EmitDefaultValue=false)]
        public string NfeChaveAcesso { get; set; }

        /// <summary>
        /// Gets or Sets NfeDigestValue
        /// </summary>
        [DataMember(Name="nfeDigestValue", EmitDefaultValue=false)]
        public string NfeDigestValue { get; set; }

        /// <summary>
        /// Gets or Sets NfeDataRecebimento
        /// </summary>
        [DataMember(Name="nfeDataRecebimento", EmitDefaultValue=false)]
        public DateTime? NfeDataRecebimento { get; set; }

        /// <summary>
        /// Gets or Sets NfeId
        /// </summary>
        [DataMember(Name="nfeId", EmitDefaultValue=false)]
        public string NfeId { get; set; }

        /// <summary>
        /// Gets or Sets NfeAmbiente
        /// </summary>
        [DataMember(Name="nfeAmbiente", EmitDefaultValue=false)]
        public NfeAmbienteDTO NfeAmbiente { get; set; }

        /// <summary>
        /// Gets or Sets NfeTipoEmissao
        /// </summary>
        [DataMember(Name="nfeTipoEmissao", EmitDefaultValue=false)]
        public NfeTipoEmissaoDTO NfeTipoEmissao { get; set; }

        /// <summary>
        /// Gets or Sets NfeTipoImpressao
        /// </summary>
        [DataMember(Name="nfeTipoImpressao", EmitDefaultValue=false)]
        public NfeTipoImpressaoDTO NfeTipoImpressao { get; set; }

        /// <summary>
        /// Gets or Sets FinalidadeDocumento
        /// </summary>
        [DataMember(Name="finalidadeDocumento", EmitDefaultValue=false)]
        public FinalidadeDocumentoDTO FinalidadeDocumento { get; set; }

        /// <summary>
        /// Gets or Sets EnderecoProducao
        /// </summary>
        [DataMember(Name="enderecoProducao", EmitDefaultValue=false)]
        public long? EnderecoProducao { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoDocumento
        /// </summary>
        [DataMember(Name="descricaoDocumento", EmitDefaultValue=false)]
        public string DescricaoDocumento { get; set; }

        /// <summary>
        /// Gets or Sets Faturado
        /// </summary>
        [DataMember(Name="faturado", EmitDefaultValue=false)]
        public int? Faturado { get; set; }

        /// <summary>
        /// Gets or Sets DescricaoMensagemContribuinte
        /// </summary>
        [DataMember(Name="descricaoMensagemContribuinte", EmitDefaultValue=false)]
        public string DescricaoMensagemContribuinte { get; set; }

        /// <summary>
        /// Gets or Sets NfeProtocolo
        /// </summary>
        [DataMember(Name="nfeProtocolo", EmitDefaultValue=false)]
        public string NfeProtocolo { get; set; }

        /// <summary>
        /// Gets or Sets StDocumentoAtualizacao
        /// </summary>
        [DataMember(Name="stDocumentoAtualizacao", EmitDefaultValue=false)]
        public string StDocumentoAtualizacao { get; set; }

        /// <summary>
        /// Gets or Sets NfeUfEmbarque
        /// </summary>
        [DataMember(Name="nfeUfEmbarque", EmitDefaultValue=false)]
        public string NfeUfEmbarque { get; set; }

        /// <summary>
        /// Gets or Sets NfeLocalEmbarque
        /// </summary>
        [DataMember(Name="nfeLocalEmbarque", EmitDefaultValue=false)]
        public string NfeLocalEmbarque { get; set; }

        /// <summary>
        /// Gets or Sets NumeroRecopi
        /// </summary>
        [DataMember(Name="numeroRecopi", EmitDefaultValue=false)]
        public string NumeroRecopi { get; set; }

        /// <summary>
        /// Gets or Sets NfeDataRegistroDpec
        /// </summary>
        [DataMember(Name="nfeDataRegistroDpec", EmitDefaultValue=false)]
        public DateTime? NfeDataRegistroDpec { get; set; }

        /// <summary>
        /// Gets or Sets NfeRegistroDpec
        /// </summary>
        [DataMember(Name="nfeRegistroDpec", EmitDefaultValue=false)]
        public string NfeRegistroDpec { get; set; }

        /// <summary>
        /// Gets or Sets NfeJustificativa
        /// </summary>
        [DataMember(Name="nfeJustificativa", EmitDefaultValue=false)]
        public string NfeJustificativa { get; set; }

        /// <summary>
        /// Gets or Sets NfeVersao
        /// </summary>
        [DataMember(Name="nfeVersao", EmitDefaultValue=false)]
        public string NfeVersao { get; set; }

        /// <summary>
        /// Gets or Sets NfeDataAutorizacao
        /// </summary>
        [DataMember(Name="nfeDataAutorizacao", EmitDefaultValue=false)]
        public DateTime? NfeDataAutorizacao { get; set; }

        /// <summary>
        /// Gets or Sets IeSubTributaria
        /// </summary>
        [DataMember(Name="ieSubTributaria", EmitDefaultValue=false)]
        public string IeSubTributaria { get; set; }

        /// <summary>
        /// Gets or Sets DataHoraEmissao
        /// </summary>
        [DataMember(Name="dataHoraEmissao", EmitDefaultValue=false)]
        public DateTime? DataHoraEmissao { get; set; }

        /// <summary>
        /// Gets or Sets DataHoraMovimento
        /// </summary>
        [DataMember(Name="dataHoraMovimento", EmitDefaultValue=false)]
        public DateTime? DataHoraMovimento { get; set; }

        /// <summary>
        /// Gets or Sets NfeConsumidorFinal
        /// </summary>
        [DataMember(Name="nfeConsumidorFinal", EmitDefaultValue=false)]
        public int? NfeConsumidorFinal { get; set; }

        /// <summary>
        /// Gets or Sets NfeIndicadorPresencial
        /// </summary>
        [DataMember(Name="nfeIndicadorPresencial", EmitDefaultValue=false)]
        public int? NfeIndicadorPresencial { get; set; }

        /// <summary>
        /// Gets or Sets NfeLocalDespacho
        /// </summary>
        [DataMember(Name="nfeLocalDespacho", EmitDefaultValue=false)]
        public string NfeLocalDespacho { get; set; }

        /// <summary>
        /// Gets or Sets ArquivoEvento
        /// </summary>
        [DataMember(Name="arquivoEvento", EmitDefaultValue=false)]
        public string ArquivoEvento { get; set; }

        /// <summary>
        /// Gets or Sets NfeImprimir
        /// </summary>
        [DataMember(Name="nfeImprimir", EmitDefaultValue=false)]
        public int? NfeImprimir { get; set; }

        /// <summary>
        /// Gets or Sets NfeChaveAcessoReferencia
        /// </summary>
        [DataMember(Name="nfeChaveAcessoReferencia", EmitDefaultValue=false)]
        public string NfeChaveAcessoReferencia { get; set; }

        /// <summary>
        /// Gets or Sets CodigoGuiaTrafego
        /// </summary>
        [DataMember(Name="codigoGuiaTrafego", EmitDefaultValue=false)]
        public long? CodigoGuiaTrafego { get; set; }


        /// <summary>
        /// Gets or Sets DocumentoOficialEntradaItem
        /// </summary>
        [DataMember(Name="documentoOficialEntradaItem", EmitDefaultValue=false)]
        public List<DocumentoOficialEntradaItem> DocumentoOficialEntradaItem { get; set; }

        /// <summary>
        /// Gets or Sets PermitirBaixa
        /// </summary>
        [DataMember(Name="permitirBaixa", EmitDefaultValue=false)]
        public bool? PermitirBaixa { get; set; }

        /// <summary>
        /// Gets or Sets PossuiAvaria
        /// </summary>
        [DataMember(Name="possuiAvaria", EmitDefaultValue=false)]
        public bool? PossuiAvaria { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DocumentoOficialEntradaDTO {\n");
            sb.Append("  CodigoEstabelecimento: ").Append(CodigoEstabelecimento).Append("\n");
            sb.Append("  CodigoEmpresa: ").Append(CodigoEmpresa).Append("\n");
            sb.Append("  TipoDocumento: ").Append(TipoDocumento).Append("\n");
            sb.Append("  SerieDocumento: ").Append(SerieDocumento).Append("\n");
            sb.Append("  DocumentoOficialEntrada: ").Append(DocumentoOficialEntrada).Append("\n");
            sb.Append("  CodigoDocumento: ").Append(CodigoDocumento).Append("\n");
            sb.Append("  DataEmissao: ").Append(DataEmissao).Append("\n");
            sb.Append("  DataMovimento: ").Append(DataMovimento).Append("\n");
            sb.Append("  ValorTotalDocumento: ").Append(ValorTotalDocumento).Append("\n");
            sb.Append("  ValorTotalProduto: ").Append(ValorTotalProduto).Append("\n");
            sb.Append("  ValorBaseIcms: ").Append(ValorBaseIcms).Append("\n");
            sb.Append("  ValorIcms: ").Append(ValorIcms).Append("\n");
            sb.Append("  ValorBaseIcmsSub: ").Append(ValorBaseIcmsSub).Append("\n");
            sb.Append("  ValorIcmsSub: ").Append(ValorIcmsSub).Append("\n");
            sb.Append("  ValorBaseIpi: ").Append(ValorBaseIpi).Append("\n");
            sb.Append("  ValorIpi: ").Append(ValorIpi).Append("\n");
            sb.Append("  ValorFrete: ").Append(ValorFrete).Append("\n");
            sb.Append("  ValorSeguro: ").Append(ValorSeguro).Append("\n");
            sb.Append("  ValorDesconto: ").Append(ValorDesconto).Append("\n");
            sb.Append("  ValorAcrescimo: ").Append(ValorAcrescimo).Append("\n");
            sb.Append("  Integracao: ").Append(Integracao).Append("\n");
            sb.Append("  EspecieDocumento: ").Append(EspecieDocumento).Append("\n");
            sb.Append("  Cfop: ").Append(Cfop).Append("\n");
            sb.Append("  NaturezaOperacao: ").Append(NaturezaOperacao).Append("\n");
            sb.Append("  ModeloDocumento: ").Append(ModeloDocumento).Append("\n");
            sb.Append("  DocumentoRelacionado: ").Append(DocumentoRelacionado).Append("\n");
            sb.Append("  ObservacaoDocumento: ").Append(ObservacaoDocumento).Append("\n");
            sb.Append("  EspecieVolume: ").Append(EspecieVolume).Append("\n");
            sb.Append("  QuantidadeVolume: ").Append(QuantidadeVolume).Append("\n");
            sb.Append("  MarcaVolume: ").Append(MarcaVolume).Append("\n");
            sb.Append("  NumeroVolume: ").Append(NumeroVolume).Append("\n");
            sb.Append("  PlacaVeiculo: ").Append(PlacaVeiculo).Append("\n");
            sb.Append("  UfVeiculo: ").Append(UfVeiculo).Append("\n");
            sb.Append("  NomeMotorista: ").Append(NomeMotorista).Append("\n");
            sb.Append("  DocumentoMotorista: ").Append(DocumentoMotorista).Append("\n");
            sb.Append("  PesoBruto: ").Append(PesoBruto).Append("\n");
            sb.Append("  PesoLiquido: ").Append(PesoLiquido).Append("\n");
            sb.Append("  DataPrevisaoMovimento: ").Append(DataPrevisaoMovimento).Append("\n");
            sb.Append("  CodigoDestino: ").Append(CodigoDestino).Append("\n");
            sb.Append("  VolumeCubico: ").Append(VolumeCubico).Append("\n");
            sb.Append("  ConhecimentoTransporte: ").Append(ConhecimentoTransporte).Append("\n");
            sb.Append("  ValorServico: ").Append(ValorServico).Append("\n");
            sb.Append("  Usuario: ").Append(Usuario).Append("\n");
            sb.Append("  DataHistorico: ").Append(DataHistorico).Append("\n");
            sb.Append("  NumeroSelo: ").Append(NumeroSelo).Append("\n");
            sb.Append("  IdEnderecoEmpresa: ").Append(IdEnderecoEmpresa).Append("\n");
            sb.Append("  IdEnderecoEntrega: ").Append(IdEnderecoEntrega).Append("\n");
            sb.Append("  Transportadora: ").Append(Transportadora).Append("\n");
            sb.Append("  IdEnderecoTransportadora: ").Append(IdEnderecoTransportadora).Append("\n");
            sb.Append("  DocumentoQualidade: ").Append(DocumentoQualidade).Append("\n");
            sb.Append("  QuantidadeItem: ").Append(QuantidadeItem).Append("\n");
            sb.Append("  SistemaModulo: ").Append(SistemaModulo).Append("\n");
            sb.Append("  TipoFormulario: ").Append(TipoFormulario).Append("\n");
            sb.Append("  ValorAcrescimoItem: ").Append(ValorAcrescimoItem).Append("\n");
            sb.Append("  ValorDescontoItem: ").Append(ValorDescontoItem).Append("\n");
            sb.Append("  MensagemFiscal: ").Append(MensagemFiscal).Append("\n");
            sb.Append("  EmpresaEmitente: ").Append(EmpresaEmitente).Append("\n");
            sb.Append("  EmpresaDestino: ").Append(EmpresaDestino).Append("\n");
            sb.Append("  Depositante: ").Append(Depositante).Append("\n");
            sb.Append("  CodigoMatriz: ").Append(CodigoMatriz).Append("\n");
            sb.Append("  NumeroDocumento: ").Append(NumeroDocumento).Append("\n");
            sb.Append("  CnpjCpfEmpresa: ").Append(CnpjCpfEmpresa).Append("\n");
            sb.Append("  IeRgEmpresa: ").Append(IeRgEmpresa).Append("\n");
            sb.Append("  CentroCusto: ").Append(CentroCusto).Append("\n");
            sb.Append("  CodigoVendedor: ").Append(CodigoVendedor).Append("\n");
            sb.Append("  InformacaoAdicional1: ").Append(InformacaoAdicional1).Append("\n");
            sb.Append("  InformacaoAdicional2: ").Append(InformacaoAdicional2).Append("\n");
            sb.Append("  InformacaoAdicional3: ").Append(InformacaoAdicional3).Append("\n");
            sb.Append("  CnpjCpfEmitente: ").Append(CnpjCpfEmitente).Append("\n");
            sb.Append("  IeRgEmitente: ").Append(IeRgEmitente).Append("\n");
            sb.Append("  NumeroDocumentoFiscal: ").Append(NumeroDocumentoFiscal).Append("\n");
            sb.Append("  ValorMinimo: ").Append(ValorMinimo).Append("\n");
            sb.Append("  FatParcialOrdemSeparacao: ").Append(FatParcialOrdemSeparacao).Append("\n");
            sb.Append("  DataVencimento: ").Append(DataVencimento).Append("\n");
            sb.Append("  UsuarioGeracao: ").Append(UsuarioGeracao).Append("\n");
            sb.Append("  DataGeracao: ").Append(DataGeracao).Append("\n");
            sb.Append("  NfeChaveAcesso: ").Append(NfeChaveAcesso).Append("\n");
            sb.Append("  NfeDigestValue: ").Append(NfeDigestValue).Append("\n");
            sb.Append("  NfeDataRecebimento: ").Append(NfeDataRecebimento).Append("\n");
            sb.Append("  NfeId: ").Append(NfeId).Append("\n");
            sb.Append("  NfeAmbiente: ").Append(NfeAmbiente).Append("\n");
            sb.Append("  NfeTipoEmissao: ").Append(NfeTipoEmissao).Append("\n");
            sb.Append("  NfeTipoImpressao: ").Append(NfeTipoImpressao).Append("\n");
            sb.Append("  FinalidadeDocumento: ").Append(FinalidadeDocumento).Append("\n");
            sb.Append("  EnderecoProducao: ").Append(EnderecoProducao).Append("\n");
            sb.Append("  DescricaoDocumento: ").Append(DescricaoDocumento).Append("\n");
            sb.Append("  Faturado: ").Append(Faturado).Append("\n");
            sb.Append("  DescricaoMensagemContribuinte: ").Append(DescricaoMensagemContribuinte).Append("\n");
            sb.Append("  NfeProtocolo: ").Append(NfeProtocolo).Append("\n");
            sb.Append("  StDocumentoAtualizacao: ").Append(StDocumentoAtualizacao).Append("\n");
            sb.Append("  NfeUfEmbarque: ").Append(NfeUfEmbarque).Append("\n");
            sb.Append("  NfeLocalEmbarque: ").Append(NfeLocalEmbarque).Append("\n");
            sb.Append("  NumeroRecopi: ").Append(NumeroRecopi).Append("\n");
            sb.Append("  NfeDataRegistroDpec: ").Append(NfeDataRegistroDpec).Append("\n");
            sb.Append("  NfeRegistroDpec: ").Append(NfeRegistroDpec).Append("\n");
            sb.Append("  NfeJustificativa: ").Append(NfeJustificativa).Append("\n");
            sb.Append("  NfeVersao: ").Append(NfeVersao).Append("\n");
            sb.Append("  NfeDataAutorizacao: ").Append(NfeDataAutorizacao).Append("\n");
            sb.Append("  IeSubTributaria: ").Append(IeSubTributaria).Append("\n");
            sb.Append("  DataHoraEmissao: ").Append(DataHoraEmissao).Append("\n");
            sb.Append("  DataHoraMovimento: ").Append(DataHoraMovimento).Append("\n");
            sb.Append("  NfeConsumidorFinal: ").Append(NfeConsumidorFinal).Append("\n");
            sb.Append("  NfeIndicadorPresencial: ").Append(NfeIndicadorPresencial).Append("\n");
            sb.Append("  NfeLocalDespacho: ").Append(NfeLocalDespacho).Append("\n");
            sb.Append("  ArquivoEvento: ").Append(ArquivoEvento).Append("\n");
            sb.Append("  NfeImprimir: ").Append(NfeImprimir).Append("\n");
            sb.Append("  NfeChaveAcessoReferencia: ").Append(NfeChaveAcessoReferencia).Append("\n");
            sb.Append("  CodigoGuiaTrafego: ").Append(CodigoGuiaTrafego).Append("\n");
            sb.Append("  EstadoDocumentoOficial: ").Append(EstadoDocumentoOficial).Append("\n");
            sb.Append("  DocumentoOficialEntradaItem: ").Append(DocumentoOficialEntradaItem).Append("\n");
            sb.Append("  PermitirBaixa: ").Append(PermitirBaixa).Append("\n");
            sb.Append("  PossuiAvaria: ").Append(PossuiAvaria).Append("\n");
            sb.Append("  EstadoDocumentoArquivoUpload: ").Append(EstadoDocumentoArquivoUpload).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DocumentoOficialEntradaDTO);
        }

        /// <summary>
        /// Returns true if DocumentoOficialEntradaDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of DocumentoOficialEntradaDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DocumentoOficialEntradaDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodigoEstabelecimento == input.CodigoEstabelecimento ||
                    (this.CodigoEstabelecimento != null &&
                    this.CodigoEstabelecimento.Equals(input.CodigoEstabelecimento))
                ) && 
                (
                    this.CodigoEmpresa == input.CodigoEmpresa ||
                    (this.CodigoEmpresa != null &&
                    this.CodigoEmpresa.Equals(input.CodigoEmpresa))
                ) && 
                (
                    this.TipoDocumento == input.TipoDocumento ||
                    (this.TipoDocumento != null &&
                    this.TipoDocumento.Equals(input.TipoDocumento))
                ) && 
                (
                    this.SerieDocumento == input.SerieDocumento ||
                    (this.SerieDocumento != null &&
                    this.SerieDocumento.Equals(input.SerieDocumento))
                ) && 
                (
                    this.DocumentoOficialEntrada == input.DocumentoOficialEntrada ||
                    (this.DocumentoOficialEntrada != null &&
                    this.DocumentoOficialEntrada.Equals(input.DocumentoOficialEntrada))
                ) && 
                (
                    this.CodigoDocumento == input.CodigoDocumento ||
                    (this.CodigoDocumento != null &&
                    this.CodigoDocumento.Equals(input.CodigoDocumento))
                ) && 
                (
                    this.DataEmissao == input.DataEmissao ||
                    (this.DataEmissao != null &&
                    this.DataEmissao.Equals(input.DataEmissao))
                ) && 
                (
                    this.DataMovimento == input.DataMovimento ||
                    (this.DataMovimento != null &&
                    this.DataMovimento.Equals(input.DataMovimento))
                ) && 
                (
                    this.ValorTotalDocumento == input.ValorTotalDocumento ||
                    (this.ValorTotalDocumento != null &&
                    this.ValorTotalDocumento.Equals(input.ValorTotalDocumento))
                ) && 
                (
                    this.ValorTotalProduto == input.ValorTotalProduto ||
                    (this.ValorTotalProduto != null &&
                    this.ValorTotalProduto.Equals(input.ValorTotalProduto))
                ) && 
                (
                    this.ValorBaseIcms == input.ValorBaseIcms ||
                    (this.ValorBaseIcms != null &&
                    this.ValorBaseIcms.Equals(input.ValorBaseIcms))
                ) && 
                (
                    this.ValorIcms == input.ValorIcms ||
                    (this.ValorIcms != null &&
                    this.ValorIcms.Equals(input.ValorIcms))
                ) && 
                (
                    this.ValorBaseIcmsSub == input.ValorBaseIcmsSub ||
                    (this.ValorBaseIcmsSub != null &&
                    this.ValorBaseIcmsSub.Equals(input.ValorBaseIcmsSub))
                ) && 
                (
                    this.ValorIcmsSub == input.ValorIcmsSub ||
                    (this.ValorIcmsSub != null &&
                    this.ValorIcmsSub.Equals(input.ValorIcmsSub))
                ) && 
                (
                    this.ValorBaseIpi == input.ValorBaseIpi ||
                    (this.ValorBaseIpi != null &&
                    this.ValorBaseIpi.Equals(input.ValorBaseIpi))
                ) && 
                (
                    this.ValorIpi == input.ValorIpi ||
                    (this.ValorIpi != null &&
                    this.ValorIpi.Equals(input.ValorIpi))
                ) && 
                (
                    this.ValorFrete == input.ValorFrete ||
                    (this.ValorFrete != null &&
                    this.ValorFrete.Equals(input.ValorFrete))
                ) && 
                (
                    this.ValorSeguro == input.ValorSeguro ||
                    (this.ValorSeguro != null &&
                    this.ValorSeguro.Equals(input.ValorSeguro))
                ) && 
                (
                    this.ValorDesconto == input.ValorDesconto ||
                    (this.ValorDesconto != null &&
                    this.ValorDesconto.Equals(input.ValorDesconto))
                ) && 
                (
                    this.ValorAcrescimo == input.ValorAcrescimo ||
                    (this.ValorAcrescimo != null &&
                    this.ValorAcrescimo.Equals(input.ValorAcrescimo))
                ) && 
                (
                    this.Integracao == input.Integracao ||
                    (this.Integracao != null &&
                    this.Integracao.Equals(input.Integracao))
                ) && 
                (
                    this.EspecieDocumento == input.EspecieDocumento ||
                    (this.EspecieDocumento != null &&
                    this.EspecieDocumento.Equals(input.EspecieDocumento))
                ) && 
                (
                    this.Cfop == input.Cfop ||
                    (this.Cfop != null &&
                    this.Cfop.Equals(input.Cfop))
                ) && 
                (
                    this.NaturezaOperacao == input.NaturezaOperacao ||
                    (this.NaturezaOperacao != null &&
                    this.NaturezaOperacao.Equals(input.NaturezaOperacao))
                ) && 
                (
                    this.ModeloDocumento == input.ModeloDocumento ||
                    (this.ModeloDocumento != null &&
                    this.ModeloDocumento.Equals(input.ModeloDocumento))
                ) && 
                (
                    this.DocumentoRelacionado == input.DocumentoRelacionado ||
                    (this.DocumentoRelacionado != null &&
                    this.DocumentoRelacionado.Equals(input.DocumentoRelacionado))
                ) && 
                (
                    this.ObservacaoDocumento == input.ObservacaoDocumento ||
                    (this.ObservacaoDocumento != null &&
                    this.ObservacaoDocumento.Equals(input.ObservacaoDocumento))
                ) && 
                (
                    this.EspecieVolume == input.EspecieVolume ||
                    (this.EspecieVolume != null &&
                    this.EspecieVolume.Equals(input.EspecieVolume))
                ) && 
                (
                    this.QuantidadeVolume == input.QuantidadeVolume ||
                    (this.QuantidadeVolume != null &&
                    this.QuantidadeVolume.Equals(input.QuantidadeVolume))
                ) && 
                (
                    this.MarcaVolume == input.MarcaVolume ||
                    (this.MarcaVolume != null &&
                    this.MarcaVolume.Equals(input.MarcaVolume))
                ) && 
                (
                    this.NumeroVolume == input.NumeroVolume ||
                    (this.NumeroVolume != null &&
                    this.NumeroVolume.Equals(input.NumeroVolume))
                ) && 
                (
                    this.PlacaVeiculo == input.PlacaVeiculo ||
                    (this.PlacaVeiculo != null &&
                    this.PlacaVeiculo.Equals(input.PlacaVeiculo))
                ) && 
                (
                    this.UfVeiculo == input.UfVeiculo ||
                    (this.UfVeiculo != null &&
                    this.UfVeiculo.Equals(input.UfVeiculo))
                ) && 
                (
                    this.NomeMotorista == input.NomeMotorista ||
                    (this.NomeMotorista != null &&
                    this.NomeMotorista.Equals(input.NomeMotorista))
                ) && 
                (
                    this.DocumentoMotorista == input.DocumentoMotorista ||
                    (this.DocumentoMotorista != null &&
                    this.DocumentoMotorista.Equals(input.DocumentoMotorista))
                ) && 
                (
                    this.PesoBruto == input.PesoBruto ||
                    (this.PesoBruto != null &&
                    this.PesoBruto.Equals(input.PesoBruto))
                ) && 
                (
                    this.PesoLiquido == input.PesoLiquido ||
                    (this.PesoLiquido != null &&
                    this.PesoLiquido.Equals(input.PesoLiquido))
                ) && 
                (
                    this.DataPrevisaoMovimento == input.DataPrevisaoMovimento ||
                    (this.DataPrevisaoMovimento != null &&
                    this.DataPrevisaoMovimento.Equals(input.DataPrevisaoMovimento))
                ) && 
                (
                    this.CodigoDestino == input.CodigoDestino ||
                    (this.CodigoDestino != null &&
                    this.CodigoDestino.Equals(input.CodigoDestino))
                ) && 
                (
                    this.VolumeCubico == input.VolumeCubico ||
                    (this.VolumeCubico != null &&
                    this.VolumeCubico.Equals(input.VolumeCubico))
                ) && 
                (
                    this.ConhecimentoTransporte == input.ConhecimentoTransporte ||
                    (this.ConhecimentoTransporte != null &&
                    this.ConhecimentoTransporte.Equals(input.ConhecimentoTransporte))
                ) && 
                (
                    this.ValorServico == input.ValorServico ||
                    (this.ValorServico != null &&
                    this.ValorServico.Equals(input.ValorServico))
                ) && 
                (
                    this.Usuario == input.Usuario ||
                    (this.Usuario != null &&
                    this.Usuario.Equals(input.Usuario))
                ) && 
                (
                    this.DataHistorico == input.DataHistorico ||
                    (this.DataHistorico != null &&
                    this.DataHistorico.Equals(input.DataHistorico))
                ) && 
                (
                    this.NumeroSelo == input.NumeroSelo ||
                    (this.NumeroSelo != null &&
                    this.NumeroSelo.Equals(input.NumeroSelo))
                ) && 
                (
                    this.IdEnderecoEmpresa == input.IdEnderecoEmpresa ||
                    (this.IdEnderecoEmpresa != null &&
                    this.IdEnderecoEmpresa.Equals(input.IdEnderecoEmpresa))
                ) && 
                (
                    this.IdEnderecoEntrega == input.IdEnderecoEntrega ||
                    (this.IdEnderecoEntrega != null &&
                    this.IdEnderecoEntrega.Equals(input.IdEnderecoEntrega))
                ) && 
                (
                    this.Transportadora == input.Transportadora ||
                    (this.Transportadora != null &&
                    this.Transportadora.Equals(input.Transportadora))
                ) && 
                (
                    this.IdEnderecoTransportadora == input.IdEnderecoTransportadora ||
                    (this.IdEnderecoTransportadora != null &&
                    this.IdEnderecoTransportadora.Equals(input.IdEnderecoTransportadora))
                ) && 
                (
                    this.DocumentoQualidade == input.DocumentoQualidade ||
                    (this.DocumentoQualidade != null &&
                    this.DocumentoQualidade.Equals(input.DocumentoQualidade))
                ) && 
                (
                    this.QuantidadeItem == input.QuantidadeItem ||
                    (this.QuantidadeItem != null &&
                    this.QuantidadeItem.Equals(input.QuantidadeItem))
                ) && 
                (
                    this.SistemaModulo == input.SistemaModulo ||
                    (this.SistemaModulo != null &&
                    this.SistemaModulo.Equals(input.SistemaModulo))
                ) && 
                (
                    this.TipoFormulario == input.TipoFormulario ||
                    (this.TipoFormulario != null &&
                    this.TipoFormulario.Equals(input.TipoFormulario))
                ) && 
                (
                    this.ValorAcrescimoItem == input.ValorAcrescimoItem ||
                    (this.ValorAcrescimoItem != null &&
                    this.ValorAcrescimoItem.Equals(input.ValorAcrescimoItem))
                ) && 
                (
                    this.ValorDescontoItem == input.ValorDescontoItem ||
                    (this.ValorDescontoItem != null &&
                    this.ValorDescontoItem.Equals(input.ValorDescontoItem))
                ) && 
                (
                    this.MensagemFiscal == input.MensagemFiscal ||
                    (this.MensagemFiscal != null &&
                    this.MensagemFiscal.Equals(input.MensagemFiscal))
                ) && 
                (
                    this.EmpresaEmitente == input.EmpresaEmitente ||
                    (this.EmpresaEmitente != null &&
                    this.EmpresaEmitente.Equals(input.EmpresaEmitente))
                ) && 
                (
                    this.EmpresaDestino == input.EmpresaDestino ||
                    (this.EmpresaDestino != null &&
                    this.EmpresaDestino.Equals(input.EmpresaDestino))
                ) && 
                (
                    this.Depositante == input.Depositante ||
                    (this.Depositante != null &&
                    this.Depositante.Equals(input.Depositante))
                ) && 
                (
                    this.CodigoMatriz == input.CodigoMatriz ||
                    (this.CodigoMatriz != null &&
                    this.CodigoMatriz.Equals(input.CodigoMatriz))
                ) && 
                (
                    this.NumeroDocumento == input.NumeroDocumento ||
                    (this.NumeroDocumento != null &&
                    this.NumeroDocumento.Equals(input.NumeroDocumento))
                ) && 
                (
                    this.CnpjCpfEmpresa == input.CnpjCpfEmpresa ||
                    (this.CnpjCpfEmpresa != null &&
                    this.CnpjCpfEmpresa.Equals(input.CnpjCpfEmpresa))
                ) && 
                (
                    this.IeRgEmpresa == input.IeRgEmpresa ||
                    (this.IeRgEmpresa != null &&
                    this.IeRgEmpresa.Equals(input.IeRgEmpresa))
                ) && 
                (
                    this.CentroCusto == input.CentroCusto ||
                    (this.CentroCusto != null &&
                    this.CentroCusto.Equals(input.CentroCusto))
                ) && 
                (
                    this.CodigoVendedor == input.CodigoVendedor ||
                    (this.CodigoVendedor != null &&
                    this.CodigoVendedor.Equals(input.CodigoVendedor))
                ) && 
                (
                    this.InformacaoAdicional1 == input.InformacaoAdicional1 ||
                    (this.InformacaoAdicional1 != null &&
                    this.InformacaoAdicional1.Equals(input.InformacaoAdicional1))
                ) && 
                (
                    this.InformacaoAdicional2 == input.InformacaoAdicional2 ||
                    (this.InformacaoAdicional2 != null &&
                    this.InformacaoAdicional2.Equals(input.InformacaoAdicional2))
                ) && 
                (
                    this.InformacaoAdicional3 == input.InformacaoAdicional3 ||
                    (this.InformacaoAdicional3 != null &&
                    this.InformacaoAdicional3.Equals(input.InformacaoAdicional3))
                ) && 
                (
                    this.CnpjCpfEmitente == input.CnpjCpfEmitente ||
                    (this.CnpjCpfEmitente != null &&
                    this.CnpjCpfEmitente.Equals(input.CnpjCpfEmitente))
                ) && 
                (
                    this.IeRgEmitente == input.IeRgEmitente ||
                    (this.IeRgEmitente != null &&
                    this.IeRgEmitente.Equals(input.IeRgEmitente))
                ) && 
                (
                    this.NumeroDocumentoFiscal == input.NumeroDocumentoFiscal ||
                    (this.NumeroDocumentoFiscal != null &&
                    this.NumeroDocumentoFiscal.Equals(input.NumeroDocumentoFiscal))
                ) && 
                (
                    this.ValorMinimo == input.ValorMinimo ||
                    (this.ValorMinimo != null &&
                    this.ValorMinimo.Equals(input.ValorMinimo))
                ) && 
                (
                    this.FatParcialOrdemSeparacao == input.FatParcialOrdemSeparacao ||
                    (this.FatParcialOrdemSeparacao != null &&
                    this.FatParcialOrdemSeparacao.Equals(input.FatParcialOrdemSeparacao))
                ) && 
                (
                    this.DataVencimento == input.DataVencimento ||
                    (this.DataVencimento != null &&
                    this.DataVencimento.Equals(input.DataVencimento))
                ) && 
                (
                    this.UsuarioGeracao == input.UsuarioGeracao ||
                    (this.UsuarioGeracao != null &&
                    this.UsuarioGeracao.Equals(input.UsuarioGeracao))
                ) && 
                (
                    this.DataGeracao == input.DataGeracao ||
                    (this.DataGeracao != null &&
                    this.DataGeracao.Equals(input.DataGeracao))
                ) && 
                (
                    this.NfeChaveAcesso == input.NfeChaveAcesso ||
                    (this.NfeChaveAcesso != null &&
                    this.NfeChaveAcesso.Equals(input.NfeChaveAcesso))
                ) && 
                (
                    this.NfeDigestValue == input.NfeDigestValue ||
                    (this.NfeDigestValue != null &&
                    this.NfeDigestValue.Equals(input.NfeDigestValue))
                ) && 
                (
                    this.NfeDataRecebimento == input.NfeDataRecebimento ||
                    (this.NfeDataRecebimento != null &&
                    this.NfeDataRecebimento.Equals(input.NfeDataRecebimento))
                ) && 
                (
                    this.NfeId == input.NfeId ||
                    (this.NfeId != null &&
                    this.NfeId.Equals(input.NfeId))
                ) && 
                (
                    this.NfeAmbiente == input.NfeAmbiente ||
                    (this.NfeAmbiente != null &&
                    this.NfeAmbiente.Equals(input.NfeAmbiente))
                ) && 
                (
                    this.NfeTipoEmissao == input.NfeTipoEmissao ||
                    (this.NfeTipoEmissao != null &&
                    this.NfeTipoEmissao.Equals(input.NfeTipoEmissao))
                ) && 
                (
                    this.NfeTipoImpressao == input.NfeTipoImpressao ||
                    (this.NfeTipoImpressao != null &&
                    this.NfeTipoImpressao.Equals(input.NfeTipoImpressao))
                ) && 
                (
                    this.FinalidadeDocumento == input.FinalidadeDocumento ||
                    (this.FinalidadeDocumento != null &&
                    this.FinalidadeDocumento.Equals(input.FinalidadeDocumento))
                ) && 
                (
                    this.EnderecoProducao == input.EnderecoProducao ||
                    (this.EnderecoProducao != null &&
                    this.EnderecoProducao.Equals(input.EnderecoProducao))
                ) && 
                (
                    this.DescricaoDocumento == input.DescricaoDocumento ||
                    (this.DescricaoDocumento != null &&
                    this.DescricaoDocumento.Equals(input.DescricaoDocumento))
                ) && 
                (
                    this.Faturado == input.Faturado ||
                    (this.Faturado != null &&
                    this.Faturado.Equals(input.Faturado))
                ) && 
                (
                    this.DescricaoMensagemContribuinte == input.DescricaoMensagemContribuinte ||
                    (this.DescricaoMensagemContribuinte != null &&
                    this.DescricaoMensagemContribuinte.Equals(input.DescricaoMensagemContribuinte))
                ) && 
                (
                    this.NfeProtocolo == input.NfeProtocolo ||
                    (this.NfeProtocolo != null &&
                    this.NfeProtocolo.Equals(input.NfeProtocolo))
                ) && 
                (
                    this.StDocumentoAtualizacao == input.StDocumentoAtualizacao ||
                    (this.StDocumentoAtualizacao != null &&
                    this.StDocumentoAtualizacao.Equals(input.StDocumentoAtualizacao))
                ) && 
                (
                    this.NfeUfEmbarque == input.NfeUfEmbarque ||
                    (this.NfeUfEmbarque != null &&
                    this.NfeUfEmbarque.Equals(input.NfeUfEmbarque))
                ) && 
                (
                    this.NfeLocalEmbarque == input.NfeLocalEmbarque ||
                    (this.NfeLocalEmbarque != null &&
                    this.NfeLocalEmbarque.Equals(input.NfeLocalEmbarque))
                ) && 
                (
                    this.NumeroRecopi == input.NumeroRecopi ||
                    (this.NumeroRecopi != null &&
                    this.NumeroRecopi.Equals(input.NumeroRecopi))
                ) && 
                (
                    this.NfeDataRegistroDpec == input.NfeDataRegistroDpec ||
                    (this.NfeDataRegistroDpec != null &&
                    this.NfeDataRegistroDpec.Equals(input.NfeDataRegistroDpec))
                ) && 
                (
                    this.NfeRegistroDpec == input.NfeRegistroDpec ||
                    (this.NfeRegistroDpec != null &&
                    this.NfeRegistroDpec.Equals(input.NfeRegistroDpec))
                ) && 
                (
                    this.NfeJustificativa == input.NfeJustificativa ||
                    (this.NfeJustificativa != null &&
                    this.NfeJustificativa.Equals(input.NfeJustificativa))
                ) && 
                (
                    this.NfeVersao == input.NfeVersao ||
                    (this.NfeVersao != null &&
                    this.NfeVersao.Equals(input.NfeVersao))
                ) && 
                (
                    this.NfeDataAutorizacao == input.NfeDataAutorizacao ||
                    (this.NfeDataAutorizacao != null &&
                    this.NfeDataAutorizacao.Equals(input.NfeDataAutorizacao))
                ) && 
                (
                    this.IeSubTributaria == input.IeSubTributaria ||
                    (this.IeSubTributaria != null &&
                    this.IeSubTributaria.Equals(input.IeSubTributaria))
                ) && 
                (
                    this.DataHoraEmissao == input.DataHoraEmissao ||
                    (this.DataHoraEmissao != null &&
                    this.DataHoraEmissao.Equals(input.DataHoraEmissao))
                ) && 
                (
                    this.DataHoraMovimento == input.DataHoraMovimento ||
                    (this.DataHoraMovimento != null &&
                    this.DataHoraMovimento.Equals(input.DataHoraMovimento))
                ) && 
                (
                    this.NfeConsumidorFinal == input.NfeConsumidorFinal ||
                    (this.NfeConsumidorFinal != null &&
                    this.NfeConsumidorFinal.Equals(input.NfeConsumidorFinal))
                ) && 
                (
                    this.NfeIndicadorPresencial == input.NfeIndicadorPresencial ||
                    (this.NfeIndicadorPresencial != null &&
                    this.NfeIndicadorPresencial.Equals(input.NfeIndicadorPresencial))
                ) && 
                (
                    this.NfeLocalDespacho == input.NfeLocalDespacho ||
                    (this.NfeLocalDespacho != null &&
                    this.NfeLocalDespacho.Equals(input.NfeLocalDespacho))
                ) && 
                (
                    this.ArquivoEvento == input.ArquivoEvento ||
                    (this.ArquivoEvento != null &&
                    this.ArquivoEvento.Equals(input.ArquivoEvento))
                ) && 
                (
                    this.NfeImprimir == input.NfeImprimir ||
                    (this.NfeImprimir != null &&
                    this.NfeImprimir.Equals(input.NfeImprimir))
                ) && 
                (
                    this.NfeChaveAcessoReferencia == input.NfeChaveAcessoReferencia ||
                    (this.NfeChaveAcessoReferencia != null &&
                    this.NfeChaveAcessoReferencia.Equals(input.NfeChaveAcessoReferencia))
                ) && 
                (
                    this.CodigoGuiaTrafego == input.CodigoGuiaTrafego ||
                    (this.CodigoGuiaTrafego != null &&
                    this.CodigoGuiaTrafego.Equals(input.CodigoGuiaTrafego))
                ) && 
                (
                    this.EstadoDocumentoOficial == input.EstadoDocumentoOficial ||
                    (this.EstadoDocumentoOficial != null &&
                    this.EstadoDocumentoOficial.Equals(input.EstadoDocumentoOficial))
                ) && 
                (
                    this.DocumentoOficialEntradaItem == input.DocumentoOficialEntradaItem ||
                    this.DocumentoOficialEntradaItem != null &&
                    this.DocumentoOficialEntradaItem.SequenceEqual(input.DocumentoOficialEntradaItem)
                ) && 
                (
                    this.PermitirBaixa == input.PermitirBaixa ||
                    (this.PermitirBaixa != null &&
                    this.PermitirBaixa.Equals(input.PermitirBaixa))
                ) && 
                (
                    this.PossuiAvaria == input.PossuiAvaria ||
                    (this.PossuiAvaria != null &&
                    this.PossuiAvaria.Equals(input.PossuiAvaria))
                ) && 
                (
                    this.EstadoDocumentoArquivoUpload == input.EstadoDocumentoArquivoUpload ||
                    (this.EstadoDocumentoArquivoUpload != null &&
                    this.EstadoDocumentoArquivoUpload.Equals(input.EstadoDocumentoArquivoUpload))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodigoEstabelecimento != null)
                    hashCode = hashCode * 59 + this.CodigoEstabelecimento.GetHashCode();
                if (this.CodigoEmpresa != null)
                    hashCode = hashCode * 59 + this.CodigoEmpresa.GetHashCode();
                if (this.TipoDocumento != null)
                    hashCode = hashCode * 59 + this.TipoDocumento.GetHashCode();
                if (this.SerieDocumento != null)
                    hashCode = hashCode * 59 + this.SerieDocumento.GetHashCode();
                if (this.DocumentoOficialEntrada != null)
                    hashCode = hashCode * 59 + this.DocumentoOficialEntrada.GetHashCode();
                if (this.CodigoDocumento != null)
                    hashCode = hashCode * 59 + this.CodigoDocumento.GetHashCode();
                if (this.DataEmissao != null)
                    hashCode = hashCode * 59 + this.DataEmissao.GetHashCode();
                if (this.DataMovimento != null)
                    hashCode = hashCode * 59 + this.DataMovimento.GetHashCode();
                if (this.ValorTotalDocumento != null)
                    hashCode = hashCode * 59 + this.ValorTotalDocumento.GetHashCode();
                if (this.ValorTotalProduto != null)
                    hashCode = hashCode * 59 + this.ValorTotalProduto.GetHashCode();
                if (this.ValorBaseIcms != null)
                    hashCode = hashCode * 59 + this.ValorBaseIcms.GetHashCode();
                if (this.ValorIcms != null)
                    hashCode = hashCode * 59 + this.ValorIcms.GetHashCode();
                if (this.ValorBaseIcmsSub != null)
                    hashCode = hashCode * 59 + this.ValorBaseIcmsSub.GetHashCode();
                if (this.ValorIcmsSub != null)
                    hashCode = hashCode * 59 + this.ValorIcmsSub.GetHashCode();
                if (this.ValorBaseIpi != null)
                    hashCode = hashCode * 59 + this.ValorBaseIpi.GetHashCode();
                if (this.ValorIpi != null)
                    hashCode = hashCode * 59 + this.ValorIpi.GetHashCode();
                if (this.ValorFrete != null)
                    hashCode = hashCode * 59 + this.ValorFrete.GetHashCode();
                if (this.ValorSeguro != null)
                    hashCode = hashCode * 59 + this.ValorSeguro.GetHashCode();
                if (this.ValorDesconto != null)
                    hashCode = hashCode * 59 + this.ValorDesconto.GetHashCode();
                if (this.ValorAcrescimo != null)
                    hashCode = hashCode * 59 + this.ValorAcrescimo.GetHashCode();
                if (this.Integracao != null)
                    hashCode = hashCode * 59 + this.Integracao.GetHashCode();
                if (this.EspecieDocumento != null)
                    hashCode = hashCode * 59 + this.EspecieDocumento.GetHashCode();
                if (this.Cfop != null)
                    hashCode = hashCode * 59 + this.Cfop.GetHashCode();
                if (this.NaturezaOperacao != null)
                    hashCode = hashCode * 59 + this.NaturezaOperacao.GetHashCode();
                if (this.ModeloDocumento != null)
                    hashCode = hashCode * 59 + this.ModeloDocumento.GetHashCode();
                if (this.DocumentoRelacionado != null)
                    hashCode = hashCode * 59 + this.DocumentoRelacionado.GetHashCode();
                if (this.ObservacaoDocumento != null)
                    hashCode = hashCode * 59 + this.ObservacaoDocumento.GetHashCode();
                if (this.EspecieVolume != null)
                    hashCode = hashCode * 59 + this.EspecieVolume.GetHashCode();
                if (this.QuantidadeVolume != null)
                    hashCode = hashCode * 59 + this.QuantidadeVolume.GetHashCode();
                if (this.MarcaVolume != null)
                    hashCode = hashCode * 59 + this.MarcaVolume.GetHashCode();
                if (this.NumeroVolume != null)
                    hashCode = hashCode * 59 + this.NumeroVolume.GetHashCode();
                if (this.PlacaVeiculo != null)
                    hashCode = hashCode * 59 + this.PlacaVeiculo.GetHashCode();
                if (this.UfVeiculo != null)
                    hashCode = hashCode * 59 + this.UfVeiculo.GetHashCode();
                if (this.NomeMotorista != null)
                    hashCode = hashCode * 59 + this.NomeMotorista.GetHashCode();
                if (this.DocumentoMotorista != null)
                    hashCode = hashCode * 59 + this.DocumentoMotorista.GetHashCode();
                if (this.PesoBruto != null)
                    hashCode = hashCode * 59 + this.PesoBruto.GetHashCode();
                if (this.PesoLiquido != null)
                    hashCode = hashCode * 59 + this.PesoLiquido.GetHashCode();
                if (this.DataPrevisaoMovimento != null)
                    hashCode = hashCode * 59 + this.DataPrevisaoMovimento.GetHashCode();
                if (this.CodigoDestino != null)
                    hashCode = hashCode * 59 + this.CodigoDestino.GetHashCode();
                if (this.VolumeCubico != null)
                    hashCode = hashCode * 59 + this.VolumeCubico.GetHashCode();
                if (this.ConhecimentoTransporte != null)
                    hashCode = hashCode * 59 + this.ConhecimentoTransporte.GetHashCode();
                if (this.ValorServico != null)
                    hashCode = hashCode * 59 + this.ValorServico.GetHashCode();
                if (this.Usuario != null)
                    hashCode = hashCode * 59 + this.Usuario.GetHashCode();
                if (this.DataHistorico != null)
                    hashCode = hashCode * 59 + this.DataHistorico.GetHashCode();
                if (this.NumeroSelo != null)
                    hashCode = hashCode * 59 + this.NumeroSelo.GetHashCode();
                if (this.IdEnderecoEmpresa != null)
                    hashCode = hashCode * 59 + this.IdEnderecoEmpresa.GetHashCode();
                if (this.IdEnderecoEntrega != null)
                    hashCode = hashCode * 59 + this.IdEnderecoEntrega.GetHashCode();
                if (this.Transportadora != null)
                    hashCode = hashCode * 59 + this.Transportadora.GetHashCode();
                if (this.IdEnderecoTransportadora != null)
                    hashCode = hashCode * 59 + this.IdEnderecoTransportadora.GetHashCode();
                if (this.DocumentoQualidade != null)
                    hashCode = hashCode * 59 + this.DocumentoQualidade.GetHashCode();
                if (this.QuantidadeItem != null)
                    hashCode = hashCode * 59 + this.QuantidadeItem.GetHashCode();
                if (this.SistemaModulo != null)
                    hashCode = hashCode * 59 + this.SistemaModulo.GetHashCode();
                if (this.TipoFormulario != null)
                    hashCode = hashCode * 59 + this.TipoFormulario.GetHashCode();
                if (this.ValorAcrescimoItem != null)
                    hashCode = hashCode * 59 + this.ValorAcrescimoItem.GetHashCode();
                if (this.ValorDescontoItem != null)
                    hashCode = hashCode * 59 + this.ValorDescontoItem.GetHashCode();
                if (this.MensagemFiscal != null)
                    hashCode = hashCode * 59 + this.MensagemFiscal.GetHashCode();
                if (this.EmpresaEmitente != null)
                    hashCode = hashCode * 59 + this.EmpresaEmitente.GetHashCode();
                if (this.EmpresaDestino != null)
                    hashCode = hashCode * 59 + this.EmpresaDestino.GetHashCode();
                if (this.Depositante != null)
                    hashCode = hashCode * 59 + this.Depositante.GetHashCode();
                if (this.CodigoMatriz != null)
                    hashCode = hashCode * 59 + this.CodigoMatriz.GetHashCode();
                if (this.NumeroDocumento != null)
                    hashCode = hashCode * 59 + this.NumeroDocumento.GetHashCode();
                if (this.CnpjCpfEmpresa != null)
                    hashCode = hashCode * 59 + this.CnpjCpfEmpresa.GetHashCode();
                if (this.IeRgEmpresa != null)
                    hashCode = hashCode * 59 + this.IeRgEmpresa.GetHashCode();
                if (this.CentroCusto != null)
                    hashCode = hashCode * 59 + this.CentroCusto.GetHashCode();
                if (this.CodigoVendedor != null)
                    hashCode = hashCode * 59 + this.CodigoVendedor.GetHashCode();
                if (this.InformacaoAdicional1 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional1.GetHashCode();
                if (this.InformacaoAdicional2 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional2.GetHashCode();
                if (this.InformacaoAdicional3 != null)
                    hashCode = hashCode * 59 + this.InformacaoAdicional3.GetHashCode();
                if (this.CnpjCpfEmitente != null)
                    hashCode = hashCode * 59 + this.CnpjCpfEmitente.GetHashCode();
                if (this.IeRgEmitente != null)
                    hashCode = hashCode * 59 + this.IeRgEmitente.GetHashCode();
                if (this.NumeroDocumentoFiscal != null)
                    hashCode = hashCode * 59 + this.NumeroDocumentoFiscal.GetHashCode();
                if (this.ValorMinimo != null)
                    hashCode = hashCode * 59 + this.ValorMinimo.GetHashCode();
                if (this.FatParcialOrdemSeparacao != null)
                    hashCode = hashCode * 59 + this.FatParcialOrdemSeparacao.GetHashCode();
                if (this.DataVencimento != null)
                    hashCode = hashCode * 59 + this.DataVencimento.GetHashCode();
                if (this.UsuarioGeracao != null)
                    hashCode = hashCode * 59 + this.UsuarioGeracao.GetHashCode();
                if (this.DataGeracao != null)
                    hashCode = hashCode * 59 + this.DataGeracao.GetHashCode();
                if (this.NfeChaveAcesso != null)
                    hashCode = hashCode * 59 + this.NfeChaveAcesso.GetHashCode();
                if (this.NfeDigestValue != null)
                    hashCode = hashCode * 59 + this.NfeDigestValue.GetHashCode();
                if (this.NfeDataRecebimento != null)
                    hashCode = hashCode * 59 + this.NfeDataRecebimento.GetHashCode();
                if (this.NfeId != null)
                    hashCode = hashCode * 59 + this.NfeId.GetHashCode();
                if (this.NfeAmbiente != null)
                    hashCode = hashCode * 59 + this.NfeAmbiente.GetHashCode();
                if (this.NfeTipoEmissao != null)
                    hashCode = hashCode * 59 + this.NfeTipoEmissao.GetHashCode();
                if (this.NfeTipoImpressao != null)
                    hashCode = hashCode * 59 + this.NfeTipoImpressao.GetHashCode();
                if (this.FinalidadeDocumento != null)
                    hashCode = hashCode * 59 + this.FinalidadeDocumento.GetHashCode();
                if (this.EnderecoProducao != null)
                    hashCode = hashCode * 59 + this.EnderecoProducao.GetHashCode();
                if (this.DescricaoDocumento != null)
                    hashCode = hashCode * 59 + this.DescricaoDocumento.GetHashCode();
                if (this.Faturado != null)
                    hashCode = hashCode * 59 + this.Faturado.GetHashCode();
                if (this.DescricaoMensagemContribuinte != null)
                    hashCode = hashCode * 59 + this.DescricaoMensagemContribuinte.GetHashCode();
                if (this.NfeProtocolo != null)
                    hashCode = hashCode * 59 + this.NfeProtocolo.GetHashCode();
                if (this.StDocumentoAtualizacao != null)
                    hashCode = hashCode * 59 + this.StDocumentoAtualizacao.GetHashCode();
                if (this.NfeUfEmbarque != null)
                    hashCode = hashCode * 59 + this.NfeUfEmbarque.GetHashCode();
                if (this.NfeLocalEmbarque != null)
                    hashCode = hashCode * 59 + this.NfeLocalEmbarque.GetHashCode();
                if (this.NumeroRecopi != null)
                    hashCode = hashCode * 59 + this.NumeroRecopi.GetHashCode();
                if (this.NfeDataRegistroDpec != null)
                    hashCode = hashCode * 59 + this.NfeDataRegistroDpec.GetHashCode();
                if (this.NfeRegistroDpec != null)
                    hashCode = hashCode * 59 + this.NfeRegistroDpec.GetHashCode();
                if (this.NfeJustificativa != null)
                    hashCode = hashCode * 59 + this.NfeJustificativa.GetHashCode();
                if (this.NfeVersao != null)
                    hashCode = hashCode * 59 + this.NfeVersao.GetHashCode();
                if (this.NfeDataAutorizacao != null)
                    hashCode = hashCode * 59 + this.NfeDataAutorizacao.GetHashCode();
                if (this.IeSubTributaria != null)
                    hashCode = hashCode * 59 + this.IeSubTributaria.GetHashCode();
                if (this.DataHoraEmissao != null)
                    hashCode = hashCode * 59 + this.DataHoraEmissao.GetHashCode();
                if (this.DataHoraMovimento != null)
                    hashCode = hashCode * 59 + this.DataHoraMovimento.GetHashCode();
                if (this.NfeConsumidorFinal != null)
                    hashCode = hashCode * 59 + this.NfeConsumidorFinal.GetHashCode();
                if (this.NfeIndicadorPresencial != null)
                    hashCode = hashCode * 59 + this.NfeIndicadorPresencial.GetHashCode();
                if (this.NfeLocalDespacho != null)
                    hashCode = hashCode * 59 + this.NfeLocalDespacho.GetHashCode();
                if (this.ArquivoEvento != null)
                    hashCode = hashCode * 59 + this.ArquivoEvento.GetHashCode();
                if (this.NfeImprimir != null)
                    hashCode = hashCode * 59 + this.NfeImprimir.GetHashCode();
                if (this.NfeChaveAcessoReferencia != null)
                    hashCode = hashCode * 59 + this.NfeChaveAcessoReferencia.GetHashCode();
                if (this.CodigoGuiaTrafego != null)
                    hashCode = hashCode * 59 + this.CodigoGuiaTrafego.GetHashCode();
                if (this.EstadoDocumentoOficial != null)
                    hashCode = hashCode * 59 + this.EstadoDocumentoOficial.GetHashCode();
                if (this.DocumentoOficialEntradaItem != null)
                    hashCode = hashCode * 59 + this.DocumentoOficialEntradaItem.GetHashCode();
                if (this.PermitirBaixa != null)
                    hashCode = hashCode * 59 + this.PermitirBaixa.GetHashCode();
                if (this.PossuiAvaria != null)
                    hashCode = hashCode * 59 + this.PossuiAvaria.GetHashCode();
                if (this.EstadoDocumentoArquivoUpload != null)
                    hashCode = hashCode * 59 + this.EstadoDocumentoArquivoUpload.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
